(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["Tensorflow"],{"011b":function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n("76c2"),a=n("a3f7"),s=n("c77c"),o=n("b9b9"),i=n("54ef"),c=n("6791"),u=n("a09b");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l(e,t){let n=Object(a["a"])(e,"a","div"),i=Object(a["a"])(t,"b","div");[n,i]=Object(r["makeTypesMatch"])(n,i);const l=Object(s["a"])(n,i),d=Object(u["a"])(l),p=Object(o["a"])(i,d);return Object(c["a"])(p,d,l)}const d=Object(i["b"])({divNoNan_:l})},"015f":function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("6ad5"),a=n("5959");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t){if((Object(r["A"])(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Object(r["A"])(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");const n=[],s=[];return Object(a["a"])(e,n,s,t)}},"0280":function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("043e");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t){const n=[];for(let r=0;r<t.length;r++)t[r]&&n.push(r);const a=Object(r["a"])(e,"int32"),s=Object(r["a"])([n.length,e.length],"int32");for(let r=0;r<n.length;r++){const t=a.indexToLoc(n[r]),o=r*e.length;s.values.set(t,o)}return s.toTensor()}},"028c":function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("fa11");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n){const a=Object(r["buffer"])(n,e.dtype);for(let r=0;r<a.size;++r){const n=a.indexToLoc(r),s=n.slice(),o=s[0],i=s[2],c=t.locToIndex([o,i]);s[2]=t.values[c];const u=e.locToIndex(s);a.values[r]=e.values[u]}return a}},"0302":function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("fa11");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=Object(r["buffer"])(n,e.dtype);for(let r=0;r<a.values.length;++r){const t=a.indexToLoc(r),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const s=e.locToIndex(n);a.values[r]=e.values[s]}return a}},"03b5":function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return c}));var r=n("fa11"),a=n("7d43"),s=n("bf1d");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a["a"])((e,t)=>Math.min(e,t)),i=Object(s["a"])(r["Minimum"],o),c={kernelName:r["Minimum"],backendName:"cpu",kernelFunc:i}},"043e":function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("34d7"),a=n("6ad5");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t="float32",n){return t=t||"float32",a["c"](e),new r["b"](e,t,n)}},"04b8":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},"04c4":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t,n){const i=Object(s["a"])(e,"x","bincount"),c=Object(s["a"])(t,"weights","bincount");o["b"]("int32"===i.dtype,()=>"Error in bincount: input dtype must be int32, but got "+i.dtype),o["b"](n>=0,()=>`size must be non-negative, but got ${n}.`),o["b"](c.size===i.size||0===c.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${i.shape}, weights shape: `+c.shape+".");const u={x:i,weights:c},l={size:n};return r["a"].runKernel(a["u"],u,l)}const u=Object(i["b"])({bincount_:c})},"05bb":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("a3f7"),a=n("6ad5"),s=n("5959");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t,n){if(Object(a["d"])(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const o=Object(r["c"])(e,n);if(3!==o.length&&1!==o.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===o.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(s["a"])(e,t,o,n)}},"0777":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t){const n=Object(s["a"])(e,"real","complex"),i=Object(s["a"])(t,"imag","complex");o["e"](n.shape,i.shape,`real and imag shapes, ${n.shape} and ${i.shape}, must match in call to tf.complex().`);const c={real:n,imag:i};return r["a"].runKernel(a["z"],c)}const u=Object(i["b"])({complex_:c})},"07b1":function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("fa11");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){const s=r["util"].getTypedArrayFromDType(a,r["util"].sizeFromShape(n));for(let r=0;r<s.length;++r){const n=r*t;let a=e[n];for(let r=0;r<t;++r){const t=e[n+r];t>a&&(a=t)}s[r]=a}return s}},"07d6":function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},"08a9":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","round"),n={x:t};return r["a"].runKernel(a["wc"],n)}const c=Object(o["b"])({round_:i})},"09f4":function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("526f"),c=n("deb3"),u=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l(e,t){let n=Object(o["a"])(e,"a","maximum"),u=Object(o["a"])(t,"b","maximum");[n,u]=Object(s["makeTypesMatch"])(n,u),"bool"===n.dtype&&(n=Object(c["a"])(n,"int32"),u=Object(c["a"])(u,"int32")),Object(i["a"])(n.shape,u.shape);const l={a:n,b:u};return r["a"].runKernel(a["Ob"],l)}const d=Object(u["b"])({maximum_:l})},"0ad6":function(e,t,n){"use strict";n.r(t),n.d(t,"GraphModel",(function(){return Cn})),n.d(t,"loadGraphModel",(function(){return En})),n.d(t,"deregisterOp",(function(){return i["a"]})),n.d(t,"registerOp",(function(){return i["c"]})),n.d(t,"version_converter",(function(){return $n}));var r=n("fa11"),a=n("f8bb"),s=n("526c");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class o{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return Object(s["e"])(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Object(s["e"])(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Object(a["f"])(this.node.rawAttrs,e,t);if(null!=n.s)return Object(a["i"])(this.node.rawAttrs,e,t);if(null!=n.b)return Object(a["c"])(this.node.rawAttrs,e,t);if(null!=n.shape)return Object(a["k"])(this.node.rawAttrs,e,t);if(null!=n.type)return Object(a["e"])(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Object(a["g"])(this.node.rawAttrs,e,t);if(null!=n.list.s)return Object(a["h"])(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Object(a["j"])(this.node.rawAttrs,e,t);if(null!=n.list.b)return Object(a["b"])(this.node.rawAttrs,e,t);if(null!=n.list.type)return Object(a["d"])(this.node.rawAttrs,e,t)}return t}}var i=n("d303"),c=n("9117"),u=n("4850"),l=n("4611"),d=n("a5aa"),p=n("c77c"),f=n("011b"),h=n("508f"),m=n("a009"),b=n("f0e5"),g=n("09f4"),y=n("c9f1"),x=n("4184");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const O=(e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[c["a"](Object(s["d"])("a",e,t,n),Object(s["d"])("b",e,t,n))];case"AddN":return[u["a"](Object(s["d"])("tensors",e,t,n))];case"FloorMod":case"Mod":return[l["a"](Object(s["d"])("a",e,t,n),Object(s["d"])("b",e,t,n))];case"Mul":return[d["a"](Object(s["d"])("a",e,t,n),Object(s["d"])("b",e,t,n))];case"RealDiv":case"Div":return[p["a"](Object(s["d"])("a",e,t,n),Object(s["d"])("b",e,t,n))];case"DivNoNan":return[f["a"](Object(s["d"])("a",e,t,n),Object(s["d"])("b",e,t,n))];case"FloorDiv":return[h["a"](Object(s["d"])("a",e,t,n),Object(s["d"])("b",e,t,n))];case"Sub":return[m["a"](Object(s["d"])("a",e,t,n),Object(s["d"])("b",e,t,n))];case"Minimum":return[b["a"](Object(s["d"])("a",e,t,n),Object(s["d"])("b",e,t,n))];case"Maximum":return[g["a"](Object(s["d"])("a",e,t,n),Object(s["d"])("b",e,t,n))];case"Pow":return[y["a"](Object(s["d"])("a",e,t,n),Object(s["d"])("b",e,t,n))];case"SquaredDifference":return[x["a"](Object(s["d"])("a",e,t,n),Object(s["d"])("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};var v=n("8ae0"),k=n("a374"),w=n("4615"),I=n("220f"),N=n("dc59"),j=n("7e36"),T=n("6002"),S=n("d1a8"),C=n("5960"),E=n("0777"),$=n("eff7"),A=n("c1a2"),R=n("9e38"),_=n("8e05"),F=n("4f20"),D=n("1ba2"),M=n("d369"),L=n("1359"),P=n("46b1"),B=n("24b0"),z=n("3bb7"),V=n("b500"),W=n("d7b0"),U=n("917a"),G=n("08a9"),H=n("b39e"),q=n("ffb3"),K=n("6932"),X=n("1df6"),Y=n("5dc4"),Q=n("9ffd"),Z=n("163a"),J=n("93b2"),ee=n("8888"),te=n("d30a"),ne=n("c08f"),re=n("46a8"),ae=n("5f2a"),se=n("f3ae"),oe=n("6f37"),ie=n("520f"),ce=n("6fef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ue=(e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[v["a"](Object(s["d"])("x",e,t,n))];case"Acos":return[k["a"](Object(s["d"])("x",e,t,n))];case"Acosh":return[w["a"](Object(s["d"])("x",e,t,n))];case"Asin":return[I["a"](Object(s["d"])("x",e,t,n))];case"Asinh":return[N["a"](Object(s["d"])("x",e,t,n))];case"Atan":return[j["a"](Object(s["d"])("x",e,t,n))];case"Atan2":return[T["a"](Object(s["d"])("x",e,t,n),Object(s["d"])("y",e,t,n))];case"Atanh":return[S["a"](Object(s["d"])("x",e,t,n))];case"Ceil":return[C["a"](Object(s["d"])("x",e,t,n))];case"Complex":return[E["a"](Object(s["d"])("real",e,t,n),Object(s["d"])("imag",e,t,n))];case"Cos":return[$["a"](Object(s["d"])("x",e,t,n))];case"Cosh":return[A["a"](Object(s["d"])("x",e,t,n))];case"Elu":return[R["a"](Object(s["d"])("x",e,t,n))];case"Erf":return[_["a"](Object(s["d"])("x",e,t,n))];case"Exp":return[F["a"](Object(s["d"])("x",e,t,n))];case"Expm1":return[D["a"](Object(s["d"])("x",e,t,n))];case"Floor":return[M["a"](Object(s["d"])("x",e,t,n))];case"Log":return[L["a"](Object(s["d"])("x",e,t,n))];case"Log1p":return[P["a"](Object(s["d"])("x",e,t,n))];case"Imag":return[B["a"](Object(s["d"])("x",e,t,n))];case"Neg":return[z["a"](Object(s["d"])("x",e,t,n))];case"Reciprocal":return[V["a"](Object(s["d"])("x",e,t,n))];case"Real":return[W["a"](Object(s["d"])("x",e,t,n))];case"Relu":return[U["a"](Object(s["d"])("x",e,t,n))];case"Round":return[G["a"](Object(s["d"])("x",e,t,n))];case"Selu":return[H["a"](Object(s["d"])("x",e,t,n))];case"Sigmoid":return[q["a"](Object(s["d"])("x",e,t,n))];case"Sin":return[K["a"](Object(s["d"])("x",e,t,n))];case"Sign":return[X["a"](Object(s["d"])("x",e,t,n))];case"Sinh":return[Y["a"](Object(s["d"])("x",e,t,n))];case"Softplus":return[Q["a"](Object(s["d"])("x",e,t,n))];case"Sqrt":return[Z["a"](Object(s["d"])("x",e,t,n))];case"Square":return[J["a"](Object(s["d"])("x",e,t,n))];case"Tanh":return[ee["a"](Object(s["d"])("x",e,t,n))];case"Tan":return[te["a"](Object(s["d"])("x",e,t,n))];case"ClipByValue":return[ne["a"](Object(s["d"])("x",e,t,n),Object(s["d"])("clipValueMin",e,t,n),Object(s["d"])("clipValueMax",e,t,n))];case"Relu6":return[re["a"](Object(s["d"])("x",e,t,n))];case"Rsqrt":return[ae["a"](Object(s["e"])(e.inputNames[0],t,n))];case"Prod":return[se["a"](Object(s["d"])("x",e,t,n),Object(s["d"])("axes",e,t,n))];case"LeakyRelu":return[oe["a"](Object(s["d"])("x",e,t,n),Object(s["d"])("alpha",e,t,n))];case"Prelu":return[ie["a"](Object(s["d"])("x",e,t,n),Object(s["d"])("alpha",e,t,n))];case"IsNan":return[ce["a"](Object(s["e"])(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function le(e,t,n=""){if("number"!==typeof e&&"number"!==typeof t){r["util"].assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let a=0;a<e.length;a++){const s=e[a],o=t[a];r["util"].assert(s<0||o<0||s===o,()=>n+` Shapes ${e} and ${t} must match`)}}}function de(e){return"number"!==typeof e&&!e.some(e=>e<0)}function pe(e,t,n){let r=fe(e,n);const a=!de(r);if(a&&0===t.length)throw new Error("Tried to calculate elements of an empty list with non-fully-defined elementShape: "+r);if(a&&t.forEach(e=>{r=fe(e.shape,r)}),!de(r))throw new Error("Non-fully-defined elementShape: "+r);return r}function fe(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class he{constructor(e,t,n,a,s,o,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=s,this.dynamicSize=o,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Object(r["scalar"])(0),Object(r["keep"])(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),le(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Object(r["keep"])(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,n)=>this.write(e,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Object(r["tensor"])([],[0].concat(this.elementShape));const n=this.readMany(e);return le(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Object(r["stack"])(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Object(r["tensor"])([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const n=this.readMany(t);return le(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Object(r["concat"])(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Object(r["unstack"])(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const a=e.map(e=>(n+=e,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,o=[];Object(r["tidy"])(()=>{t=Object(r["reshape"])(t,[1,n,s]);for(let n=0;n<e.length;++n){const i=0===n?0:a[n-1],c=[0,i,0],u=[1,e[n],s];o[n]=Object(r["reshape"])(Object(r["slice"])(t,c,u),this.elementShape)}return o});const i=[];for(let r=0;r<e.length;r++)i[r]=r;this.writeMany(i,o)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class me{constructor(e,t,n,a=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);le(t,e.shape,"TensorList shape mismatch: "),Object(r["keep"])(e)}),this.idTensor=Object(r["scalar"])(0),this.maxNumElements=a,Object(r["keep"])(this.idTensor)}get id(){return this.idTensor.id}copy(){return new me([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);le(e,this.elementShape,"TensorList shape mismatch: ");const a=pe(this.elementShape,this.tensors,e);return Object(r["tidy"])(()=>{const e=this.tensors.map(e=>Object(r["reshape"])(e,a));return Object(r["stack"])(e,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=pe(this.elementShape,this.tensors,e),a=this.tensors.pop();return le(a.shape,e,"TensorList shape mismatch: "),Object(r["reshape"])(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(le(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Object(r["keep"])(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: "+e);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);le(this.tensors[e].shape,t,"TensorList shape mismatch: ");const a=pe(this.elementShape,this.tensors,t);return Object(r["reshape"])(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);le(this.elementShape,t.shape,"TensorList shape mismatch: "),Object(r["keep"])(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);le(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const a=pe(this.elementShape,this.tensors,n);return 0===e.length?Object(r["tensor"])([],[0].concat(a)):Object(r["tidy"])(()=>{const t=e.map(e=>Object(r["reshape"])(this.tensors[e],a));return Object(r["stack"])(t,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);le(this.elementShape,t,"TensorList shape mismatch: ");const n=pe(this.elementShape,this.tensors,t);return 0===this.size()?Object(r["tensor"])([],[0].concat(n)):Object(r["tidy"])(()=>{const e=this.tensors.map(e=>Object(r["reshape"])(e,n));return Object(r["concat"])(e,0)})}}function be(e,t,n){const a=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: "+e.shape);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);const s=e.shape.slice(1);le(s,t,"TensorList shape mismatch: ");const o=Object(r["unstack"])(e);return new me(o,t,a)}function ge(e,t,n){return new me([],e,t,n)}function ye(e,t,n,a){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=a&&-1!==a&&s>=a)throw new Error(`Max index must be < array size (${s}  vs. ${a})`);const o=new me([],n,e.dtype,a),i=Object(r["unstack"])(e,0);return t.forEach((e,t)=>{o.setItem(e,i[t])}),o}function xe(e,t,n){let a=0;const s=t.map(e=>(a+=e,a));if(a!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${a}, and tensor's shape is: ${e.shape}`);const o=e.shape.slice(1),i=fe(o,n),c=0===a?0:e.size/a,u=Object(r["tidy"])(()=>{const n=[];e=Object(r["reshape"])(e,[1,a,c]);for(let a=0;a<t.length;++a){const o=0===a?0:s[a-1],u=[0,o,0],l=[1,t[a],c];n[a]=Object(r["reshape"])(Object(r["slice"])(e,u,l),i)}return e.dispose(),n}),l=new me([],n,e.dtype,t.length);for(let r=0;r<u.length;r++)l.setItem(r,u[r]);return l}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oe=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=Object(s["d"])("thenBranch",e,t,n),a=Object(s["d"])("elseBranch",e,t,n),o=Object(s["d"])("cond",e,t,n),i=Object(s["d"])("args",e,t,n),c=await o.data();return c[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Object(s["d"])("body",e,t,n),a=Object(s["d"])("cond",e,t,n),o=Object(s["d"])("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap),c=o.map(e=>e.id);let u=await i[0].data();i.forEach(e=>{e.kept||-1!==c.indexOf(e.id)||e.dispose()});let l=o;while(u[0]){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map(e=>e.id);e.forEach(e=>{e.kept||-1!==c.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach(e=>{e.kept||-1!==c.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return l}case"LoopCond":{const r=Object(s["d"])("pred",e,t,n);return[Object(s["a"])(r)]}case"Switch":{const r=Object(s["d"])("pred",e,t,n);let a=Object(s["d"])("data",e,t,n);return a.kept||(a=Object(s["a"])(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find(e=>void 0!==Object(s["e"])(e,t,n));if(r){const e=Object(s["e"])(r,t,n);return[Object(s["a"])(e)]}return}case"Enter":{const r=Object(s["d"])("frameName",e,t,n),a=Object(s["d"])("tensor",e,t,n);return n.enterFrame(r),[Object(s["a"])(a)]}case"Exit":{const r=Object(s["d"])("tensor",e,t,n);return n.exitFrame(),[Object(s["a"])(r)]}case"NextIteration":{const r=Object(s["d"])("tensor",e,t,n);return n.nextIteration(),[Object(s["a"])(r)]}case"TensorArrayV3":{const a=Object(s["d"])("size",e,t,n),o=Object(s["d"])("dtype",e,t,n),i=Object(s["d"])("elementShape",e,t,n),c=Object(s["d"])("dynamicSize",e,t,n),u=Object(s["d"])("clearAfterRead",e,t,n),l=Object(s["d"])("identicalElementShapes",e,t,n),d=Object(s["d"])("name",e,t,n),p=new he(d,o,a,i,l,c,u);return n.addTensorArray(p),[p.idTensor,Object(r["scalar"])(1)]}case"TensorArrayWriteV3":{const r=Object(s["d"])("tensorArrayId",e,t,n),a=Object(s["d"])("index",e,t,n),o=Object(s["d"])("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,o),[i.idTensor]}case"TensorArrayReadV3":{const r=Object(s["d"])("tensorArrayId",e,t,n),a=Object(s["d"])("index",e,t,n),o=n.getTensorArray(r.id);return[o.read(a)]}case"TensorArrayGatherV3":{const r=Object(s["d"])("tensorArrayId",e,t,n),a=Object(s["d"])("indices",e,t,n),o=Object(s["d"])("dtype",e,t,n),i=n.getTensorArray(r.id);return[i.gather(a,o)]}case"TensorArrayScatterV3":{const r=Object(s["d"])("tensorArrayId",e,t,n),a=Object(s["d"])("indices",e,t,n),o=Object(s["d"])("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,o),[i.idTensor]}case"TensorArrayConcatV3":{const r=Object(s["d"])("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),o=Object(s["d"])("dtype",e,t,n);return[a.concat(o)]}case"TensorArraySplitV3":{const r=Object(s["d"])("tensorArrayId",e,t,n),a=Object(s["d"])("tensor",e,t,n),o=Object(s["d"])("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(o,a),[i.idTensor]}case"TensorArraySizeV3":{const a=Object(s["d"])("tensorArrayId",e,t,n),o=n.getTensorArray(a.id);return[Object(r["scalar"])(o.size(),"int32")]}case"TensorArrayCloseV3":{const r=Object(s["d"])("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=Object(s["d"])("tensorListId",e,t,n),a=Object(s["d"])("index",e,t,n),o=Object(s["d"])("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,o),[i.idTensor]}case"TensorListGetItem":{const r=Object(s["d"])("tensorListId",e,t,n),a=Object(s["d"])("index",e,t,n),o=Object(s["d"])("elementShape",e,t,n),i=Object(s["d"])("elementDType",e,t,n),c=n.getTensorList(r.id);return[c.getItem(a,o,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Object(s["d"])("indices",e,t,n),a=Object(s["d"])("tensor",e,t,n),o=Object(s["d"])("elementShape",e,t,n),i=Object(s["d"])("numElements",e,t,n),c=ye(a,r,o,i);return n.addTensorList(c),[c.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=Object(s["d"])("elementShape",e,t,n),a=Object(s["d"])("elementDType",e,t,n);let o;o="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=Object(s["d"])(o,e,t,n),c=ge(r,a,i);return n.addTensorList(c),[c.idTensor]}case"TensorListGather":{const r=Object(s["d"])("tensorListId",e,t,n),a=Object(s["d"])("indices",e,t,n),o=Object(s["d"])("elementShape",e,t,n),i=Object(s["d"])("elementDType",e,t,n),c=n.getTensorList(r.id);return[c.gather(a,i,o)]}case"TensorListStack":{const r=Object(s["d"])("tensorListId",e,t,n),a=Object(s["d"])("elementShape",e,t,n),o=Object(s["d"])("elementDType",e,t,n),i=Object(s["d"])("numElements",e,t,n),c=n.getTensorList(r.id);return[c.stack(a,o,i)]}case"TensorListFromTensor":{const r=Object(s["d"])("tensor",e,t,n),a=Object(s["d"])("elementShape",e,t,n),o=Object(s["d"])("elementDType",e,t,n),i=be(r,a,o);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":{const r=Object(s["d"])("tensorListId",e,t,n),a=n.getTensorList(r.id),o=Object(s["d"])("dtype",e,t,n),i=Object(s["d"])("elementShape",e,t,n);return[a.concat(o,i)]}case"TensorListPushBack":{const r=Object(s["d"])("tensorListId",e,t,n),a=Object(s["d"])("tensor",e,t,n),o=n.getTensorList(r.id);return o.pushBack(a),[o.idTensor]}case"TensorListPopBack":{const r=Object(s["d"])("tensorListId",e,t,n),a=Object(s["d"])("elementShape",e,t,n),o=Object(s["d"])("elementDType",e,t,n),i=n.getTensorList(r.id);return[i.popBack(a,o)]}case"TensorListSplit":{const r=Object(s["d"])("tensor",e,t,n),a=Object(s["d"])("elementShape",e,t,n),o=Object(s["d"])("lengths",e,t,n),i=xe(r,o,a);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var ve=n("7675"),ke=n("dd7e"),we=n("132b"),Ie=n("cd1f"),Ne=n("838f"),je=n("1590"),Te=n("9748"),Se=n("9fe6"),Ce=n("8bc9"),Ee=n("ba53"),$e=n("53fd"),Ae=n("c170");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Re(e,t,n){const[r,a]=Object(s["d"])("fusedOps",e,t,n),o="biasadd"===r,i="prelu"===a,c="fusedbatchnorm"===r,u=Object(s["d"])("numArgs",e,t,n);if(o){if(i&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const l=Object(s["d"])("strides",e,t,n),d=Object(s["c"])(e,t,n),p=Object(s["d"])("dataFormat",e,t,n).toUpperCase(),f=Object(s["d"])("dilations",e,t,n),[h,m]=Object(s["d"])("args",e,t,n),b=Object(s["d"])("leakyreluAlpha",e,t,n);return{stride:l,pad:d,dataFormat:p,dilations:f,biasArg:h,preluArg:m,activationFunc:a,leakyreluAlpha:b}}const _e=(e,t,n)=>{switch(e.op){case"Conv1D":{const r=Object(s["d"])("stride",e,t,n),a=Object(s["d"])("pad",e,t,n),o=Object(s["d"])("dataFormat",e,t,n).toUpperCase(),i=Object(s["d"])("dilation",e,t,n);return[ve["a"](Object(s["d"])("x",e,t,n),Object(s["d"])("filter",e,t,n),r,a,o,i)]}case"Conv2D":{const r=Object(s["d"])("strides",e,t,n),a=Object(s["c"])(e,t,n),o=Object(s["d"])("dataFormat",e,t,n).toUpperCase(),i=Object(s["d"])("dilations",e,t,n);return[ke["a"](Object(s["d"])("x",e,t,n),Object(s["d"])("filter",e,t,n),[r[1],r[2]],a,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:o,dilations:i,biasArg:c,preluArg:u,activationFunc:l,leakyreluAlpha:d}=Re(e,t,n);return[we["qb"].conv2d({x:Object(s["d"])("x",e,t,n),filter:Object(s["d"])("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:l,preluActivationWeights:u,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:o,dilations:i,biasArg:c,preluArg:u,activationFunc:l,leakyreluAlpha:d}=Re(e,t,n);return[we["qb"].depthwiseConv2d({x:Object(s["d"])("x",e,t,n),filter:Object(s["d"])("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:l,preluActivationWeights:u,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Object(s["d"])("outputShape",e,t,n),a=Object(s["d"])("strides",e,t,n),o=Object(s["c"])(e,t,n);return[Ie["a"](Object(s["d"])("x",e,t,n),Object(s["d"])("filter",e,t,n),r,[a[1],a[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Object(s["d"])("strides",e,t,n),a=Object(s["c"])(e,t,n),o=Object(s["d"])("dilations",e,t,n),i=Object(s["d"])("dataFormat",e,t,n).toUpperCase();return[Ne["a"](Object(s["d"])("input",e,t,n),Object(s["d"])("filter",e,t,n),[r[1],r[2]],a,i,[o[1],o[2]])]}case"Conv3D":{const r=Object(s["d"])("strides",e,t,n),a=Object(s["d"])("pad",e,t,n),o=Object(s["d"])("dataFormat",e,t,n).toUpperCase(),i=Object(s["d"])("dilations",e,t,n);return[je["a"](Object(s["d"])("x",e,t,n),Object(s["d"])("filter",e,t,n),[r[1],r[2],r[3]],a,o,[i[1],i[2],i[3]])]}case"AvgPool":{const r=Object(s["d"])("strides",e,t,n),a=Object(s["d"])("pad",e,t,n),o=Object(s["d"])("kernelSize",e,t,n);return[Te["a"](Object(s["d"])("x",e,t,n),[o[1],o[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=Object(s["d"])("strides",e,t,n),a=Object(s["d"])("pad",e,t,n),o=Object(s["d"])("kernelSize",e,t,n);return[Se["a"](Object(s["d"])("x",e,t,n),[o[1],o[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=Object(s["d"])("strides",e,t,n),a=Object(s["d"])("pad",e,t,n),o=Object(s["d"])("kernelSize",e,t,n),i=Object(s["d"])("includeBatchInIndex",e,t,n),{result:c,indexes:u}=Ce["a"](Object(s["d"])("x",e,t,n),[o[1],o[2]],[r[1],r[2]],a,i);return[c,u]}case"AvgPool3D":{const r=Object(s["d"])("strides",e,t,n),a=Object(s["d"])("pad",e,t,n),o=Object(s["d"])("kernelSize",e,t,n);return[Ee["a"](Object(s["d"])("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=Object(s["d"])("strides",e,t,n),a=Object(s["d"])("pad",e,t,n),o=Object(s["d"])("kernelSize",e,t,n);return[$e["a"](Object(s["d"])("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=Object(s["d"])("strides",e,t,n),a=Object(s["d"])("pad",e,t,n),o=Object(s["d"])("dilations",e,t,n),i=r[1],c=r[2],u=o[1],l=o[2];return[Ae["a"](Object(s["d"])("x",e,t,n),Object(s["d"])("filter",e,t,n),[i,c],a,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var Fe=n("46b8"),De=n("5894"),Me=n("3efc"),Le=n("e22c"),Pe=n("c22a"),Be=n("0db5"),ze=n("8629"),Ve=n("84d6"),We=n("7e6a"),Ue=n("5a2c"),Ge=n("a09b");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const He=(e,t,n)=>{switch(e.op){case"Fill":{const r=Object(s["d"])("shape",e,t,n),a=Object(s["d"])("dtype",e,t,n),o=Object(s["d"])("value",e,t,n);return[Fe["a"](r,o,a)]}case"LinSpace":{const r=Object(s["d"])("start",e,t,n),a=Object(s["d"])("stop",e,t,n),o=Object(s["d"])("num",e,t,n);return[De["a"](r,a,o)]}case"Multinomial":{const r=Object(s["d"])("logits",e,t,n),a=Object(s["d"])("numSamples",e,t,n),o=Object(s["d"])("seed",e,t,n);return[Me["a"](r,a,o)]}case"OneHot":{const r=Object(s["d"])("indices",e,t,n),a=Object(s["d"])("depth",e,t,n),o=Object(s["d"])("onValue",e,t,n),i=Object(s["d"])("offValue",e,t,n);return[Le["a"](r,a,o,i)]}case"Ones":return[Pe["a"](Object(s["d"])("shape",e,t,n),Object(s["d"])("dtype",e,t,n))];case"OnesLike":return[Be["a"](Object(s["d"])("x",e,t,n))];case"RandomUniform":return[ze["a"](Object(s["d"])("shape",e,t,n),Object(s["d"])("minval",e,t,n),Object(s["d"])("maxval",e,t,n),Object(s["d"])("dtype",e,t,n))];case"Range":{const r=Object(s["d"])("start",e,t,n),a=Object(s["d"])("stop",e,t,n),o=Object(s["d"])("step",e,t,n);return[Ve["a"](r,a,o,Object(s["d"])("dtype",e,t,n))]}case"TruncatedNormal":{const r=Object(s["d"])("shape",e,t,n),a=Object(s["d"])("mean",e,t,n),o=Object(s["d"])("stdDev",e,t,n),i=Object(s["d"])("seed",e,t,n);return[We["a"](r,a,o,Object(s["d"])("dtype",e,t,n),i)]}case"Zeros":return[Ue["a"](Object(s["d"])("shape",e,t,n),Object(s["d"])("dtype",e,t,n))];case"ZerosLike":return[Ge["a"](Object(s["d"])("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};var qe=n("deb3"),Ke=n("a780"),Xe=n("f74c");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ye(e,t,n){const r=Object(s["d"])("boxes",e,t,n),a=Object(s["d"])("scores",e,t,n),o=Object(s["d"])("maxOutputSize",e,t,n),i=Object(s["d"])("iouThreshold",e,t,n),c=Object(s["d"])("scoreThreshold",e,t,n),u=Object(s["d"])("softNmsSigma",e,t,n);return{boxes:r,scores:a,maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:u}}const Qe=async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:i,softNmsSigma:c}=Ye(e,t,n),u=await we["xb"].nonMaxSuppressionWithScoreAsync(r,a,s,o,i,c);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=Ye(e,t,n),u=Object(s["d"])("padToMaxOutputSize",e,t,n),l=await we["xb"].nonMaxSuppressionPaddedAsync(r,a,o,i,c,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:i}=Ye(e,t,n);return[await we["xb"].nonMaxSuppressionAsync(r,a,s,o,i)]}case"Where":{const r=qe["a"](Object(s["d"])("condition",e,t,n),"bool"),a=[await Ke["a"](r)];return r.dispose(),a}case"ListDiff":return Xe["a"](Object(s["d"])("x",e,t,n),Object(s["d"])("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}};var Ze=n("5616"),Je=n("853e");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const et=(e,t,n)=>{switch(e.op){case"TopKV2":{const r=Object(s["d"])("x",e,t,n),a=Object(s["d"])("k",e,t,n),o=Object(s["d"])("sorted",e,t,n),i=Ze["a"](r,a,o);return[i.values,i.indices]}case"Unique":{const r=Object(s["d"])("x",e,t,n),a=Je["a"](r);return[a.values,a.indices]}case"UniqueV2":{const r=Object(s["d"])("x",e,t,n),a=Object(s["d"])("axis",e,t,n),o=Je["a"](r,a);return[o.values,o.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var tt=n("960f"),nt=n("015f");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const rt=(e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=Object(s["d"])("default",e,t,n);return[Object(s["e"])(e.name,t,n)||r];case"Placeholder":return[Object(s["e"])(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const r=Object(s["d"])("x",e,t,n);return[Object(s["a"])(r)]}case"IdentityN":return Object(s["d"])("x",e,t,n).map(e=>Object(s["a"])(e));case"Snapshot":const a=Object(s["d"])("x",e,t,n);return[Object(s["a"])(a)];case"Shape":return[tt["a"](Object(s["d"])("x",e,t,n).shape,"int32")];case"ShapeN":return Object(s["d"])("x",e,t,n).map(e=>tt["a"](e.shape));case"Size":return[nt["a"](Object(s["d"])("x",e,t,n).size,"int32")];case"Rank":return[nt["a"](Object(s["d"])("x",e,t,n).rank,"int32")];case"NoOp":return[nt["a"](1)];case"Print":const o=Object(s["d"])("x",e,t,n),i=Object(s["d"])("data",e,t,n),c=Object(s["d"])("message",e,t,n),u=Object(s["d"])("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(c);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,u));return[o];default:throw TypeError(`Node type ${e.op} is not implemented`)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class at{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Object(r["scalar"])(0),this.tensorMap=new Map,Object(r["keep"])(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return nt["a"](this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),Object(r["tidy"])(()=>{const e=Object(r["unstack"])(t),a=n.length,s=e.length;r["util"].assert(a===s,()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${s} elements.`);for(let t=0;t<a;t++){const a=n[t],s=e[t];Object(r["keep"])(s),this.tensorMap.set(a,s)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Object(r["tidy"])(()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return Object(r["stack"])(e)})}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got `+e.dtype);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got `+t.dtype)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const st=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=Object(s["d"])("keyDType",e,t,n),o=Object(s["d"])("valueDType",e,t,n),i=new at(a,o);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=Object(s["d"])("tableHandle",e,t,n,r),o=Object(s["d"])("keys",e,t,n),i=Object(s["d"])("values",e,t,n),c=r.getHashTableById(a.id);return[await c.import(o,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=Object(s["d"])("tableHandle",e,t,n,r),o=Object(s["d"])("keys",e,t,n),i=Object(s["d"])("defaultValue",e,t,n),c=r.getHashTableById(a.id);return[await c.find(o,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=Object(s["d"])("tableHandle",e,t,n,r),o=r.getHashTableById(a.id);return[o.tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},ot=(e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=Object(s["d"])("images",e,t,n),a=Object(s["d"])("size",e,t,n),o=Object(s["d"])("alignCorners",e,t,n),i=Object(s["d"])("halfPixelCenters",e,t,n);return[we["xb"].resizeBilinear(r,[a[0],a[1]],o,i)]}case"ResizeNearestNeighbor":{const r=Object(s["d"])("images",e,t,n),a=Object(s["d"])("size",e,t,n),o=Object(s["d"])("alignCorners",e,t,n),i=Object(s["d"])("halfPixelCenters",e,t,n);return[we["xb"].resizeNearestNeighbor(r,[a[0],a[1]],o,i)]}case"CropAndResize":{const r=Object(s["d"])("image",e,t,n),a=Object(s["d"])("boxes",e,t,n),o=Object(s["d"])("boxInd",e,t,n),i=Object(s["d"])("cropSize",e,t,n),c=Object(s["d"])("method",e,t,n),u=Object(s["d"])("extrapolationValue",e,t,n);return[we["xb"].cropAndResize(r,a,o,i,c,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var it=n("b9b9"),ct=n("d4de"),ut=n("cef0"),lt=n("bb2d"),dt=n("e1fd"),pt=n("b21c"),ft=n("e333"),ht=n("ef00"),mt=n("f183"),bt=n("6791");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const gt=(e,t,n)=>{switch(e.op){case"Equal":return[it["a"](Object(s["d"])("a",e,t,n),Object(s["d"])("b",e,t,n))];case"NotEqual":return[ct["a"](Object(s["d"])("a",e,t,n),Object(s["d"])("b",e,t,n))];case"Greater":return[ut["a"](Object(s["d"])("a",e,t,n),Object(s["d"])("b",e,t,n))];case"GreaterEqual":return[lt["a"](Object(s["d"])("a",e,t,n),Object(s["d"])("b",e,t,n))];case"Less":return[dt["a"](Object(s["d"])("a",e,t,n),Object(s["d"])("b",e,t,n))];case"LessEqual":return[pt["a"](Object(s["d"])("a",e,t,n),Object(s["d"])("b",e,t,n))];case"LogicalAnd":return[ft["a"](Object(s["d"])("a",e,t,n),Object(s["d"])("b",e,t,n))];case"LogicalNot":return[ht["a"](Object(s["d"])("a",e,t,n))];case"LogicalOr":return[mt["a"](Object(s["d"])("a",e,t,n),Object(s["d"])("b",e,t,n))];case"Select":case"SelectV2":return[bt["a"](Object(s["d"])("condition",e,t,n),Object(s["d"])("a",e,t,n),Object(s["d"])("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};var yt=n("487b"),xt=n("75ab"),Ot=n("c912");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const vt=(e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[yt["a"](Object(s["d"])("a",e,t,n),Object(s["d"])("b",e,t,n),Object(s["d"])("transposeA",e,t,n),Object(s["d"])("transposeB",e,t,n))];case"Einsum":return[xt["a"](Object(s["d"])("equation",e,t,n),...Object(s["d"])("tensors",e,t,n))];case"Transpose":return[Ot["a"](Object(s["d"])("x",e,t,n),Object(s["d"])("perm",e,t,n))];case"_FusedMatMul":const[r,a]=Object(s["d"])("fusedOps",e,t,n),o="biasadd"===r,i="prelu"===a,c=Object(s["d"])("numArgs",e,t,n),u=Object(s["d"])("leakyreluAlpha",e,t,n);if(o){if(i&&2!==c)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==c)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,d]=Object(s["d"])("args",e,t,n);return[we["qb"].matMul({a:Object(s["d"])("a",e,t,n),b:Object(s["d"])("b",e,t,n),transposeA:Object(s["d"])("transposeA",e,t,n),transposeB:Object(s["d"])("transposeB",e,t,n),bias:l,activation:a,preluActivationWeights:d,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}};var kt=n("71db"),wt=n("e101"),It=n("5f87"),Nt=n("804a"),jt=n("bc62");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Tt=(e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[kt["a"](Object(s["d"])("x",e,t,n),Object(s["d"])("mean",e,t,n),Object(s["d"])("variance",e,t,n),Object(s["d"])("offset",e,t,n),Object(s["d"])("scale",e,t,n),Object(s["d"])("epsilon",e,t,n))];case"FusedBatchNormV3":return[kt["a"](Object(s["d"])("x",e,t,n),Object(s["d"])("mean",e,t,n),Object(s["d"])("variance",e,t,n),Object(s["d"])("offset",e,t,n),Object(s["d"])("scale",e,t,n),Object(s["d"])("epsilon",e,t,n))];case"LRN":return[wt["a"](Object(s["d"])("x",e,t,n),Object(s["d"])("radius",e,t,n),Object(s["d"])("bias",e,t,n),Object(s["d"])("alpha",e,t,n),Object(s["d"])("beta",e,t,n))];case"Softmax":return[It["a"](Object(s["d"])("x",e,t,n))];case"LogSoftmax":return[Nt["a"](Object(s["d"])("x",e,t,n))];case"SparseToDense":return[jt["a"](Object(s["d"])("sparseIndices",e,t,n),Object(s["d"])("outputShape",e,t,n),Object(s["d"])("sparseValues",e,t,n),Object(s["d"])("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};var St=n("c021"),Ct=n("122e"),Et=n("ae6d"),$t=n("e053"),At=n("df81"),Rt=n("4516"),_t=n("e89f"),Ft=n("db49"),Dt=n("1e68"),Mt=n("04c4"),Lt=n("2f2c");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Pt=(e,t,n)=>{switch(e.op){case"Max":{const r=Object(s["d"])("axis",e,t,n),a=Object(s["d"])("keepDims",e,t,n);return[St["a"](Object(s["d"])("x",e,t,n),r,a)]}case"Mean":{const r=Object(s["d"])("axis",e,t,n),a=Object(s["d"])("keepDims",e,t,n);return[Ct["a"](Object(s["d"])("x",e,t,n),r,a)]}case"Min":{const r=Object(s["d"])("axis",e,t,n),a=Object(s["d"])("keepDims",e,t,n);return[Et["a"](Object(s["d"])("x",e,t,n),r,a)]}case"Sum":{const r=Object(s["d"])("axis",e,t,n),a=Object(s["d"])("keepDims",e,t,n);return[$t["a"](Object(s["d"])("x",e,t,n),r,a)]}case"All":{const r=Object(s["d"])("axis",e,t,n),a=Object(s["d"])("keepDims",e,t,n);return[At["a"](Object(s["d"])("x",e,t,n),r,a)]}case"Any":{const r=Object(s["d"])("axis",e,t,n),a=Object(s["d"])("keepDims",e,t,n);return[Rt["a"](Object(s["d"])("x",e,t,n),r,a)]}case"ArgMax":{const r=Object(s["d"])("axis",e,t,n);return[_t["a"](Object(s["d"])("x",e,t,n),r)]}case"ArgMin":{const r=Object(s["d"])("axis",e,t,n);return[Ft["a"](Object(s["d"])("x",e,t,n),r)]}case"Prod":{const r=Object(s["d"])("axis",e,t,n),a=Object(s["d"])("keepDims",e,t,n);return[se["a"](Object(s["d"])("x",e,t,n),r,a)]}case"Cumsum":{const r=Object(s["d"])("axis",e,t,n),a=Object(s["d"])("exclusive",e,t,n),o=Object(s["d"])("reverse",e,t,n);return[Dt["a"](Object(s["d"])("x",e,t,n),r,a,o)]}case"Bincount":const r=Object(s["d"])("x",e,t,n),a=Object(s["d"])("weights",e,t,n),o=Object(s["d"])("size",e,t,n);return[Mt["a"](r,a,o)];case"DenseBincount":{const r=Object(s["d"])("x",e,t,n),a=Object(s["d"])("weights",e,t,n),o=Object(s["d"])("size",e,t,n),i=Object(s["d"])("binaryOutput",e,t,n);return[Lt["a"](r,a,o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var Bt=n("649e"),zt=n("91a3"),Vt=n("d08e"),Wt=n("6d3c"),Ut=n("de1a"),Gt=n("d1f4"),Ht=n("35c9"),qt=n("d54d"),Kt=n("3a44"),Xt=n("8d71"),Yt=n("45bb"),Qt=n("8bfa"),Zt=n("ba40");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Jt=(e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=Object(s["d"])("n",e,t,n),a=Object(s["d"])("axis",e,t,n);let o=Object(s["d"])("tensors",e,t,n);return o=o.slice(0,r),[Bt["a"](o,a)]}case"Gather":{const r=Object(s["d"])("x",e,t,n),a=Object(s["d"])("indices",e,t,n);return[zt["a"](r,qe["a"](a,"int32"),0)]}case"GatherV2":{const r=Object(s["d"])("axis",e,t,n),a=Object(s["d"])("batchDims",e,t,n),o=Object(s["d"])("x",e,t,n),i=Object(s["d"])("indices",e,t,n);return[zt["a"](o,qe["a"](i,"int32"),r,a)]}case"Reverse":{const r=Object(s["d"])("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const o=Object(s["d"])("x",e,t,n);return[Vt["a"](o,a)]}case"ReverseV2":{const r=Object(s["d"])("axis",e,t,n),a=Object(s["d"])("x",e,t,n);return[Vt["a"](a,r)]}case"Slice":{const r=Object(s["d"])("begin",e,t,n),a=Object(s["d"])("size",e,t,n);return[Wt["a"](Object(s["d"])("x",e,t,n),r,a)]}case"StridedSlice":{const r=Object(s["d"])("begin",e,t,n),a=Object(s["d"])("end",e,t,n),o=Object(s["d"])("strides",e,t,n),i=Object(s["d"])("beginMask",e,t,n),c=Object(s["d"])("endMask",e,t,n),u=Object(s["d"])("ellipsisMask",e,t,n),l=Object(s["d"])("newAxisMask",e,t,n),d=Object(s["d"])("shrinkAxisMask",e,t,n),p=Object(s["d"])("x",e,t,n);return[Ut["a"](p,r,a,o,i,c,u,l,d)]}case"Pack":return Object(r["tidy"])(()=>{const a=Object(s["d"])("axis",e,t,n),o=Object(s["d"])("tensors",e,t,n),i=o[0].shape,c=Gt["a"](o[0]).shape,u=o.map(e=>{const t=r["util"].arraysEqual(e.shape,i);if(!t&&!r["util"].arraysEqual(Gt["a"](e).shape,c))throw new Error("the input tensors shape does not match");return t?e:Ht["a"](e,i)});return[qt["a"](u,a)]});case"Unpack":{const r=Object(s["d"])("axis",e,t,n),a=Object(s["d"])("tensor",e,t,n);return Kt["a"](a,r)}case"Tile":{const r=Object(s["d"])("reps",e,t,n);return[Xt["a"](Object(s["d"])("x",e,t,n),r)]}case"Split":case"SplitV":{const r=Object(s["d"])("axis",e,t,n),a=Object(s["d"])("numOrSizeSplits",e,t,n),o=Object(s["d"])("x",e,t,n);return Yt["a"](o,a,r)}case"ScatterNd":{const r=Object(s["d"])("indices",e,t,n),a=Object(s["d"])("values",e,t,n),o=Object(s["d"])("shape",e,t,n);return[Qt["a"](r,a,o)]}case"GatherNd":{const r=Object(s["d"])("x",e,t,n),a=Object(s["d"])("indices",e,t,n);return[Zt["a"](r,a)]}case"SparseToDense":{const r=Object(s["d"])("sparseIndices",e,t,n),a=Object(s["d"])("outputShape",e,t,n),o=Object(s["d"])("sparseValues",e,t,n),i=Object(s["d"])("defaultValue",e,t,n);return[jt["a"](r,o,a,o.dtype===i.dtype?i:qe["a"](i,o.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},en=(e,t,n)=>{switch(e.op){case"SparseReshape":{const{outputIndices:r,outputShape:a}=we["md"].sparseReshape(Object(s["d"])("inputIndices",e,t,n),Object(s["d"])("inputShape",e,t,n),Object(s["d"])("newShape",e,t,n));return[r,a]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var tn=n("1ab7"),nn=n("4c7a"),rn=n("b61d"),an=n("69dc");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const sn=(e,t,n)=>{switch(e.op){case"FFT":return[tn["a"](Object(s["d"])("x",e,t,n))];case"IFFT":return[nn["a"](Object(s["d"])("x",e,t,n))];case"RFFT":return[rn["a"](Object(s["d"])("x",e,t,n))];case"IRFFT":return[an["a"](Object(s["d"])("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};var on=n("dae8"),cn=n("93db"),un=n("0eb5"),ln=n("7580"),dn=n("3b28"),pn=n("364e"),fn=n("48db");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const hn=(e,t,n)=>{switch(e.op){case"Cast":return[qe["a"](Object(s["d"])("x",e,t,n),Object(s["d"])("dtype",e,t,n))];case"ExpandDims":{const r=Object(s["d"])("axis",e,t,n);return[on["a"](Object(s["d"])("x",e,t,n),r)]}case"Squeeze":{const r=Object(s["d"])("axis",e,t,n);return[Gt["a"](Object(s["d"])("x",e,t,n),r)]}case"Reshape":return[Ht["a"](Object(s["d"])("x",e,t,n),Object(s["d"])("shape",e,t,n))];case"MirrorPad":return[cn["a"](Object(s["d"])("x",e,t,n),Object(s["d"])("padding",e,t,n),Object(s["d"])("mode",e,t,n))];case"PadV2":case"Pad":return[un["a"](Object(s["d"])("x",e,t,n),Object(s["d"])("padding",e,t,n),Object(s["d"])("constantValue",e,t,n))];case"SpaceToBatchND":{const r=Object(s["d"])("blockShape",e,t,n),a=Object(s["d"])("paddings",e,t,n);return[ln["a"](Object(s["d"])("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=Object(s["d"])("blockShape",e,t,n),a=Object(s["d"])("crops",e,t,n);return[dn["a"](Object(s["d"])("x",e,t,n),r,a)]}case"DepthToSpace":{const r=Object(s["d"])("blockSize",e,t,n),a=Object(s["d"])("dataFormat",e,t,n).toUpperCase();return[pn["a"](Object(s["d"])("x",e,t,n),r,a)]}case"BroadcastTo":return[fn["a"](Object(s["d"])("x",e,t,n),Object(s["d"])("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mn(e,t,n,a){const s=((e,t,n)=>{switch(e.category){case"arithmetic":return r["tidy"](()=>O(e,t,n));case"basic_math":return r["tidy"](()=>ue(e,t,n));case"control":return Oe(e,t,n);case"convolution":return r["tidy"](()=>_e(e,t,n));case"creation":return r["tidy"](()=>He(e,t,n));case"dynamic":return Qe(e,t,n);case"evaluation":return r["tidy"](()=>et(e,t,n));case"image":return r["tidy"](()=>ot(e,t,n));case"graph":return r["tidy"](()=>rt(e,t,n));case"logical":return r["tidy"](()=>gt(e,t,n));case"matrices":return r["tidy"](()=>vt(e,t,n));case"normalization":return r["tidy"](()=>Tt(e,t,n));case"reduction":return r["tidy"](()=>Pt(e,t,n));case"slice_join":return r["tidy"](()=>Jt(e,t,n));case"sparse":return r["tidy"](()=>en(e,t,n));case"spectral":return r["tidy"](()=>sn(e,t,n));case"transformation":return r["tidy"](()=>hn(e,t,n));case"hash_table":return st(e,t,n,a);case"custom":const s=Object(i["b"])(e.op);if(s&&s.customExecutor)return s.customExecutor(new o(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return r["util"].isPromise(s)?s.then(e=>[].concat(e)):[].concat(s)}class bn{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gn(e,t,n,r){const a=new Set,o=[];let i=null,c=null;const u=new Set,l=Object.keys(e).map(e=>Object(s["g"])(e)[0]);let d=[];null!=r&&(d=r.map(e=>Object(s["g"])(e.name)[0]));const p=[...t];while(p.length>0){const e=p.pop();(kn(e)||wn(e)||In(e))&&null==i&&(i=e,c=i.children.map(e=>e.name).filter(e=>a.has(e))),a.add(e.name),null==n[e.name]&&(-1===l.indexOf(e.name)&&-1===d.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach(e=>{u.has(e.name)||(u.add(e.name),p.push(e))}):o.push(e.name)))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:o,dynamicNode:i,syncInputs:c}}function yn(e,t,n){const{usedNodes:r,inputs:a}=n,o=[],i=Object.keys(a).map(e=>Object(s["g"])(e)[0]).map(t=>e.nodes[t]),c=e.initNodes;i.forEach(e=>{r.has(e.name)&&o.push(e)}),e.weights.forEach(e=>{r.has(e.name)&&o.push(e)}),null!=c&&c.forEach(e=>{r.has(e.name)&&o.push(e)});const u=new Set,l=[];while(o.length>0){const e=o.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach(e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every(e=>u.has(e.name))&&o.push(e)})}return l}const xn=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],On=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],vn=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function kn(e){return xn.indexOf(e.op)>=0}function wn(e){return On.indexOf(e.op)>=0}function In(e){return vn.indexOf(e.op)>=0}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nn{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new Nn(e.functions[t],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams["shape"]?e.attrParams["shape"].value:void 0,dtype:e.attrParams["dtype"]?e.attrParams["dtype"].value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams["shape"]?e.attrParams["shape"].value:void 0,dtype:e.attrParams["dtype"]?e.attrParams["dtype"].value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){const n=e.map(e=>e.name).sort(),r=t.map(e=>e.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=gn(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map(e=>e.name),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return yn(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const a=n.map(e=>this.graph.nodes[Object(s["g"])(e)[0]]),o=t.map(e=>Object(s["g"])(e)[0]);let i=o.map(e=>this.graph.nodes[e]);0===i.length&&(i=this._outputs);const c=this.getCompilationKey(a,i);let u=this.compiledMap.get(c);null==u&&(u=this.compile(e,i),this.compiledMap.set(c,u));const l={},d={};return Object(r["tidy"])(()=>{const n=new bn(this.weightMap,l,d,this.functionExecutorMap),a=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,r]=Object(s["g"])(t),o=[];o[r]=e[t],a[n]=o});const i=this.getFrozenTensorIds(a),c={};for(let e=0;e<u.length;e++){const t=u[e];if(!a[t.name]){const e=mn(t,a,n,this._resourceManager);if(r["util"].isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);a[t.name]=e,this.checkTensorForDisposal(t.name,t,a,n,i,o,c)}}return null==this.parent&&n.dispose(i),t.map(e=>Object(s["e"])(e,a,n))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,o,i){"control"!==t.category&&-1===o.indexOf(e)&&(n[e].forEach(e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)}),t.inputs.forEach(e=>{if("control"!==e.category){const t=Object(s["f"])(e.name,n,r);null!=t&&t.forEach(e=>{if(e&&!e.kept&&!a.has(e.id)){const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const o=new bn(this.weightMap,r,a,this.functionExecutorMap),i=await this.executeWithControlFlow(e,o,t,n),c=t.map(e=>Object(s["e"])(e,i,o)),u=c.map(e=>e.id),l=Object.keys(e).map(t=>e[t].id),d=new Set([...u,...l,...this.weightIds]);return Object.keys(i).forEach(e=>{const t=i[e];t.forEach(e=>{!e||e.kept||e.isDisposed||d.has(e.id)||e.dispose()})}),null==this.parent&&o.dispose(d),c}async executeFunctionAsync(e,t,n){const r=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),o=a.map(e=>this.graph.nodes[Object(s["g"])(e)[0]]),i=n.map(e=>Object(s["g"])(e)[0]);let c=i.map(e=>this.graph.nodes[e]);0===c.length&&(c=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:d,syncInputs:p}=gn(e,c,this.weightMap,this._initNodes),f=[...o,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),h=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,r]=Object(s["g"])(t),a=[];a[r]=e[t],h[n]=a});const m={},b=this.getFrozenTensorIds(h),g={};while(f.length>0){const e=this.processStack(o,f,t,h,g,b,i,m,u);await Promise.all(e)}null!=d||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=c.filter(e=>!kn(e)&&!Object(s["e"])(e.name,h,t)).map(e=>e.name);if(y.length>0){let e="";throw null!=d&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return h}processStack(e,t,n,a,o,i,c,u,l){const d=[];while(t.length>0){const e=t.pop();n.currentContext=e.contexts;let p="";if("Enter"===e.node.op&&Object(s["d"])("isConstant",e.node,a,n)&&([p]=Object(s["b"])(e.node.name,n)),null==a[e.node.name]){const f=mn(e.node,a,n,this._resourceManager);p||([p]=Object(s["b"])(e.node.name,n));const h=n.currentContext;r["util"].isPromise(f)?d.push(f.then(r=>(a[p]=r,n.currentContext=h,this.checkTensorForDisposal(p,e.node,a,n,i,c,u),this.processChildNodes(e.node,t,n,a,o,l),r))):(a[p]=f,this.checkTensorForDisposal(p,e.node,a,n,i,c,u),this.processChildNodes(e.node,t,n,a,o,l))}else this.processChildNodes(e.node,t,n,a,o,l)}return d}processChildNodes(e,t,n,r,a,o){e.children.forEach(e=>{const[i]=Object(s["b"])(e.name,n);!a[i]&&o.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!Object(s["e"])(e,r,n))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every(e=>!!Object(s["e"])(e,r,n))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const n=e[t],[a]=Object(s["g"])(t),o=this.graph.nodes[a];if(o.attrParams["shape"]&&o.attrParams["shape"].value){const e=o.attrParams["shape"].value,t=e.length===n.shape.length&&n.shape.every((t,n)=>-1===e[n]||e[n]===t);r["util"].assert(t,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`)}o.attrParams["dtype"]&&o.attrParams["dtype"].value&&r["util"].assert(n.dtype===o.attrParams["dtype"].value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams["dtype"].value}, but was ${n.dtype}`)})}mapInputs(e){const t={};for(const n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){const r=this._signature.inputs[n];t[r.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter(e=>{const[t]=Object(s["g"])(e);return null==this.graph.nodes[t]});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]){const t=this._signature.outputs[e];return t.name}return e},{})}checkOutputs(e){e.forEach(e=>{const[t]=Object(s["g"])(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)})}}class jn{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tn="?tfjs-format=file",Sn="model.json";class Cn{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new jn}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=r["io"].browserHTTPRequest(e,this.loadOptions);else{const t=r["io"].getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(r["io"].browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const s=r["io"].decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Nn(a["a"].Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=a["a"].Instance.transformGraph(e.modelInitializer);this.initializer=new Nn(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"===typeof e){const t=r["io"].getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof r["Tensor"])&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,r)=>(t[n]=e[r],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function En(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}${Sn}${Tn}`);const n=new Cn(e,t);return await n.load(),n}
/** @license See the LICENSE file. */const $n="3.6.0";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},"0cf8":function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return s}));var r=n("fa11");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const s={kernelName:r["Real"],backendName:"cpu",kernelFunc:a}},"0cff":function(e,t,n){
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
!function(e,r){r(t,n("0ad6"),n("fa11"))}(0,(function(e,t,n){"use strict";const r={1:{name:"/m/01g317",id:1,displayName:"person"},2:{name:"/m/0199g",id:2,displayName:"bicycle"},3:{name:"/m/0k4j",id:3,displayName:"car"},4:{name:"/m/04_sv",id:4,displayName:"motorcycle"},5:{name:"/m/05czz6l",id:5,displayName:"airplane"},6:{name:"/m/01bjv",id:6,displayName:"bus"},7:{name:"/m/07jdr",id:7,displayName:"train"},8:{name:"/m/07r04",id:8,displayName:"truck"},9:{name:"/m/019jd",id:9,displayName:"boat"},10:{name:"/m/015qff",id:10,displayName:"traffic light"},11:{name:"/m/01pns0",id:11,displayName:"fire hydrant"},13:{name:"/m/02pv19",id:13,displayName:"stop sign"},14:{name:"/m/015qbp",id:14,displayName:"parking meter"},15:{name:"/m/0cvnqh",id:15,displayName:"bench"},16:{name:"/m/015p6",id:16,displayName:"bird"},17:{name:"/m/01yrx",id:17,displayName:"cat"},18:{name:"/m/0bt9lr",id:18,displayName:"dog"},19:{name:"/m/03k3r",id:19,displayName:"horse"},20:{name:"/m/07bgp",id:20,displayName:"sheep"},21:{name:"/m/01xq0k1",id:21,displayName:"cow"},22:{name:"/m/0bwd_0j",id:22,displayName:"elephant"},23:{name:"/m/01dws",id:23,displayName:"bear"},24:{name:"/m/0898b",id:24,displayName:"zebra"},25:{name:"/m/03bk1",id:25,displayName:"giraffe"},27:{name:"/m/01940j",id:27,displayName:"backpack"},28:{name:"/m/0hnnb",id:28,displayName:"umbrella"},31:{name:"/m/080hkjn",id:31,displayName:"handbag"},32:{name:"/m/01rkbr",id:32,displayName:"tie"},33:{name:"/m/01s55n",id:33,displayName:"suitcase"},34:{name:"/m/02wmf",id:34,displayName:"frisbee"},35:{name:"/m/071p9",id:35,displayName:"skis"},36:{name:"/m/06__v",id:36,displayName:"snowboard"},37:{name:"/m/018xm",id:37,displayName:"sports ball"},38:{name:"/m/02zt3",id:38,displayName:"kite"},39:{name:"/m/03g8mr",id:39,displayName:"baseball bat"},40:{name:"/m/03grzl",id:40,displayName:"baseball glove"},41:{name:"/m/06_fw",id:41,displayName:"skateboard"},42:{name:"/m/019w40",id:42,displayName:"surfboard"},43:{name:"/m/0dv9c",id:43,displayName:"tennis racket"},44:{name:"/m/04dr76w",id:44,displayName:"bottle"},46:{name:"/m/09tvcd",id:46,displayName:"wine glass"},47:{name:"/m/08gqpm",id:47,displayName:"cup"},48:{name:"/m/0dt3t",id:48,displayName:"fork"},49:{name:"/m/04ctx",id:49,displayName:"knife"},50:{name:"/m/0cmx8",id:50,displayName:"spoon"},51:{name:"/m/04kkgm",id:51,displayName:"bowl"},52:{name:"/m/09qck",id:52,displayName:"banana"},53:{name:"/m/014j1m",id:53,displayName:"apple"},54:{name:"/m/0l515",id:54,displayName:"sandwich"},55:{name:"/m/0cyhj_",id:55,displayName:"orange"},56:{name:"/m/0hkxq",id:56,displayName:"broccoli"},57:{name:"/m/0fj52s",id:57,displayName:"carrot"},58:{name:"/m/01b9xk",id:58,displayName:"hot dog"},59:{name:"/m/0663v",id:59,displayName:"pizza"},60:{name:"/m/0jy4k",id:60,displayName:"donut"},61:{name:"/m/0fszt",id:61,displayName:"cake"},62:{name:"/m/01mzpv",id:62,displayName:"chair"},63:{name:"/m/02crq1",id:63,displayName:"couch"},64:{name:"/m/03fp41",id:64,displayName:"potted plant"},65:{name:"/m/03ssj5",id:65,displayName:"bed"},67:{name:"/m/04bcr3",id:67,displayName:"dining table"},70:{name:"/m/09g1w",id:70,displayName:"toilet"},72:{name:"/m/07c52",id:72,displayName:"tv"},73:{name:"/m/01c648",id:73,displayName:"laptop"},74:{name:"/m/020lf",id:74,displayName:"mouse"},75:{name:"/m/0qjjc",id:75,displayName:"remote"},76:{name:"/m/01m2v",id:76,displayName:"keyboard"},77:{name:"/m/050k8",id:77,displayName:"cell phone"},78:{name:"/m/0fx9l",id:78,displayName:"microwave"},79:{name:"/m/029bxz",id:79,displayName:"oven"},80:{name:"/m/01k6s3",id:80,displayName:"toaster"},81:{name:"/m/0130jx",id:81,displayName:"sink"},82:{name:"/m/040b_t",id:82,displayName:"refrigerator"},84:{name:"/m/0bt_c3",id:84,displayName:"book"},85:{name:"/m/01x3z",id:85,displayName:"clock"},86:{name:"/m/02s195",id:86,displayName:"vase"},87:{name:"/m/01lsmm",id:87,displayName:"scissors"},88:{name:"/m/0kmg4",id:88,displayName:"teddy bear"},89:{name:"/m/03wvsk",id:89,displayName:"hair drier"},90:{name:"/m/012xff",id:90,displayName:"toothbrush"}};class a{constructor(e,t){this.modelPath=t||`https://storage.googleapis.com/tfjs-models/savedmodel/${this.getPrefix(e)}/model.json`}getPrefix(e){return"lite_mobilenet_v2"===e?"ssd"+e:"ssd_"+e}async load(){this.model=await t.loadGraphModel(this.modelPath);const e=n.zeros([1,300,300,3],"int32"),r=await this.model.executeAsync(e);await Promise.all(r.map(e=>e.data())),r.map(e=>e.dispose()),e.dispose()}async infer(e,t,r){const a=n.tidy(()=>(e instanceof n.Tensor||(e=n.browser.fromPixels(e)),n.expandDims(e))),s=a.shape[1],o=a.shape[2],i=await this.model.executeAsync(a),c=i[0].dataSync(),u=i[1].dataSync();a.dispose(),n.dispose(i);const[l,d]=this.calculateMaxScores(c,i[0].shape[1],i[0].shape[2]),p=n.getBackend();"webgl"===n.getBackend()&&n.setBackend("cpu");const f=n.tidy(()=>{const e=n.tensor2d(u,[i[1].shape[1],i[1].shape[3]]);return n.image.nonMaxSuppression(e,l,t,r,r)}),h=f.dataSync();return f.dispose(),p!==n.getBackend()&&n.setBackend(p),this.buildDetectedObjects(o,s,u,l,h,d)}buildDetectedObjects(e,t,n,a,s,o){const i=s.length,c=[];for(let u=0;u<i;u++){const i=[];for(let e=0;e<4;e++)i[e]=n[4*s[u]+e];const l=i[0]*t,d=i[1]*e,p=i[2]*t,f=i[3]*e;i[0]=d,i[1]=l,i[2]=f-d,i[3]=p-l,c.push({bbox:i,class:r[o[s[u]]+1].displayName,score:a[s[u]]})}return c}calculateMaxScores(e,t,n){const r=[],a=[];for(let s=0;s<t;s++){let t=Number.MIN_VALUE,o=-1;for(let r=0;r<n;r++)e[s*n+r]>t&&(t=e[s*n+r],o=r);r[s]=t,a[s]=o}return[r,a]}async detect(e,t=20,n=.5){return this.infer(e,t,n)}dispose(){null!=this.model&&this.model.dispose()}}e.ObjectDetection=a,e.load=async function(e={}){if(null==n)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");const t=e.base||"lite_mobilenet_v2",r=e.modelUrl;if(-1===["mobilenet_v1","mobilenet_v2","lite_mobilenet_v2"].indexOf(t))throw new Error(`ObjectDetection constructed with invalid base model ${t}. Valid names are 'mobilenet_v1', 'mobilenet_v2' and 'lite_mobilenet_v2'.`);const s=new a(t,r);return await s.load(),s},e.version="2.2.2",Object.defineProperty(e,"__esModule",{value:!0})}))},"0db5":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","onesLike"),n={x:t};return r["a"].runKernel(a["cc"],n)}const c=Object(o["b"])({onesLike_:i})},"0eb5":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n=0){const o=Object(s["a"])(e,"x","pad");if(0===o.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:n},c={x:o};return r["a"].runKernel(a["ec"],c,i)}const c=Object(o["b"])({pad_:i})},1:function(e,t){},"113e":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},1212:function(e,t,n){(function(e){var r;(function(e,a,s){function o(e){var t=this,n=u();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function c(e,t){var n=new o(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}function u(){var e=4022871197,t=function(t){t=t.toString();for(var n=0;n<t.length;n++){e+=t.charCodeAt(n);var r=.02519603282416938*e;e=r>>>0,r-=e,r*=e,e=r>>>0,r-=e,e+=4294967296*r}return 2.3283064365386963e-10*(e>>>0)};return t}a&&a.exports?a.exports=c:n("07d6")&&n("3c35")?(r=function(){return c}.call(t,n,t,a),void 0===r||(a.exports=r)):this.alea=c})(0,e,n("07d6"))}).call(this,n("62e4")(e))},"122e":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=null,n=!1){const o=Object(s["a"])(e,"x","mean"),i={x:o},c={axis:t,keepDims:n};return r["a"].runKernel(a["Pb"],i,c)}const c=Object(o["b"])({mean_:i})},1235:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("fa11");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,s){const o=t.length,i=r["util"].sizeFromShape(t),c=r["util"].computeStrides(t),u=r["util"].computeStrides(s),l=r["util"].getTypedArrayFromDType(n,r["util"].sizeFromShape(s));for(let d=0;d<i;++d){const t=r["util"].indexToLoc(d,o,c),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[a[e]];const s=r["util"].locToIndex(n,o,u);l[s]=e[d]}return l}},"132b":function(e,t,n){"use strict";n.d(t,"b",(function(){return a["a"]})),n.d(t,"c",(function(){return s["a"]})),n.d(t,"d",(function(){return o["a"]})),n.d(t,"e",(function(){return i["a"]})),n.d(t,"f",(function(){return c["a"]})),n.d(t,"g",(function(){return u["a"]})),n.d(t,"h",(function(){return l["a"]})),n.d(t,"i",(function(){return d["a"]})),n.d(t,"j",(function(){return p["a"]})),n.d(t,"k",(function(){return f["a"]})),n.d(t,"l",(function(){return h["a"]})),n.d(t,"m",(function(){return m["a"]})),n.d(t,"n",(function(){return b["a"]})),n.d(t,"o",(function(){return g["a"]})),n.d(t,"p",(function(){return y["a"]})),n.d(t,"q",(function(){return x["a"]})),n.d(t,"r",(function(){return C})),n.d(t,"w",(function(){return E["a"]})),n.d(t,"s",(function(){return $["a"]})),n.d(t,"t",(function(){return _})),n.d(t,"u",(function(){return D})),n.d(t,"v",(function(){return L})),n.d(t,"x",(function(){return P["a"]})),n.d(t,"z",(function(){return B["a"]})),n.d(t,"A",(function(){return z["a"]})),n.d(t,"B",(function(){return V["a"]})),n.d(t,"C",(function(){return W["a"]})),n.d(t,"D",(function(){return U["a"]})),n.d(t,"E",(function(){return G["a"]})),n.d(t,"F",(function(){return H["a"]})),n.d(t,"G",(function(){return v["a"]})),n.d(t,"H",(function(){return K})),n.d(t,"I",(function(){return Y})),n.d(t,"J",(function(){return Z})),n.d(t,"K",(function(){return ee})),n.d(t,"L",(function(){return te["a"]})),n.d(t,"M",(function(){return ne["a"]})),n.d(t,"N",(function(){return re["a"]})),n.d(t,"O",(function(){return ae["a"]})),n.d(t,"P",(function(){return de})),n.d(t,"Q",(function(){return pe["a"]})),n.d(t,"R",(function(){return fe["a"]})),n.d(t,"T",(function(){return he["a"]})),n.d(t,"U",(function(){return me["a"]})),n.d(t,"V",(function(){return be["a"]})),n.d(t,"W",(function(){return ge["a"]})),n.d(t,"X",(function(){return xe})),n.d(t,"Y",(function(){return Oe["a"]})),n.d(t,"Z",(function(){return ve["a"]})),n.d(t,"ab",(function(){return ke["a"]})),n.d(t,"bb",(function(){return Ie})),n.d(t,"db",(function(){return Ne["a"]})),n.d(t,"eb",(function(){return je["a"]})),n.d(t,"gb",(function(){return Te["a"]})),n.d(t,"hb",(function(){return Se["a"]})),n.d(t,"ib",(function(){return Ce["a"]})),n.d(t,"jb",(function(){return Ee["a"]})),n.d(t,"kb",(function(){return $e["a"]})),n.d(t,"lb",(function(){return _e})),n.d(t,"nb",(function(){return Fe["a"]})),n.d(t,"ob",(function(){return De["a"]})),n.d(t,"pb",(function(){return Me["a"]})),n.d(t,"rb",(function(){return Le["a"]})),n.d(t,"tb",(function(){return Pe["a"]})),n.d(t,"ub",(function(){return Be["a"]})),n.d(t,"wb",(function(){return ze["a"]})),n.d(t,"Ab",(function(){return We})),n.d(t,"Bb",(function(){return Ge})),n.d(t,"Cb",(function(){return He["a"]})),n.d(t,"Db",(function(){return qe["a"]})),n.d(t,"Eb",(function(){return Ke["a"]})),n.d(t,"Fb",(function(){return Xe["a"]})),n.d(t,"Hb",(function(){return Ye["a"]})),n.d(t,"Ib",(function(){return Qe["a"]})),n.d(t,"Jb",(function(){return Ze["a"]})),n.d(t,"Kb",(function(){return Je["a"]})),n.d(t,"Lb",(function(){return at})),n.d(t,"Mb",(function(){return st["a"]})),n.d(t,"Nb",(function(){return dt})),n.d(t,"Ob",(function(){return pt["a"]})),n.d(t,"Pb",(function(){return ft["a"]})),n.d(t,"Qb",(function(){return ht["a"]})),n.d(t,"Rb",(function(){return gt})),n.d(t,"Tb",(function(){return k["a"]})),n.d(t,"Ub",(function(){return it["a"]})),n.d(t,"Vb",(function(){return yt["a"]})),n.d(t,"Wb",(function(){return xt["a"]})),n.d(t,"Xb",(function(){return Ot["a"]})),n.d(t,"Yb",(function(){return vt["a"]})),n.d(t,"Zb",(function(){return kt["a"]})),n.d(t,"ac",(function(){return Nt})),n.d(t,"bc",(function(){return jt["a"]})),n.d(t,"cc",(function(){return Tt["a"]})),n.d(t,"dc",(function(){return St["a"]})),n.d(t,"ec",(function(){return Ct["a"]})),n.d(t,"fc",(function(){return At})),n.d(t,"hc",(function(){return w["a"]})),n.d(t,"ic",(function(){return _t})),n.d(t,"jc",(function(){return Ft["a"]})),n.d(t,"kc",(function(){return tt["a"]})),n.d(t,"mc",(function(){return Dt["a"]})),n.d(t,"nc",(function(){return Mt["a"]})),n.d(t,"oc",(function(){return wt["a"]})),n.d(t,"pc",(function(){return Lt["a"]})),n.d(t,"rc",(function(){return Bt})),n.d(t,"sc",(function(){return zt["a"]})),n.d(t,"tc",(function(){return Wt})),n.d(t,"uc",(function(){return Gt})),n.d(t,"vc",(function(){return qt})),n.d(t,"wc",(function(){return Xt})),n.d(t,"xc",(function(){return tn})),n.d(t,"yc",(function(){return nn["a"]})),n.d(t,"zc",(function(){return rn["a"]})),n.d(t,"Ac",(function(){return an["a"]})),n.d(t,"Bc",(function(){return sn["a"]})),n.d(t,"Cc",(function(){return cn})),n.d(t,"Dc",(function(){return dn})),n.d(t,"Ec",(function(){return fn})),n.d(t,"Fc",(function(){return hn["a"]})),n.d(t,"Gc",(function(){return mn["a"]})),n.d(t,"Hc",(function(){return bn["a"]})),n.d(t,"Ic",(function(){return gn["a"]})),n.d(t,"Jc",(function(){return yn["a"]})),n.d(t,"Kc",(function(){return xn["a"]})),n.d(t,"Lc",(function(){return ie["a"]})),n.d(t,"Mc",(function(){return On["a"]})),n.d(t,"Nc",(function(){return kn})),n.d(t,"Oc",(function(){return In})),n.d(t,"Pc",(function(){return jn})),n.d(t,"Qc",(function(){return Sn})),n.d(t,"Sc",(function(){return Cn["a"]})),n.d(t,"Tc",(function(){return En["a"]})),n.d(t,"Uc",(function(){return $n["a"]})),n.d(t,"Wc",(function(){return An["a"]})),n.d(t,"Xc",(function(){return _n})),n.d(t,"Yc",(function(){return Fn["a"]})),n.d(t,"Zc",(function(){return N["a"]})),n.d(t,"ad",(function(){return Dn["a"]})),n.d(t,"cd",(function(){return Mn["a"]})),n.d(t,"dd",(function(){return Ln["a"]})),n.d(t,"ed",(function(){return j["a"]})),n.d(t,"fd",(function(){return Bn})),n.d(t,"gd",(function(){return Vn})),n.d(t,"hd",(function(){return Un})),n.d(t,"id",(function(){return Hn})),n.d(t,"jd",(function(){return qn["a"]})),n.d(t,"kd",(function(){return nt["a"]})),n.d(t,"ld",(function(){return Qt["a"]})),n.d(t,"mb",(function(){return Kn["a"]})),n.d(t,"vb",(function(){return Xn["a"]})),n.d(t,"zb",(function(){return Yn["a"]})),n.d(t,"Rc",(function(){return Qn["a"]})),n.d(t,"pd",(function(){return Zn["a"]})),n.d(t,"qd",(function(){return Jn["a"]})),n.d(t,"rd",(function(){return Et["a"]})),n.d(t,"sd",(function(){return er["a"]})),n.d(t,"td",(function(){return tr["a"]})),n.d(t,"ud",(function(){return nr["a"]})),n.d(t,"vd",(function(){return rr["a"]})),n.d(t,"wd",(function(){return ar["a"]})),n.d(t,"xd",(function(){return ct["a"]})),n.d(t,"yd",(function(){return ut["a"]})),n.d(t,"zd",(function(){return sr["a"]})),n.d(t,"Ad",(function(){return T["a"]})),n.d(t,"Bd",(function(){return or["a"]})),n.d(t,"Cd",(function(){return ir["a"]})),n.d(t,"Dd",(function(){return ur})),n.d(t,"Ed",(function(){return lr["a"]})),n.d(t,"Fd",(function(){return dr})),n.d(t,"Gd",(function(){return pr})),n.d(t,"Hd",(function(){return fr})),n.d(t,"Id",(function(){return Ae["a"]})),n.d(t,"Jd",(function(){return hr["a"]})),n.d(t,"Ld",(function(){return mr["a"]})),n.d(t,"Md",(function(){return br["a"]})),n.d(t,"Nd",(function(){return yr})),n.d(t,"Od",(function(){return xr["a"]})),n.d(t,"Pd",(function(){return Or})),n.d(t,"Qd",(function(){return vr["a"]})),n.d(t,"Rd",(function(){return kr["a"]})),n.d(t,"Sd",(function(){return wr["a"]})),n.d(t,"Td",(function(){return Ir["a"]})),n.d(t,"y",(function(){return jr})),n.d(t,"Kd",(function(){return Tr["a"]})),n.d(t,"lc",(function(){return Er})),n.d(t,"gc",(function(){return Rr})),n.d(t,"Vc",(function(){return _r["a"]})),n.d(t,"nd",(function(){return Fr["a"]})),n.d(t,"sb",(function(){return Dr["a"]})),n.d(t,"cb",(function(){return Pr})),n.d(t,"fb",(function(){return Br})),n.d(t,"S",(function(){return zr})),n.d(t,"yb",(function(){return Wr})),n.d(t,"qc",(function(){return I["b"]})),n.d(t,"a",(function(){return I["a"]})),n.d(t,"xb",(function(){return ks})),n.d(t,"Gb",(function(){return ws})),n.d(t,"Sb",(function(){return Is})),n.d(t,"od",(function(){return Os})),n.d(t,"qb",(function(){return r})),n.d(t,"bd",(function(){return vs})),n.d(t,"md",(function(){return Ns}));var r={};n.r(r),n.d(r,"conv2d",(function(){return Xr})),n.d(r,"depthwiseConv2d",(function(){return ta})),n.d(r,"matMul",(function(){return ra}));var a=n("8ae0"),s=n("a374"),o=n("4615"),i=n("9117"),c=n("4850"),u=n("df81"),l=n("4516"),d=n("e89f"),p=n("db49"),f=n("220f"),h=n("dc59"),m=n("7e36"),b=n("6002"),g=n("d1a8"),y=n("9748"),x=n("ba53"),O=n("a3f7"),v=n("649e"),k=n("487b"),w=n("a5aa"),I=n("54ef"),N=n("ffb3"),j=n("6d3c"),T=n("8888");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function S(e,t,n,r,a,s){const o=Object(O["a"])(e,"forgetBias","basicLSTMCell"),c=Object(O["a"])(t,"lstmKernel","basicLSTMCell"),u=Object(O["a"])(n,"lstmBias","basicLSTMCell"),l=Object(O["a"])(r,"data","basicLSTMCell"),d=Object(O["a"])(a,"c","basicLSTMCell"),p=Object(O["a"])(s,"h","basicLSTMCell"),f=Object(v["a"])([l,p],1),h=Object(k["a"])(f,c),m=Object(i["a"])(h,u),b=m.shape[0],g=m.shape[1]/4,y=[b,g],x=Object(j["a"])(m,[0,0],y),I=Object(j["a"])(m,[0,g],y),S=Object(j["a"])(m,[0,2*g],y),C=Object(j["a"])(m,[0,3*g],y),E=Object(i["a"])(Object(w["a"])(Object(N["a"])(x),Object(T["a"])(I)),Object(w["a"])(d,Object(N["a"])(Object(i["a"])(o,S)))),$=Object(w["a"])(Object(T["a"])(E),Object(N["a"])(C));return[E,$]}const C=Object(I["b"])({basicLSTMCell_:S});var E=n("3b28"),$=n("71db"),A=n("6ad5");function R(e,t,n,r,a,s){const o=Object(O["a"])(e,"x","batchNorm"),i=Object(O["a"])(t,"mean","batchNorm"),c=Object(O["a"])(n,"variance","batchNorm");let u,l;return null!=a&&(u=Object(O["a"])(a,"scale","batchNorm")),null!=r&&(l=Object(O["a"])(r,"offset","batchNorm")),A["b"](2===o.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+o.rank+"."),A["b"](2===i.rank||1===i.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),A["b"](2===c.rank||1===c.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${c.rank}.`),null!=u&&A["b"](2===u.rank||1===u.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=l&&A["b"](2===l.rank||1===l.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),Object($["a"])(o,i,c,l,u,s)}const _=Object(I["b"])({batchNorm2d_:R});function F(e,t,n,r,a,s){const o=Object(O["a"])(e,"x","batchNorm"),i=Object(O["a"])(t,"mean","batchNorm"),c=Object(O["a"])(n,"variance","batchNorm");let u,l;return null!=a&&(u=Object(O["a"])(a,"scale","batchNorm")),null!=r&&(l=Object(O["a"])(r,"offset","batchNorm")),A["b"](3===o.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+o.rank+"."),A["b"](3===i.rank||1===i.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),A["b"](3===c.rank||1===c.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${c.rank}.`),null!=u&&A["b"](3===u.rank||1===u.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=l&&A["b"](3===l.rank||1===l.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),Object($["a"])(o,i,c,l,u,s)}const D=Object(I["b"])({batchNorm3d_:F});function M(e,t,n,r,a,s){const o=Object(O["a"])(e,"x","batchNorm"),i=Object(O["a"])(t,"mean","batchNorm"),c=Object(O["a"])(n,"variance","batchNorm");let u,l;return null!=a&&(u=Object(O["a"])(a,"scale","batchNorm")),null!=r&&(l=Object(O["a"])(r,"offset","batchNorm")),A["b"](4===o.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+o.rank+"."),A["b"](4===i.rank||1===i.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),A["b"](4===c.rank||1===c.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${c.rank}.`),null!=u&&A["b"](4===u.rank||1===u.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=l&&A["b"](4===l.rank||1===l.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),Object($["a"])(o,i,c,l,u,s)}const L=Object(I["b"])({batchNorm4d_:M});var P=n("04c4"),B=n("48db"),z=n("043e"),V=n("deb3"),W=n("5960"),U=n("c08f"),G=n("f0a9"),H=n("0777");function q(e){return Object(v["a"])(e,0)}const K=Object(I["b"])({concat1d_:q});function X(e,t){return Object(v["a"])(e,t)}const Y=Object(I["b"])({concat2d_:X});function Q(e,t){return Object(v["a"])(e,t)}const Z=Object(I["b"])({concat3d_:Q});function J(e,t){return Object(v["a"])(e,t)}const ee=Object(I["b"])({concat4d_:J});var te=n("7675"),ne=n("dd7e"),re=n("cd1f"),ae=n("1590"),se=n("6ae2"),oe=n("c05b"),ie=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ce(e,t,n,r,a){A["b"](e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,o=t,i=!1;4===t.rank&&(i=!0,o=Object(ie["a"])(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const c=s[4],u=o.shape[4];A["b"](5===s.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+s.length+"."),A["b"](5===o.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+o.rank),A["b"](5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),A["b"](c===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[3]}.`),A["b"](u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);const l={dy:o,filter:n},d={pad:a,strides:r,inputShape:s},p=se["a"].runKernel(oe["H"],l,d);return i?Object(ie["a"])(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const ue=Object(I["b"])({conv3DBackpropInput_:ce});function le(e,t,n,r,a){const s=Object(O["a"])(e,"x","conv3dTranspose"),o=Object(O["a"])(t,"filter","conv3dTranspose");return ue(n,s,o,r,a)}const de=Object(I["b"])({conv3dTranspose_:le});var pe=n("eff7"),fe=n("c1a2"),he=n("1e68"),me=n("2f2c"),be=n("364e"),ge=n("838f");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ye(e){const t=Object(O["a"])(e,"x","diag"),n={x:t};return se["a"].runKernel(oe["R"],n)}const xe=Object(I["b"])({diag_:ye});var Oe=n("c170"),ve=n("c77c"),ke=n("011b");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function we(e,t){const n=Object(O["a"])(e,"t1","dot"),r=Object(O["a"])(t,"t2","dot");A["b"]((1===n.rank||2===n.rank)&&(1===r.rank||2===r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(A["b"](a===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`),1===n.rank&&1===r.rank){const e=Object(ie["a"])(n,[1,-1]),t=Object(ie["a"])(r,[-1,1]),a=Object(k["a"])(e,t);return Object(ie["a"])(a,[])}if(1===n.rank&&2===r.rank){const e=Object(ie["a"])(n,[1,-1]),t=Object(ie["a"])(r,[r.shape[0],r.shape[1]]),a=Object(k["a"])(e,t);return Object(ie["a"])(a,[a.size])}if(2===n.rank&&1===r.rank){const e=Object(ie["a"])(r,[-1,1]),t=Object(k["a"])(n,e);return Object(ie["a"])(t,[t.size])}{const e=Object(ie["a"])(r,[r.shape[0],r.shape[1]]),t=Object(k["a"])(n,e);return t}}const Ie=Object(I["b"])({dot_:we});var Ne=n("75ab"),je=n("9e38"),Te=n("b9b9"),Se=n("8e05"),Ce=n("4f20"),Ee=n("dae8"),$e=n("1ba2"),Ae=n("8d71");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Re(e,t,n,r="float32"){null==t&&(t=e);const a=Object(z["a"])([e,t],r),s=e<=t?e:t;for(let i=0;i<s;++i)a.set(1,i,i);const o=Object(ie["a"])(a.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return Object(Ae["a"])(Object(Ee["a"])(o,0),[n[0],1,1]);if(2===n.length)return Object(Ae["a"])(Object(Ee["a"])(Object(Ee["a"])(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return Object(Ae["a"])(Object(Ee["a"])(Object(Ee["a"])(Object(Ee["a"])(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}const _e=Object(I["b"])({eye_:Re});var Fe=n("46b8"),De=n("d369"),Me=n("508f"),Le=n("91a3"),Pe=n("cef0"),Be=n("bb2d"),ze=n("24b0");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ve(e){const t=Object(O["a"])(e,"x","isFinite"),n={x:t};return se["a"].runKernel(oe["tb"],n)}const We=Object(I["b"])({isFinite_:Ve});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ue(e){const t=Object(O["a"])(e,"x","isInf"),n={x:t};return se["a"].runKernel(oe["ub"],n)}const Ge=Object(I["b"])({isInf_:Ue});var He=n("6fef"),qe=n("6f37"),Ke=n("e1fd"),Xe=n("b21c"),Ye=n("5894"),Qe=n("e101"),Ze=n("1359"),Je=n("46b1"),et=n("538e"),tt=n("3bb7"),nt=n("9ffd");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rt(e){const t=Object(O["a"])(e,"x","logSigmoid"),n=Object(et["a"])(e=>{const t=Object(tt["a"])(Object(nt["a"])(Object(tt["a"])(e))),n=t=>{const n=Object(w["a"])(t,Object(N["a"])(Object(tt["a"])(e)));return n};return{value:t,gradFunc:n}});return n(t)}const at=Object(I["b"])({logSigmoid_:rt});var st=n("804a"),ot=n("36e5"),it=n("c021"),ct=n("a009"),ut=n("e053");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lt(e,t=null,n=!1){const r=Object(O["a"])(e,"x","logSumExp"),a=Object(A["I"])(t,r.shape),s=Object(it["a"])(r,a,!0),o=Object(ct["a"])(r,s),c=Object(Ce["a"])(o),u=Object(ut["a"])(c,a),l=Object(Ze["a"])(u),d=Object(i["a"])(Object(ie["a"])(s,l.shape),l);if(n){const e=Object(ot["e"])(d.shape,a);return Object(ie["a"])(d,e)}return d}const dt=Object(I["b"])({logSumExp_:lt});var pt=n("e333"),ft=n("ef00"),ht=n("f183"),mt=n("526f");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bt(e,t){const n=Object(O["a"])(e,"a","logicalXor","bool"),r=Object(O["a"])(t,"b","logicalXor","bool");return Object(mt["a"])(n.shape,r.shape),Object(pt["a"])(Object(ht["a"])(e,t),Object(ft["a"])(Object(pt["a"])(e,t)))}const gt=Object(I["b"])({logicalXor_:bt});var yt=n("9fe6"),xt=n("53fd"),Ot=n("8bc9"),vt=n("09f4"),kt=n("122e"),wt=n("c22a"),It=n("34d7");
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Nt(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(n+" is not a valid third argument to meshgrid");if(void 0===e)return[];let r=Object(O["a"])(e,"x","meshgrid",e instanceof It["a"]?e.dtype:"float32");if(void 0===t)return[r];let a=Object(O["a"])(t,"y","meshgrid",t instanceof It["a"]?t.dtype:"float32");const s=Object(A["O"])(r.shape),o=Object(A["O"])(a.shape);return"xy"===n?(r=Object(ie["a"])(r,[1,-1]),a=Object(ie["a"])(a,[-1,1]),[Object(k["a"])(Object(wt["a"])([o,1],r.dtype),r),Object(k["a"])(a,Object(wt["a"])([1,s],a.dtype))]):(r=Object(ie["a"])(r,[-1,1]),a=Object(ie["a"])(a,[1,-1]),[Object(k["a"])(r,Object(wt["a"])([1,o],r.dtype)),Object(k["a"])(Object(wt["a"])([s,1],a.dtype),a)])}var jt=n("ae6d"),Tt=n("f0e5"),St=n("93db"),Ct=n("4611"),Et=n("93b2");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $t(e,t=null,n=!1){e=Object(O["a"])(e,"x","moments");const r=Object(A["I"])(t,e.shape),a=Object(kt["a"])(e,r,n);let s=a.shape;n||(s=Object(ot["e"])(a.shape,r));const o=Object(Et["a"])(Object(ct["a"])(Object(V["a"])(e,"float32"),Object(ie["a"])(a,s))),i=Object(kt["a"])(o,r,n);return{mean:a,variance:i}}const At=Object(I["b"])({moments_:$t});function Rt(e,t,n,r){const a=Object(O["a"])(t,"data","multiRNNCell"),s=Object(O["b"])(n,"c","multiRNNCell"),o=Object(O["b"])(r,"h","multiRNNCell");let i=a;const c=[];for(let d=0;d<e.length;d++){const t=e[d](i,s[d],o[d]);c.push(t[0]),c.push(t[1]),i=t[1]}const u=[],l=[];for(let d=0;d<c.length;d+=2)u.push(c[d]),l.push(c[d+1]);return[u,l]}const _t=Object(I["b"])({multiRNNCell_:Rt});var Ft=n("3efc"),Dt=n("d4de"),Mt=n("e22c"),Lt=n("0db5");function Pt(e,t){const n=Object(O["a"])(e,"v1","outerProduct"),r=Object(O["a"])(t,"v2","outerProduct");A["b"](1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const a=Object(ie["a"])(n,[-1,1]),s=Object(ie["a"])(r,[1,-1]);return Object(k["a"])(a,s)}const Bt=Object(I["b"])({outerProduct_:Pt});var zt=n("0eb5");function Vt(e,t,n=0){return Object(A["b"])(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),Object(zt["a"])(e,[t],n)}const Wt=Object(I["b"])({pad1d_:Vt});function Ut(e,t,n=0){return Object(A["b"])(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(zt["a"])(e,t,n)}const Gt=Object(I["b"])({pad2d_:Ut});function Ht(e,t,n=0){return Object(A["b"])(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(zt["a"])(e,t,n)}const qt=Object(I["b"])({pad3d_:Ht});function Kt(e,t,n=0){return Object(A["b"])(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(zt["a"])(e,t,n)}const Xt=Object(I["b"])({pad4d_:Kt});var Yt=n("b818"),Qt=n("7580");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zt(e,t,n,r,a,s){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const o=Object(O["a"])(e,"x","maxPool");let i=o,c=!1;3===o.rank&&(c=!0,i=Object(ie["a"])(o,[1,o.shape[0],o.shape[1],o.shape[2]])),A["b"](Yt["h"](s,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`);const u=Yt["e"](i.shape,t,s,a,r),l=[u.dilationHeight,u.dilationWidth];let d;d="same"===r?en([u.filterHeight,u.filterWidth],l):[[0,0],[0,0]];const p=1===l[0]&&1===l[1],[f,h]=Jt([u.inHeight,u.inWidth],l,d),m=p?r:"valid",b=p?i:Object(Qt["a"])(i,l,f),g="avg"===n?()=>Object(y["a"])(b,t,s,m):()=>Object(yt["a"])(b,t,s,m),x=g(),v=p?x:Object(E["a"])(x,l,h);return c?Object(ie["a"])(v,[v.shape[1],v.shape[2],v.shape[3]]):v}function Jt(e,t,n){const r=n.map(e=>e[0]),a=n.map(e=>e[1]),s=e.concat(r,a),o=t.map((e,t)=>(e-s[t]%e)%e),i=a.map((e,t)=>e+o[t]),c=t.map((e,t)=>[r[t],i[t]]),u=t.map((e,t)=>[0,o[t]]);return[c,u]}function en(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)),r=n.map(e=>e-1),a=r.map(e=>Math.floor(e/2)),s=r.map((e,t)=>e-a[t]);return r.map((e,t)=>[a[t],s[t]])}const tn=Object(I["b"])({pool_:Zt});var nn=n("c9f1"),rn=n("520f"),an=n("7568"),sn=n("f3ae");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function on(e,t,n){const r=Object(A["O"])(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);a=new Uint8Array(r)}for(let s=0;s<r;s++)a[s]=t();return se["a"].makeTensor(a,e,n)}const cn=Object(I["b"])({rand_:on});var un=n("d4e4");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ln(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);const s=new un["b"](t,n,r,a),o=Object(z["a"])(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}const dn=Object(I["b"])({randomGamma_:ln});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pn(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const s=new un["a"](t,n,r,!1,a),o=Object(z["a"])(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}const fn=Object(I["b"])({randomNormal_:pn});var hn=n("8629"),mn=n("84d6"),bn=n("d7b0"),gn=n("b500"),yn=n("917a"),xn=n("46a8"),On=n("d08e");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vn(e){const t=Object(O["a"])(e,"x","reverse");return A["b"](1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Object(On["a"])(t,0)}const kn=Object(I["b"])({reverse1d_:vn});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wn(e,t){const n=Object(O["a"])(e,"x","reverse");return A["b"](2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Object(On["a"])(n,t)}const In=Object(I["b"])({reverse2d_:wn});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nn(e,t){const n=Object(O["a"])(e,"x","reverse");return A["b"](3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Object(On["a"])(n,t)}const jn=Object(I["b"])({reverse3d_:Nn});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tn(e,t){const n=Object(O["a"])(e,"x","reverse");return A["b"](4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Object(On["a"])(n,t)}const Sn=Object(I["b"])({reverse4d_:Tn});var Cn=n("08a9"),En=n("5f2a"),$n=n("015f"),An=n("b39e");function Rn(e,t,n,r,a,s=[1,1],o="NHWC"){const i=Object(O["a"])(e,"x","separableConv2d"),c=Object(O["a"])(t,"depthwiseFilter","separableConv2d"),u=Object(O["a"])(n,"pointwiseFilter","separableConv2d");let l=i,d=!1;if(3===i.rank&&(d=!0,l=Object(ie["a"])(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");A["b"](4===l.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),A["b"](4===c.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${c.rank}.`),A["b"](4===u.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${c.rank}.`),A["b"](1===u.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),A["b"](1===u.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const p=c.shape[2],f=c.shape[3];A["b"](u.shape[2]===p*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*f}, but got ${u.shape[2]}.`);const h=Object(ge["a"])(l,c,r,a,o,s),m=1,b=Object(ne["a"])(h,u,m,"valid",o);return d?Object(ie["a"])(b,[b.shape[1],b.shape[2],b.shape[3]]):b}const _n=Object(I["b"])({separableConv2d_:Rn});var Fn=n("f74c"),Dn=n("1df6"),Mn=n("6932"),Ln=n("5dc4");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Pn(e,t,n){const r=Object(O["a"])(e,"x","slice1d");return A["b"](1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Object(j["a"])(r,[t],[n])}const Bn=Object(I["b"])({slice1d_:Pn});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zn(e,t,n){const r=Object(O["a"])(e,"x","slice2d");return A["b"](2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Object(j["a"])(r,t,n)}const Vn=Object(I["b"])({slice2d_:zn});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wn(e,t,n){const r=Object(O["a"])(e,"x","slice3d");return A["b"](3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Object(j["a"])(r,t,n)}const Un=Object(I["b"])({slice3d_:Wn});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gn(e,t,n){const r=Object(O["a"])(e,"x","slice4d");return A["b"](4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Object(j["a"])(r,t,n)}const Hn=Object(I["b"])({slice4d_:Gn});var qn=n("5f87"),Kn=n("1ab7"),Xn=n("4c7a"),Yn=n("69dc"),Qn=n("b61d"),Zn=n("45bb"),Jn=n("163a"),er=n("4184"),tr=n("d1f4"),nr=n("d54d"),rr=n("2fb1"),ar=n("de1a"),sr=n("d30a"),or=n("357d"),ir=n("960f"),cr=n("5959");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ur(e,t,n){if(Object(A["d"])(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(O["c"])(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(cr["a"])(e,t,r,n)}var lr=n("05bb");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dr(e,t,n){if(Object(A["d"])(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Object(O["c"])(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Object(cr["a"])(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pr(e,t,n){if(Object(A["d"])(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Object(O["c"])(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Object(cr["a"])(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fr(e,t,n){if(Object(A["d"])(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Object(O["c"])(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,Object(cr["a"])(e,t,r,n)}var hr=n("5616"),mr=n("7e6a"),br=n("853e");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gr(e,t,n){const r=Object(O["a"])(e,"x","unsortedSegmentSum"),a=Object(O["a"])(t,"segmentIds","unsortedSegmentSum","int32");Object(A["b"])(Object(A["v"])(n),()=>"numSegments must be of dtype int");const s={x:r,segmentIds:a},o={numSegments:n};return se["a"].runKernel(oe["cd"],s,o)}const yr=Object(I["b"])({unsortedSegmentSum_:gr});var xr=n("3a44");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Or(e,t=!0,n,r){return se["a"].makeVariable(e,t,n,r)}var vr=n("6791"),kr=n("a780"),wr=n("5a2c"),Ir=n("a09b");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function Nr(e,t,n){const r=Object(O["a"])(e,"tensor","boolMask"),a=Object(O["a"])(t,"mask","boolMask","bool"),s=null==n?0:n,o=a.rank,i=r.shape;A["b"](o>0,()=>"mask cannot be scalar"),A["e"](i.slice(s,s+o),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let m=s;m<s+o;m++)c*=i[m];const u=i.slice(0,s).concat([c],i.slice(s+o)),l=Object(ie["a"])(r,u),d=Object(ie["a"])(a,[-1]),p=await Object(kr["a"])(d),f=Object(tr["a"])(p,[1]),h=Object(Le["a"])(l,f,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),f.dispose(),l.dispose(),d.dispose(),p.dispose(),h}const jr=Nr;var Tr=n("c912");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sr(e,t="euclidean",n=null,r=!1){e=Object(O["a"])(e,"x","norm");const a=Cr(e,t,n);let s=a.shape;if(r){const t=Object(A["I"])(n,e.shape);s=ot["e"](a.shape,t)}return Object(ie["a"])(a,s)}function Cr(e,t,n=null){if(0===e.rank)return Object(a["a"])(e);if(1!==e.rank&&null===n)return Cr(Object(ie["a"])(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Object(ut["a"])(Object(a["a"])(e),n);if(t===1/0)return Object(it["a"])(Object(a["a"])(e),n);if(t===-1/0)return Object(jt["a"])(Object(a["a"])(e),n);if("euclidean"===t||2===t)return Object(Jn["a"])(Object(ut["a"])(Object(nn["a"])(Object(a["a"])(e),Object($n["a"])(2,"int32")),n));throw new Error("Error in norm: invalid ord value: "+t)}if(Array.isArray(n)&&2===n.length){if(1===t)return Object(it["a"])(Object(ut["a"])(Object(a["a"])(e),n[0]),n[1]-1);if(t===1/0)return Object(it["a"])(Object(ut["a"])(Object(a["a"])(e),n[1]),n[0]);if(t===-1/0)return Object(jt["a"])(Object(ut["a"])(Object(a["a"])(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Object(Jn["a"])(Object(ut["a"])(Object(Et["a"])(e),n));throw new Error("Error in norm: invalid ord value: "+t)}throw new Error("Error in norm: invalid axis: "+n)}const Er=Object(I["b"])({norm_:Sr});var $r=n("76c2");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ar(e,t,n,r,a=!0){const s=Object(O["a"])(e,"v","movingAverage"),o=Object(O["a"])(t,"x","movingAverage"),c=Object(O["a"])(n,"decay","movingAverage");Object($r["assertTypesMatch"])(s,o),A["b"](A["a"](s.shape,o.shape),()=>"Shape mismatch in v and x");const u=Object($n["a"])(1),l=Object(ct["a"])(u,c);let d=Object(w["a"])(Object(ct["a"])(o,s),l);if(a){A["b"](null!=r,()=>"When using zeroDebias: true, step is required.");const e=Object(O["a"])(r,"step","movingAverage");d=Object(ve["a"])(d,Object(ct["a"])(u,Object(nn["a"])(c,e)))}return Object(i["a"])(s,d)}const Rr=Object(I["b"])({movingAverage_:Ar});var _r=n("8bfa"),Fr=n("bc62"),Dr=n("ba40");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Mr(e,t){if(null==t)return e.shape.slice();if(A["a"](e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lr(e,t,n,r){const a=Object(O["a"])(e,"x","dropout");if(A["b"]("float32"===a.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),A["b"](t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof It["a"]?a.clone():a;const s=Mr(a,n),o=1-t,c=Object(ve["a"])(Object(De["a"])(Object(i["a"])(Object(hn["a"])(s,0,1,"float32",r),o)),o);return Object(w["a"])(a,c)}const Pr=Object(I["b"])({dropout_:Lr});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Br(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function zr(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(o)}return Object(ir["a"])(a,"float32")}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Vr(e,t,n=1){const r=Object(O["a"])(e,"predictions","inTopK"),a=Object(O["a"])(t,"targets","inTopK");Object(A["b"])(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank),Object(A["b"])(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),Object(A["e"])(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];Object(A["b"])(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);const o=await r.data(),i=await a.data(),[c,u]=[o.length/s,s],l=Object(A["o"])("bool",c);for(let d=0;d<c;d++){const e=d*u,t=o.subarray(e,e+u),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort((e,t)=>t.value-e.value),l[d]=0;for(let a=0;a<n;a++)if(r[a].index===i[d]){l[d]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Object(or["a"])(l,a.shape,"bool")}const Wr=Vr;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ur(e,t,n,r,a,s="NHWC",o){let i=e;3===e.rank&&(i=Object(ie["a"])(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=Object(ie["a"])(t,[1,t.shape[0],t.shape[1],t.shape[2]])),A["b"](4===i.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+i.shape+"."),A["b"](4===c.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+c.shape+"."),A["b"](4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const u="NHWC"===s?i.shape[3]:i.shape[1],l="NHWC"===s?c.shape[3]:c.shape[1];A["b"](u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),A["b"](l===n[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${n[3]}).`),null!=o&&A["b"](A["v"](a),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`);const d={x:i,dy:c},p={strides:r,pad:a,dataFormat:s,dimRoundingMode:o,filterShape:n};return se["a"].runKernel(oe["D"],d,p)}const Gr=Object(I["b"])({conv2DBackpropFilter_:Ur});var Hr=n("73d3"),qr=n("4749");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Kr({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:c,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:d}){if(u=u||"linear",!1===Object(qr["d"])(se["a"].state.gradientDepth,u)){let p=Object(ne["a"])(e,t,n,r,a,s,o);return null!=c&&(p=Object(i["a"])(p,c)),Object(qr["a"])(p,u,l,d)}const p=Object(O["a"])(e,"x","conv2d"),f=Object(O["a"])(t,"filter","conv2d");let h=p,m=!1;3===p.rank&&(m=!0,h=Object(ie["a"])(p,[1,p.shape[0],p.shape[1],p.shape[2]])),A["b"](4===h.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+h.rank+"."),A["b"](4===f.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+f.rank+"."),null!=o&&A["b"](A["v"](r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`),A["b"](h.shape[3]===f.shape[2],()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${f.shape[2]}.`),A["b"](Yt["h"](n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),A["b"]("NHWC"===a,()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`);const b=Yt["a"](h.shape,f.shape,n,s,r,o);let g,y;null!=c&&(g=Object(O["a"])(c,"bias","fused conv2d"),[g]=Object($r["makeTypesMatch"])(g,p),mt["a"](b.outShape,g.shape)),null!=l&&(y=Object(O["a"])(l,"prelu weights","fused conv2d"));const x=(e,t)=>{const[a,o,i,c]=t,l=Object(qr["c"])(e,i,u);A["b"](Yt["i"](s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const d=Object(Hr["a"])(o.shape,l,a,n,r),p=Gr(o,l,a.shape,n,r),f=[d,p];if(null!=c){const e=Object(qr["b"])(c,l);f.push(e)}return f},v={x:h,filter:f,bias:g,preluActivationWeights:y},k={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o,activation:u,leakyreluAlpha:d};if(null==c){const e=Object(et["a"])((e,t,n)=>{let r=se["a"].runKernel(oe["kb"],v,k);return n([t,e,r]),m&&(r=Object(ie["a"])(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}});return e(h,f)}{const e=Object(et["a"])((e,t,n,r)=>{let a=se["a"].runKernel(oe["kb"],v,k);return r([t,e,a,n]),m&&(a=Object(ie["a"])(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}});return e(h,f,g)}}const Xr=Object(I["b"])({fusedConv2d_:Kr});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yr(e,t,n,r,a,s=[1,1],o){let i=e;3===e.rank&&(i=Object(ie["a"])(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=Object(ie["a"])(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:i,dy:c},l={strides:r,pad:a,dimRoundingMode:o,dilations:s,filterShape:n};return se["a"].runKernel(oe["P"],u,l)}const Qr=Object(I["b"])({depthwiseConv2dNativeBackpropFilter_:Yr});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zr(e,t,n,r,a,s=[1,1],o){let i=t,c=!1;3===t.rank&&(c=!0,i=Object(ie["a"])(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:i,filter:n},l={strides:r,pad:a,dimRoundingMode:o,dilations:s,inputShape:e},d=se["a"].runKernel(oe["Q"],u,l);return c?Object(ie["a"])(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Jr=Object(I["b"])({depthwiseConv2dNativeBackpropInput_:Zr});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ea({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:c,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:d}){if(!1===Object(qr["d"])(se["a"].state.gradientDepth,u)){let p=Object(ge["a"])(e,t,n,r,a,s,o);return null!=c&&(p=Object(i["a"])(p,c)),Object(qr["a"])(p,u,l,d)}const p=Object(O["a"])(e,"x","depthwiseConv2d"),f=Object(O["a"])(t,"filter","depthwiseConv2d");let h=p,m=!1;3===p.rank&&(m=!0,h=Object(ie["a"])(p,[1,p.shape[0],p.shape[1],p.shape[2]])),A["b"](4===h.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),A["b"](4===f.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`),A["b"](h.shape[3]===f.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`),null==s&&(s=[1,1]),A["b"](Yt["h"](n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),null!=o&&A["b"](A["v"](r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${o} but got pad ${r}.`);const b=Yt["a"](h.shape,f.shape,n,s,r,o,!0);let g,y;null!=c&&(g=Object(O["a"])(c,"bias","fused conv2d"),[g]=Object($r["makeTypesMatch"])(g,p),mt["a"](b.outShape,g.shape)),null!=l&&(y=Object(O["a"])(l,"prelu weights","fused depthwiseConv2d"));const x=(e,t)=>{A["b"](Yt["i"](s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);const[a,i,c,l]=t,d=Object(qr["c"])(e,c,u),p=Jr(i.shape,d,a,n,r,s,o),f=Qr(i,d,a.shape,n,r,s,o);if(null!=l){const e=Object(qr["b"])(g,d);return[p,f,e]}return[p,f]},v={x:h,filter:f,bias:g,preluActivationWeights:y},k={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o,activation:u,leakyreluAlpha:d};if(null==c){const e=Object(et["a"])((e,t,n)=>{let r=se["a"].runKernel(oe["lb"],v,k);return n([t,e,r]),m&&(r=Object(ie["a"])(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}});return e(h,f)}{const e=Object(et["a"])((e,t,n,r)=>{let a=se["a"].runKernel(oe["lb"],v,k);return r([t,e,a,n]),m&&(a=Object(ie["a"])(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}});return e(h,f,g)}}const ta=Object(I["b"])({fusedDepthwiseConv2d_:ea});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function na({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:o,leakyreluAlpha:c}){if(!1===Object(qr["d"])(se["a"].state.gradientDepth,s)){let u=Object(k["a"])(e,t,n,r);return null!=a&&(u=Object(i["a"])(u,a)),Object(qr["a"])(u,s,o,c)}let u=Object(O["a"])(e,"a","fused matMul"),l=Object(O["a"])(t,"b","fused matMul");[u,l]=Object($r["makeTypesMatch"])(u,l);const d=n?u.shape[u.rank-2]:u.shape[u.rank-1],p=r?l.shape[l.rank-1]:l.shape[l.rank-2],f=n?u.shape[u.rank-1]:u.shape[u.rank-2],h=r?l.shape[l.rank-2]:l.shape[l.rank-1],m=u.shape.slice(0,-2),b=l.shape.slice(0,-2),g=A["O"](m),y=A["O"](b);A["b"](u.rank>=2&&l.rank>=2&&u.rank===l.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${l.rank}.`),A["b"](A["a"](m,b),()=>`Error in fused matMul: outer dimensions (${m}) and (${b}) of Tensors with shapes ${u.shape} and `+l.shape+" must match."),A["b"](d===p,()=>`Error in fused matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`);const x=u.shape.slice(0,-2).concat([f,h]),v=n?Object(ie["a"])(u,[g,d,f]):Object(ie["a"])(u,[g,f,d]),w=r?Object(ie["a"])(l,[y,h,p]):Object(ie["a"])(l,[y,p,h]);let I,N;null!=a&&(I=Object(O["a"])(a,"bias","fused matMul"),[I]=Object($r["makeTypesMatch"])(I,u),mt["a"](x,I.shape)),null!=o&&(N=Object(O["a"])(o,"prelu weights","fused matMul"));const j=(e,t)=>{const[o,i,c,u]=t,l=Object(qr["c"])(Object(ie["a"])(e,c.shape),c,s);let d,p;if(n||r?!n&&r?(d=Object(k["a"])(l,i,!1,!1),p=Object(k["a"])(l,o,!0,!1)):n&&!r?(d=Object(k["a"])(i,l,!1,!0),p=Object(k["a"])(o,l,!1,!1)):(d=Object(k["a"])(i,l,!0,!0),p=Object(k["a"])(l,o,!0,!0)):(d=Object(k["a"])(l,i,!1,!0),p=Object(k["a"])(o,l,!0,!1)),null!=a){const e=Object(qr["b"])(u,l);return[d,p,e]}return[d,p]},T={a:v,b:w,bias:I,preluActivationWeights:N},S={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:c};if(null==a){const e=Object(et["a"])((e,t,n)=>{const r=se["a"].runKernel(oe["ed"],T,S);return n([e,t,r]),{value:Object(ie["a"])(r,x),gradFunc:j}});return e(v,w)}{const e=Object(et["a"])((e,t,n,r)=>{const a=se["a"].runKernel(oe["ed"],T,S);return r([e,t,a,n]),{value:Object(ie["a"])(a,x),gradFunc:j}});return e(v,w,I)}}const ra=Object(I["b"])({fusedMatMul_:na});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aa(e){return zr(e,.54,.46)}const sa=Object(I["b"])({hammingWindow_:aa});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oa(e){return zr(e,.5,.5)}const ia=Object(I["b"])({hannWindow_:oa});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ca(e,t,n,r=!1,a=0){let s=0;const o=[];while(s+t<=e.size)o.push(Object(j["a"])(e,s,t)),s+=n;if(r)while(s<e.size){const r=s+t-e.size,i=Object(v["a"])([Object(j["a"])(e,s,t-r),Object(Fe["a"])([r],a)]);o.push(i),s+=n}return 0===o.length?ur([],[0,t]):Object(ie["a"])(Object(v["a"])(o),[o.length,t])}const ua=Object(I["b"])({frame_:ca});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function la(e,t,n,r,a=ia){null==r&&(r=Br(t));const s=ua(e,t,n),o=Object(w["a"])(s,a(t));return Object(Qn["a"])(o,r)}const da=Object(I["b"])({stft_:la});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pa(e,t,n,r,a="bilinear",s=0){const o=Object(O["a"])(e,"image","cropAndResize"),i=Object(O["a"])(t,"boxes","cropAndResize","float32"),c=Object(O["a"])(n,"boxInd","cropAndResize","int32"),u=i.shape[0];A["b"](4===o.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),A["b"](2===i.rank&&4===i.shape[1],()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`),A["b"](1===c.rank&&c.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`),A["b"](2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),A["b"](r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),A["b"]("bilinear"===a||"nearest"===a,()=>"method must be bilinear or nearest, but was "+a);const l={image:o,boxes:i,boxInd:c},d={method:a,extrapolationValue:s,cropSize:r},p=se["a"].runKernel(oe["K"],l,d);return p}const fa=Object(I["b"])({cropAndResize_:pa});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ha(e){const t=Object(O["a"])(e,"image","flipLeftRight","float32");A["b"](4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const n={image:t},r=se["a"].runKernel(oe["fb"],n,{});return r}const ma=Object(I["b"])({flipLeftRight_:ha});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ba(e,t,n=0,r=.5){const a=Object(O["a"])(e,"image","rotateWithOffset","float32");A["b"](4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);const s={image:a},o={radians:t,fillValue:n,center:r},i=se["a"].runKernel(oe["vc"],s,o);return i}const ga=Object(I["b"])({rotateWithOffset_:ba});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ya(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),A["b"](0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),A["b"](2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),A["b"](4===e.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+e.shape[1]),A["b"](1===t.rank,()=>"scores must be a 1D tensor"),A["b"](t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was `+t.shape[0]),A["b"](0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xa(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(O["a"])(e,"boxes","nonMaxSuppression"),o=Object(O["a"])(t,"scores","nonMaxSuppression"),i=ya(s,o,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const c={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return se["a"].runKernel(oe["Xb"],{boxes:s,scores:o},c)}const Oa=Object(I["b"])({nonMaxSuppression_:xa});var va=n("8389");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function ka(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(O["a"])(e,"boxes","nonMaxSuppressionAsync"),o=Object(O["a"])(t,"scores","nonMaxSuppressionAsync"),i=ya(s,o,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const c=await Promise.all([s.data(),o.data()]),u=c[0],l=c[1],{selectedIndices:d}=Object(va["a"])(u,l,n,r,a);return s!==e&&s.dispose(),o!==t&&o.dispose(),Object(ir["a"])(d,"int32")}const wa=ka;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ia(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=Object(O["a"])(e,"boxes","nonMaxSuppression"),i=Object(O["a"])(t,"scores","nonMaxSuppression"),c=ya(o,i,n,r,a,s);n=c.maxOutputSize,r=c.iouThreshold,a=c.scoreThreshold,s=c.softNmsSigma;const u={boxes:o,scores:i},l={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},d=se["a"].runKernel(oe["Zb"],u,l);return{selectedIndices:d[0],selectedScores:d[1]}}const Na=Object(I["b"])({nonMaxSuppressionWithScore_:Ia});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function ja(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=Object(O["a"])(e,"boxes","nonMaxSuppressionAsync"),i=Object(O["a"])(t,"scores","nonMaxSuppressionAsync"),c=ya(o,i,n,r,a,s);n=c.maxOutputSize,r=c.iouThreshold,a=c.scoreThreshold,s=c.softNmsSigma;const u=await Promise.all([o.data(),i.data()]),l=u[0],d=u[1],{selectedIndices:p,selectedScores:f}=Object(va["c"])(l,d,n,r,a,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Object(ir["a"])(p,"int32"),selectedScores:Object(ir["a"])(f)}}const Ta=ja;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sa(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=Object(O["a"])(e,"boxes","nonMaxSuppression"),i=Object(O["a"])(t,"scores","nonMaxSuppression"),c=ya(o,i,n,r,a,null),u=c.maxOutputSize,l=c.iouThreshold,d=c.scoreThreshold,p={boxes:o,scores:i},f={maxOutputSize:u,iouThreshold:l,scoreThreshold:d,padToMaxOutputSize:s},h=se["a"].runKernel(oe["Yb"],p,f);return{selectedIndices:h[0],validOutputs:h[1]}}const Ca=Object(I["b"])({nonMaxSuppressionPadded_:Sa});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Ea(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=Object(O["a"])(e,"boxes","nonMaxSuppressionAsync"),i=Object(O["a"])(t,"scores","nonMaxSuppressionAsync"),c=ya(o,i,n,r,a,null),u=c.maxOutputSize,l=c.iouThreshold,d=c.scoreThreshold,[p,f]=await Promise.all([o.data(),i.data()]),{selectedIndices:h,validOutputs:m}=Object(va["b"])(p,f,u,l,d,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Object(ir["a"])(h,"int32"),validOutputs:Object($n["a"])(m,"int32")}}const $a=Ea;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aa(e,t,n=!1,r=!1){const a=Object(O["a"])(e,"images","resizeBilinear");A["b"](3===a.rank||4===a.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),A["b"](2===t.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+t+"."),A["b"](!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=a,o=!1;3===a.rank&&(o=!0,s=Object(ie["a"])(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,i={images:s},c={alignCorners:n,halfPixelCenters:r,size:t},u=se["a"].runKernel(oe["qc"],i,c);return o?Object(ie["a"])(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const Ra=Object(I["b"])({resizeBilinear_:Aa});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _a(e,t,n=!1,r=!1){const a=Object(O["a"])(e,"images","resizeNearestNeighbor");A["b"](3===a.rank||4===a.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),A["b"](2===t.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+"."),A["b"]("float32"===a.dtype||"int32"===a.dtype,()=>"`images` must have `int32` or `float32` as dtype"),A["b"](!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=a,o=!1;3===a.rank&&(o=!0,s=Object(ie["a"])(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,i={images:s},c={alignCorners:n,halfPixelCenters:r,size:t},u=se["a"].runKernel(oe["sc"],i,c);return o?Object(ie["a"])(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const Fa=Object(I["b"])({resizeNearestNeighbor_:_a});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Da(e,t="binary",n=!1,r=.5){const a=Object(O["a"])(e,"image","threshold"),s=.2989,o=.587,c=.114,u=a.shape[0]*a.shape[1];let l,d,p,f,h=Object(w["a"])(Object(ir["a"])([r]),255);if(A["b"](3===a.rank,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),A["b"](3===a.shape[2]||1===a.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),A["b"]("int32"===a.dtype||"float32"===a.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),A["b"]("otsu"===t||"binary"===t,()=>"Method must be binary or otsu, but was "+t),3===a.shape[2]){[l,d,p]=Object(Zn["a"])(a,[1,1,1],-1);const e=Object(w["a"])(l,s),t=Object(w["a"])(d,o),n=Object(w["a"])(p,c);f=Object(i["a"])(Object(i["a"])(e,t),n)}else f=e;if("otsu"===t){const e=Object(P["a"])(Object(V["a"])(Object(Cn["a"])(f),"int32"),Object(or["a"])([]),256);h=Ma(e,u)}const m=n?Object(Xe["a"])(f,h):Object(Pe["a"])(f,h),b=Object(V["a"])(Object(w["a"])(m,255),"int32");return b}function Ma(e,t){let n,r,a,s,o,c,u=Object(ir["a"])([-1]),l=Object(ir["a"])([0]),d=Object(ir["a"])([0]);for(let p=0;p<e.size-1;p++){n=Object(j["a"])(e,0,p+1),r=Object(j["a"])(e,p+1),o=Object(ve["a"])(Object(ut["a"])(n),t),c=Object(ve["a"])(Object(ut["a"])(r),t);const f=Object(ut["a"])(Object(w["a"])(n,Object(mn["a"])(0,n.size)));a=Object(ve["a"])(f,Object(ut["a"])(n));const h=Object(Fe["a"])(r.shape,n.size),m=Object(i["a"])(Object(mn["a"])(0,r.size),h),b=Object(w["a"])(r,m);s=Object(ve["a"])(Object(ut["a"])(b),Object(ut["a"])(r));const g=Object(ct["a"])(a,s),y=Object(ct["a"])(a,s),x=Object(w["a"])(o,c);d=Object(w["a"])(Object(w["a"])(x,g),y);const O=Object(Pe["a"])(d,l);l=Object(vr["a"])(O,d,l),u=Object(vr["a"])(O,Object(ir["a"])([p]),u)}return u}const La=Object(I["b"])({threshold_:Da});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pa(e,t,n="nearest",r="constant",a=0,s){const o=Object(O["a"])(e,"image","transform","float32"),i=Object(O["a"])(t,"transforms","transform","float32");A["b"](4===o.rank,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),A["b"](2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),A["b"](null==s||2===s.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);const c={image:o,transforms:i},u={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return se["a"].runKernel(oe["Yc"],c,u)}const Ba=Object(I["b"])({transform_:Pa});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function za(e,t,n){Object(A["b"])(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),Object(A["b"])(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=Object(O["a"])(e,"a","bandPart");Object(A["b"])(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const a=r.shape,[s,o]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=s),n<0&&(n=o);const i=Object(ie["a"])(Object(mn["a"])(0,s,1,"int32"),[-1,1]),c=Object(mn["a"])(0,o,1,"int32"),u=Object(ct["a"])(i,c),l=Object(pt["a"])(Object(Xe["a"])(u,Object($n["a"])(+t,"int32")),Object(Be["a"])(u,Object($n["a"])(-n,"int32"))),d=Object(wr["a"])([s,o],r.dtype);return Object(ie["a"])(Object(nr["a"])(Object(xr["a"])(Object(ie["a"])(r,[-1,s,o])).map(e=>Object(vr["a"])(l,e,d))),a)}const Va=Object(I["b"])({bandPart_:za});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wa(e){let t;if(Array.isArray(e)){t=!1,Object(A["b"])(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)Object(A["b"])(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=Object(Zn["a"])(e,e.shape[0],0).map(e=>Object(tr["a"])(e,[0]));Object(A["b"])(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],r=e;for(let a=0;a<e.length;++a)n.push(se["a"].tidy(()=>{let e=r[a];if(a>0)for(let t=0;t<a;++t){const r=Object(w["a"])(Object(ut["a"])(Object(w["a"])(n[t],e)),n[t]);e=Object(ct["a"])(e,r)}return Object(ve["a"])(e,Er(e,"euclidean"))}));return t?Object(nr["a"])(n,0):n}const Ua=Object(I["b"])({gramSchmidt_:Wa});var Ga=n("c04e4");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ha(e,t=!1){if(Object(A["b"])(e.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+e.rank),2===e.rank)return qa(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=Object(xr["a"])(Object(ie["a"])(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach(e=>{const[n,r]=qa(e,t);a.push(n),s.push(r)});const o=Object(ie["a"])(Object(nr["a"])(a,0),e.shape),i=Object(ie["a"])(Object(nr["a"])(s,0),e.shape);return[o,i]}}function qa(e,t=!1){return se["a"].tidy(()=>{Object(A["b"])(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let a=_e(n),s=Object(G["a"])(e);const o=ur([[1]],[1,1]);let i=Object(G["a"])(o);const c=n>=r?r:n;for(let e=0;e<c;++e){const t=s,c=i,u=a;[i,s,a]=se["a"].tidy(()=>{const t=Object(j["a"])(s,[e,e],[n-e,1]),c=Er(t),u=Object(j["a"])(s,[e,e],[1,1]),l=Object(vr["a"])(Object(Pe["a"])(u,0),ur([[-1]]),ur([[1]])),d=Object(ct["a"])(u,Object(w["a"])(l,c)),p=Object(ve["a"])(t,d);i=1===p.shape[0]?Object(G["a"])(o):Object(v["a"])([o,Object(j["a"])(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const f=Object(tt["a"])(Object(ve["a"])(Object(k["a"])(l,d),c)),h=Object(j["a"])(s,[e,0],[n-e,r]),m=Object(w["a"])(f,i),b=Object(Tr["a"])(i);if(0===e)s=Object(ct["a"])(h,Object(k["a"])(m,Object(k["a"])(b,h)));else{const t=Object(ct["a"])(h,Object(k["a"])(m,Object(k["a"])(b,h)));s=Object(v["a"])([Object(j["a"])(s,[0,0],[e,r]),t],0)}const g=Object(Tr["a"])(m),y=Object(j["a"])(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Object(ct["a"])(y,Object(k["a"])(Object(k["a"])(y,i),g));else{const t=Object(ct["a"])(y,Object(k["a"])(Object(k["a"])(y,i),g));a=Object(v["a"])([Object(j["a"])(a,[0,0],[n,e]),t],1)}return[i,s,a]}),Object(Ga["d"])([t,c,u])}return!t&&n>r&&(a=Object(j["a"])(a,[0,0],[n,r]),s=Object(j["a"])(s,[0,0],[r,r])),[a,s]})}const Ka=Object(I["b"])({qr_:Ha});var Xa=n("57e0");function Ya(e,t,n=Xa["a"].SUM_BY_NONZERO_WEIGHTS){const r=Object(O["a"])(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Object(O["a"])(t,"weights","computeWeightedLoss"));const s=null==a?r:Object(w["a"])(r,a);if(n===Xa["a"].NONE)return s;if(n===Xa["a"].SUM)return Object(ut["a"])(s);if(n===Xa["a"].MEAN){if(null==a)return Object(kt["a"])(s);{const e=r.size/a.size,t=Object(ve["a"])(Object(ut["a"])(s),Object(ut["a"])(a));return e>1?Object(ve["a"])(t,Object($n["a"])(e)):t}}if(n===Xa["a"].SUM_BY_NONZERO_WEIGHTS){if(null==a)return Object(ve["a"])(Object(ut["a"])(s),Object($n["a"])(r.size));{const e=Object(w["a"])(a,Object(wt["a"])(r.shape)),t=Object(V["a"])(Object(ut["a"])(Object(Dt["a"])(e,Object($n["a"])(0))),"float32");return Object(ve["a"])(Object(ut["a"])(s),t)}}throw Error("Unknown reduction: "+n)}const Qa=Object(I["b"])({computeWeightedLoss_:Ya});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Za(e,t,n,r=Xa["a"].SUM_BY_NONZERO_WEIGHTS){const s=Object(O["a"])(e,"labels","absoluteDifference"),o=Object(O["a"])(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Object(O["a"])(n,"weights","absoluteDifference")),Object(A["e"])(s.shape,o.shape,"Error in absoluteDifference: ");const c=Object(a["a"])(Object(ct["a"])(s,o));return Qa(c,i,r)}const Ja=Object(I["b"])({absoluteDifference_:Za});function es(e,t,n,r,a=Xa["a"].SUM_BY_NONZERO_WEIGHTS){const s=Object(O["a"])(e,"labels","cosineDistance"),o=Object(O["a"])(t,"predictions","cosineDistance");let i=null;null!=r&&(i=Object(O["a"])(r,"weights","cosineDistance")),Object(A["e"])(s.shape,o.shape,"Error in cosineDistance: ");const c=Object($n["a"])(1),u=Object(ct["a"])(c,Object(ut["a"])(Object(w["a"])(s,o),n,!0));return Qa(u,i,a)}const ts=Object(I["b"])({cosineDistance_:es});function ns(e,t,n,r=Xa["a"].SUM_BY_NONZERO_WEIGHTS){let a=Object(O["a"])(e,"labels","hingeLoss");const s=Object(O["a"])(t,"predictions","hingeLoss");let o=null;null!=n&&(o=Object(O["a"])(n,"weights","hingeLoss")),Object(A["e"])(a.shape,s.shape,"Error in hingeLoss: ");const i=Object($n["a"])(1);a=Object(ct["a"])(Object(w["a"])(Object($n["a"])(2),a),i);const c=Object(yn["a"])(Object(ct["a"])(i,Object(w["a"])(a,s)));return Qa(c,o,r)}const rs=Object(I["b"])({hingeLoss_:ns});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function as(e,t,n,r=1,s=Xa["a"].SUM_BY_NONZERO_WEIGHTS){const o=Object(O["a"])(e,"labels","huberLoss"),c=Object(O["a"])(t,"predictions","huberLoss");let u=null;null!=n&&(u=Object(O["a"])(n,"weights","huberLoss")),Object(A["e"])(o.shape,c.shape,"Error in huberLoss: ");const l=Object($n["a"])(r),d=Object(a["a"])(Object(ct["a"])(c,o)),p=Object(Tt["a"])(d,l),f=Object(ct["a"])(d,p),h=Object(i["a"])(Object(w["a"])(Object($n["a"])(.5),Object(Et["a"])(p)),Object(w["a"])(l,f));return Qa(h,u,s)}const ss=Object(I["b"])({huberLoss_:as});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function os(e,t,n,r=1e-7,a=Xa["a"].SUM_BY_NONZERO_WEIGHTS){const s=Object(O["a"])(e,"labels","logLoss"),o=Object(O["a"])(t,"predictions","logLoss");let c=null;null!=n&&(c=Object(O["a"])(n,"weights","logLoss")),Object(A["e"])(s.shape,o.shape,"Error in logLoss: ");const u=Object($n["a"])(1),l=Object($n["a"])(r),d=Object(tt["a"])(Object(w["a"])(s,Object(Ze["a"])(Object(i["a"])(o,l)))),p=Object(w["a"])(Object(ct["a"])(u,s),Object(Ze["a"])(Object(i["a"])(Object(ct["a"])(u,o),l))),f=Object(ct["a"])(d,p);return Qa(f,c,a)}const is=Object(I["b"])({logLoss_:os});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cs(e,t,n,r=Xa["a"].SUM_BY_NONZERO_WEIGHTS){const a=Object(O["a"])(e,"labels","meanSquaredError"),s=Object(O["a"])(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=Object(O["a"])(n,"weights","meanSquaredError")),Object(A["e"])(a.shape,s.shape,"Error in meanSquaredError: ");const i=Object(er["a"])(a,s);return Qa(i,o,r)}const us=Object(I["b"])({meanSquaredError_:cs});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ls(e,t){const n=Object(O["a"])(e,"labels","sigmoidCrossEntropyWithLogits"),r=Object(O["a"])(t,"logits","sigmoidCrossEntropyWithLogits");Object(A["e"])(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Object(yn["a"])(r),o=Object(w["a"])(r,n),c=Object(Je["a"])(Object(Ce["a"])(Object(tt["a"])(Object(a["a"])(r))));return Object(i["a"])(Object(ct["a"])(s,o),c)}function ds(e,t,n,r=0,a=Xa["a"].SUM_BY_NONZERO_WEIGHTS){let s=Object(O["a"])(e,"multiClassLabels","sigmoidCrossEntropy");const o=Object(O["a"])(t,"logits","sigmoidCrossEntropy");let c=null;if(null!=n&&(c=Object(O["a"])(n,"weights","sigmoidCrossEntropy")),Object(A["e"])(s.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Object($n["a"])(r),t=Object($n["a"])(1),n=Object($n["a"])(.5);s=Object(i["a"])(Object(w["a"])(s,Object(ct["a"])(t,e)),Object(w["a"])(n,e))}const u=ls(s,o);return Qa(u,c,a)}const ps=Object(I["b"])({sigmoidCrossEntropy_:ds});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fs(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was `+n);const r=Object(et["a"])((e,t,r)=>{const a=!0,s=dt(t,[n],a),o=Object(ct["a"])(Object(V["a"])(t,"float32"),s);r([e,o]);const i=Object(tt["a"])(Object(w["a"])(o,e)),c=Object(ut["a"])(i,[n]),u=(e,t)=>{const[r,a]=t,s=Object(ot["e"])(e.shape,[n]);return[Object(w["a"])(Object(ie["a"])(e,s),Object(ct["a"])(Object(V["a"])(r,"float32"),Object(Ce["a"])(a))),Object(w["a"])(Object(ie["a"])(e,s),Object(ct["a"])(Object(Ce["a"])(a),Object(V["a"])(r,"float32")))]};return{value:c,gradFunc:u}});return r(e,t)}function hs(e,t,n,r=0,a=Xa["a"].SUM_BY_NONZERO_WEIGHTS){let s=Object(O["a"])(e,"onehotLabels","softmaxCrossEntropy");const o=Object(O["a"])(t,"logits","softmaxCrossEntropy");let c=null;if(null!=n&&(c=Object(O["a"])(n,"weights","softmaxCrossEntropy")),Object(A["e"])(s.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Object($n["a"])(r),t=Object($n["a"])(1),n=Object($n["a"])(s.shape[1]);s=Object(i["a"])(Object(w["a"])(s,Object(ct["a"])(t,e)),Object(ve["a"])(e,n))}const u=fs(s,o);return Qa(u,c,a)}const ms=Object(I["b"])({softmaxCrossEntropy_:hs});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bs(e,t,n,r){const a=Object(O["a"])(e,"indices","sparseFillEmptyRows"),s=Object(O["a"])(t,"values","sparseFillEmptyRows"),o=Object(O["a"])(n,"denseShape","sparseFillEmptyRows"),i=Object(O["a"])(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error("Indices should be Tensor2D but received shape\n        "+a.shape);if(1!==s.rank)throw new Error("Values should be Tensor1D but received shape "+s.shape);if(1!==o.rank)throw new Error("Dense shape should be Tensor1D but received shape "+o.shape);if(0!==i.rank)throw new Error("Default value should be a scalar but received shape "+i.shape);const c={indices:a,values:s,denseShape:o,defaultValue:i},u=se["a"].runKernel(oe["Jc"],c);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}const gs=Object(I["b"])({sparseFillEmptyRows_:bs});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ys(e,t,n){const r=Object(O["a"])(e,"inputIndices","sparseReshape"),a=Object(O["a"])(t,"inputShape","sparseReshape"),s=Object(O["a"])(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error("Input indices should be Tensor2D but received shape\n        "+r.shape);if(1!==a.rank)throw new Error("Input shape should be Tensor1D but received shape "+a.shape);if(1!==s.rank)throw new Error("New shape should be Tensor1D but received shape "+s.shape);const o={inputIndices:r,inputShape:a,newShape:s},i=se["a"].runKernel(oe["Kc"],o);return{outputIndices:i[0],outputShape:i[1]}}const xs=Object(I["b"])({sparseReshape_:ys}),Os={fft:Kn["a"],ifft:Xn["a"],rfft:Qn["a"],irfft:Yn["a"]},vs={hammingWindow:sa,hannWindow:ia,frame:ua,stft:da},ks={flipLeftRight:ma,resizeNearestNeighbor:Fa,resizeBilinear:Ra,rotateWithOffset:ga,cropAndResize:fa,nonMaxSuppression:Oa,nonMaxSuppressionAsync:wa,nonMaxSuppressionWithScore:Na,nonMaxSuppressionWithScoreAsync:Ta,nonMaxSuppressionPadded:Ca,nonMaxSuppressionPaddedAsync:$a,threshold:La,transform:Ba},ws={bandPart:Va,gramSchmidt:Ua,qr:Ka},Is={absoluteDifference:Ja,computeWeightedLoss:Qa,cosineDistance:ts,hingeLoss:rs,huberLoss:ss,logLoss:is,meanSquaredError:us,sigmoidCrossEntropy:ps,softmaxCrossEntropy:ms},Ns={sparseFillEmptyRows:gs,sparseReshape:xs};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},1359:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","log"),n={x:t};return r["a"].runKernel(a["Cb"],n)}const c=Object(o["b"])({log_:i})},1590:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("b818"),c=n("54ef"),u=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l(e,t,n,c,l="NDHWC",d=[1,1,1]){const p=Object(s["a"])(e,"x","conv3d"),f=Object(s["a"])(t,"filter","conv3d");let h=p,m=!1;4===p.rank&&(m=!0,h=Object(u["a"])(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),o["b"](5===h.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${h.rank}.`),o["b"](5===f.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+f.rank+"."),o["b"](h.shape[4]===f.shape[3],()=>`Error in conv3d: depth of input (${h.shape[4]}) must match input depth for filter ${f.shape[3]}.`),o["b"](Object(i["h"])(n,d),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`),o["b"]("NDHWC"===l,()=>`Error in conv3d: got dataFormat of ${l} but only NDHWC is currently supported.`);const b={x:h,filter:f},g={strides:n,pad:c,dataFormat:l,dilations:d},y=r["a"].runKernel(a["F"],b,g);return m?Object(u["a"])(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}const d=Object(c["b"])({conv3d_:l})},"15d4":function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return i}));var r=n("fa11"),a=n("cedd"),s=n("1235");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e){const{inputs:t,attrs:n,backend:r}=e,{x:o}=t,{perm:i}=n;Object(a["a"])(o,"transpose");const c=o.shape.length,u=new Array(c);for(let a=0;a<u.length;a++)u[a]=o.shape[i[a]];const l=r.data.get(o.dataId).values,d=Object(s["a"])(l,o.shape,o.dtype,i,u),p=r.write(d,u,o.dtype);return{dataId:p,shape:u,dtype:o.dtype}}const i={kernelName:r["Transpose"],backendName:"cpu",kernelFunc:o}},"163a":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","sqrt"),n={x:t};return r["a"].runKernel(a["Nc"],n)}const c=Object(o["b"])({sqrt_:i})},"1aa1":function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return s}));var r=n("fa11");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,s){const o=r["util"].sizeFromShape(a),i=r["util"].makeZerosTypedArray(s,n);for(let r=0;r<e.length;r++){const n=e[r];if(n<0)throw new Error("Input x must be non-negative!");n>=s||(i[n]+=o>0?t[r]:1)}return i}function s(e,t,n,a=!1){const s=e.shape[0],o=e.shape[1],i=Object(r["buffer"])([s,n],t.dtype);for(let r=0;r<s;r++)for(let s=0;s<o;s++){const o=e.get(r,s);if(o<0)throw new Error("Input x must be non-negative!");o>=n||(a?i.set(1,r,o):t.size>0?i.set(i.get(r,o)+t.get(r,s),r,o):i.set(i.get(r,o)+1,r,o))}return i}},"1ab7":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("6ad5"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){Object(s["b"])("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);const t={input:e};return r["a"].runKernel(a["db"],t)}const c=Object(o["b"])({fft_:i})},"1b2e":function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("fa11");
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,s,o,i){const c=t[0],u=o[0],l=new Array(u),d=new Array(c),p=t[1];if(0===u){if(0!==c)throw new Error("Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = "+c);const e=r["util"].getArrayFromDType(n,0),t=r["util"].getArrayFromDType(s,0);return[e,[0,p],t,l,d]}let f=!0,h=0;const m=new Array(u).fill(0);for(let r=0;r<c;++r){const t=e[r*p];if(t<0)throw new Error(`indices(${r}, 0) is invalid: ${t} < 0`);if(t>=u)throw new Error(`indices(${r}, 0) is invalid: ${t} >= ${u}`);++m[t],f=f&&t>=h,h=t}let b=!0;for(let r=0;r<u;++r){const e=0===m[r];l[r]=e,b=b&&!e,m[r]=Math.max(m[r],1),r>0&&(m[r]+=m[r-1])}if(b&&f){const t=e,n=a;for(let e=0;e<c;++e)d[e]=e;return[t,[c,p],n,l,d]}{const t=m[u-1],o=r["util"].getArrayFromDType(n,t*p),f=r["util"].getArrayFromDType(s,t),h=new Array(u).fill(0);for(let n=0;n<c;++n){const t=e[n*p],r=h[t],s=(0===t?0:m[t-1])+r;h[t]++;for(let a=0;a<p;++a)o[s*p+a]=e[n*p+a];f[s]=a[n],d[n]=s}for(let e=0;e<u;++e){const t=h[e];if(0===t){const t=0===e?0:m[e-1];o[t*p+0]=e;for(let e=1;e<p;++e)o[t*p+e]=0;f[t]=i}}return[o,[c,p],f,l,d]}}},"1ba2":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","expm1"),n={x:t};return r["a"].runKernel(a["cb"],n)}const c=Object(o["b"])({expm1_:i})},"1da1":function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));n("d3b7");function r(e,t,n,r,a,s,o){try{var i=e[s](o),c=i.value}catch(u){return void n(u)}i.done?t(c):Promise.resolve(c).then(r,a)}function a(e){return function(){var t=this,n=arguments;return new Promise((function(a,s){var o=e.apply(t,n);function i(e){r(o,a,s,i,c,"next",e)}function c(e){r(o,a,s,i,c,"throw",e)}i(void 0)}))}}},"1dd2":function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return s}));var r=n("fa11");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const s={kernelName:r["Identity"],backendName:"cpu",kernelFunc:a}},"1df6":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","sign"),n={x:t};return r["a"].runKernel(a["Cc"],n)}const c=Object(o["b"])({sign_:i})},"1e68":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=0,n=!1,o=!1){const i=Object(s["a"])(e,"x","cumsum"),c={x:i},u={axis:t,exclusive:n,reverse:o};return r["a"].runKernel(a["L"],c,u)}const c=Object(o["b"])({cumsum_:i})},"1faf":function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return c}));var r=n("fa11"),a=n("7d43"),s=n("bf1d");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a["a"])((e,t)=>e!==t?1:0),i=Object(s["a"])(r["NotEqual"],o,null,"bool"),c={kernelName:r["NotEqual"],backendName:"cpu",kernelFunc:i}},"1fb5":function(e,t,n){"use strict";t.byteLength=l,t.toByteArray=p,t.fromByteArray=m;for(var r=[],a=[],s="undefined"!==typeof Uint8Array?Uint8Array:Array,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,c=o.length;i<c;++i)r[i]=o[i],a[o.charCodeAt(i)]=i;function u(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");-1===n&&(n=t);var r=n===t?0:4-n%4;return[n,r]}function l(e){var t=u(e),n=t[0],r=t[1];return 3*(n+r)/4-r}function d(e,t,n){return 3*(t+n)/4-n}function p(e){var t,n,r=u(e),o=r[0],i=r[1],c=new s(d(e,o,i)),l=0,p=i>0?o-4:o;for(n=0;n<p;n+=4)t=a[e.charCodeAt(n)]<<18|a[e.charCodeAt(n+1)]<<12|a[e.charCodeAt(n+2)]<<6|a[e.charCodeAt(n+3)],c[l++]=t>>16&255,c[l++]=t>>8&255,c[l++]=255&t;return 2===i&&(t=a[e.charCodeAt(n)]<<2|a[e.charCodeAt(n+1)]>>4,c[l++]=255&t),1===i&&(t=a[e.charCodeAt(n)]<<10|a[e.charCodeAt(n+1)]<<4|a[e.charCodeAt(n+2)]>>2,c[l++]=t>>8&255,c[l++]=255&t),c}function f(e){return r[e>>18&63]+r[e>>12&63]+r[e>>6&63]+r[63&e]}function h(e,t,n){for(var r,a=[],s=t;s<n;s+=3)r=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]),a.push(f(r));return a.join("")}function m(e){for(var t,n=e.length,a=n%3,s=[],o=16383,i=0,c=n-a;i<c;i+=o)s.push(h(e,i,i+o>c?c:i+o));return 1===a?(t=e[n-1],s.push(r[t>>2]+r[t<<4&63]+"==")):2===a&&(t=(e[n-2]<<8)+e[n-1],s.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"=")),s.join("")}a["-".charCodeAt(0)]=62,a["_".charCodeAt(0)]=63},2:function(e,t){},"220f":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","asin"),n={x:t};return r["a"].runKernel(a["j"],n)}const c=Object(o["b"])({asin_:i})},"235d":function(e,t,n){"use strict";n.d(t,"c",(function(){return s})),n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return i}));var r=n("fa11"),a=n("cedd");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t,n,a,s){const o=r["slice_util"].isSliceContinous(a,t,n),i=r["util"].sizeFromShape(n),c=r["util"].computeStrides(a);if(o){const n=r["slice_util"].computeFlatOffset(t,c);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const u="string"===s?r["backend_util"].fromUint8ToStringArray(e):e,l=Object(r["buffer"])(a,s,u),d=Object(r["buffer"])(n,s);for(let r=0;r<d.size;++r){const e=d.indexToLoc(r),n=e.map((e,n)=>e+t[n]);d.set(l.get(...n),...e)}return"string"===s?r["backend_util"].fromStringArrayToUint8(d.values):d.values}function o(e){const{inputs:t,backend:n,attrs:o}=e,{x:i}=t,{begin:c,size:u}=o;Object(a["a"])(i,"slice");const[l,d]=r["slice_util"].parseSliceParams(i,c,u);r["slice_util"].assertParamsValid(i,l,d);const p=n.data.get(i.dataId).values,f=s(p,l,d,i.shape,i.dtype);return n.makeTensorInfo(d,i.dtype,f)}const i={kernelName:r["Slice"],backendName:"cpu",kernelFunc:o}},"23bf":function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var r,a,s,o,i;n.d(t,"a",(function(){return r})),n.d(t,"c",(function(){return u})),n.d(t,"b",(function(){return l})),function(e){e["R0"]="R0",e["R1"]="R1",e["R2"]="R2",e["R3"]="R3",e["R4"]="R4",e["R5"]="R5",e["R6"]="R6"}(r||(r={})),function(e){e["float32"]="float32",e["int32"]="int32",e["bool"]="int32",e["complex64"]="complex64"}(a||(a={})),function(e){e["float32"]="float32",e["int32"]="int32",e["bool"]="bool",e["complex64"]="complex64"}(s||(s={})),function(e){e["float32"]="float32",e["int32"]="float32",e["bool"]="float32",e["complex64"]="complex64"}(o||(o={})),function(e){e["float32"]="complex64",e["int32"]="complex64",e["bool"]="complex64",e["complex64"]="complex64"}(i||(i={}));const c={float32:o,int32:a,bool:s,complex64:i};function u(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return c[e][t]}function l(e){return u(e,"int32")}},"24b0":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"input","imag"),n={input:t};return r["a"].runKernel(a["sb"],n)}const c=Object(o["b"])({imag_:i})},"29a8":function(e,t,n){"use strict";(function(e){n("6ae2");var t=n("7ed6"),r=n("b333");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const a=Object(r["c"])();a.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),a.registerFlag("IS_BROWSER",()=>t["isBrowser"]()),a.registerFlag("IS_NODE",()=>"undefined"!==typeof e&&"undefined"!==typeof e.versions&&"undefined"!==typeof e.versions.node),a.registerFlag("IS_CHROME",()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),a.registerFlag("PROD",()=>!1),a.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>a.getBool("DEBUG")),a.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),a.registerFlag("IS_TEST",()=>!1),a.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),a.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1)}).call(this,n("4362"))},"29d8":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]},"2f2c":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t,n,i=!1){const c=Object(s["a"])(e,"x","denseBincount"),u=Object(s["a"])(t,"weights","denseBincount");o["b"]("int32"===c.dtype,()=>"Error in denseBincount: input dtype must be int32, but got "+c.dtype),o["b"](c.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${c.rank}.`),o["b"](n>=0,()=>`size must be non-negative, but got ${n}.`),o["b"](u.size===c.size||0===u.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${c.shape}, weights shape: `+u.shape+".");const l={x:c,weights:u},d={size:n,binaryOutput:i};return r["a"].runKernel(a["M"],l,d)}const u=Object(i["b"])({denseBincount_:c})},"2fb1":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=0){const n=Object(s["a"])(e,"x","step"),o={x:n},i={alpha:t};return r["a"].runKernel(a["Qc"],o,i)}const c=Object(o["b"])({step_:i})},3:function(e,t){},"31a0":function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("fa11");
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,s){const o=r["util"].sizeFromShape(a),i=t[0],c=s.length,u=[];let l=1,d=-1;for(let r=0;r<c;++r){const e=s[r];if(-1===e){if(-1!==d)throw new Error(`only one output dimension may be -1, not both ${d} and ${r}`);d=r,u.push(1)}else{if(e<0)throw new Error(`size ${r} must be non-negative, not ${e}`);l*=e,u.push(e)}}if(-1!==d){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(o/l);if(l*e!==o)throw new Error(`Input to reshape is a SparseTensor with ${o}\n          dense values, but the requested shape requires a multiple of ${l}. inputShape=${a} outputShape= ${u}`);u[d]=e}const p=r["util"].sizeFromShape(u);if(p!==o)throw new Error(`Input to reshape is a tensor with ${o} dense values, but the requested shape has ${p}. inputShape=${a} outputShape=${u}`);const f=a.length,h=[];if(f>0){h[f-1]=1;for(let e=f-2;e>=0;--e)h[e]=h[e+1]*a[e+1]}const m=[];if(c>0){m[c-1]=1;for(let e=c-2;e>=0;--e)m[e]=m[e+1]*u[e+1]}const b=r["util"].getArrayFromDType(n,i*c);for(let r=0;r<i;++r){let t=0;for(let n=0;n<f;++n)t+=e[r*f+n]*h[n];for(let e=0;e<c;++e)b[r*c+e]=Math.trunc(t/m[e]),t%=m[e]}return[b,[i,c],u]}},"31bb":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},"34d7":function(e,t,n){"use strict";n.d(t,"b",(function(){return m})),n.d(t,"f",(function(){return x})),n.d(t,"e",(function(){return O})),n.d(t,"d",(function(){return v})),n.d(t,"a",(function(){return k})),n.d(t,"c",(function(){return I}));var r=n("f490"),a=n("6ad5");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=20,o=3,i=7;function c(e,t,n,r){const s=Object(a["j"])(t),o=u(e,t,n,s),i=t.length,c=p(e,t,n,s,o),l=["Tensor"];return r&&(l.push("  dtype: "+n),l.push("  rank: "+i),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(c.map(e=>"    "+e).join("\n")),l.join("\n")}function u(e,t,n,r){const s=Object(a["O"])(t),o=r[r.length-1],i=new Array(o).fill(0),c=t.length,u="complex64"===n?f(e):e;if(c>1)for(let a=0;a<s/o;a++){const e=a*o;for(let t=0;t<o;t++)i[t]=Math.max(i[t],l(u[e+t],0,n).length)}return i}function l(e,t,n){let r;return r=Array.isArray(e)?parseFloat(e[0].toFixed(i))+" + "+parseFloat(e[1].toFixed(i))+"j":Object(a["z"])(e)?`'${e}'`:"bool"===n?d(e):parseFloat(e.toFixed(i)).toString(),Object(a["L"])(r,t)}function d(e){return 0===e?"false":"true"}function p(e,t,n,r,a,i=!0){const c="complex64"===n?2:1,u=t[0],h=t.length;if(0===h){if("complex64"===n){const t=f(e);return[l(t[0],0,n)]}return"bool"===n?[d(e[0])]:[e[0].toString()]}if(1===h){if(u>s){const t=o*c;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((u-o)*c,u*c));return"complex64"===n&&(r=f(r),s=f(s)),["["+r.map((e,t)=>l(e,a[t],n)).join(", ")+", ..., "+s.map((e,t)=>l(e,a[u-o+t],n)).join(", ")+"]"]}const t="complex64"===n?f(e):Array.from(e);return["["+t.map((e,t)=>l(e,a[t],n)).join(", ")+"]"]}const m=t.slice(1),b=r.slice(1),g=r[0]*c,y=[];if(u>s){for(let t=0;t<o;t++){const r=t*g,s=r+g;y.push(...p(e.slice(r,s),m,n,b,a,!1))}y.push("...");for(let t=u-o;t<u;t++){const r=t*g,s=r+g;y.push(...p(e.slice(r,s),m,n,b,a,t===u-1))}}else for(let s=0;s<u;s++){const t=s*g,r=t+g;y.push(...p(e.slice(t,r),m,n,b,a,s===u-1))}const x=2===h?",":"";y[0]="["+y[0]+x;for(let s=1;s<y.length-1;s++)y[s]=" "+y[s]+x;let O=",\n";for(let s=2;s<h;s++)O+="\n";return y[y.length-1]=" "+y[y.length-1]+"]"+(i?"":O),y}function f(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var h=n("eb7e");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class m{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=a["O"](e),null!=n){const e=n.length;a["b"](e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a["n"](t,this.size),this.strides=Object(a["j"])(e)}set(e,...t){0===t.length&&(t=[0]),a["b"](t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=`+this.shape;throw new Error(t)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return b().makeTensor(this.values,this.shape,this.dtype)}}let b=null,g=null,y=null;function x(e){b=e}function O(e){g=e}function v(e){y=e}class k{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a["O"](e),this.strides=Object(a["j"])(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return g.buffer(this.shape,this.dtype,e)}bufferSync(){return g.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Object(a["T"])(this.shape,e,"complex64"===this.dtype)}arraySync(){return Object(a["T"])(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=b().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map(e=>h["decodeString"](e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=b().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>h["decodeString"](e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await b().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(b().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return g.print(this,e)}clone(){return this.throwIfDisposed(),g.clone(this)}toString(e=!1){const t=this.dataSync();return c(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),g.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),b().makeVariable(this,e,t,n)}}function w(){return Object(r["a"])("Tensor",()=>k)}Object.defineProperty(k,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),w();class I extends k{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!a["a"](e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);b().disposeTensor(this),this.dataId=e.dataId,b().incRef(this,null)}dispose(){b().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(I,Symbol.hasInstance,{value:e=>e instanceof k&&null!=e.assign&&e.assign instanceof Function})},"350f":function(e,t,n){"use strict";(function(e){n.d(t,"f",(function(){return c})),n.d(t,"e",(function(){return u})),n.d(t,"a",(function(){return f})),n.d(t,"b",(function(){return h})),n.d(t,"d",(function(){return m})),n.d(t,"c",(function(){return b})),n.d(t,"g",(function(){return g}));var r=n("0777"),a=n("357d"),s=n("6ad5"),o=n("9847");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=4;async function c(e,t){const n=[],r=[],a=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let o=0;o<a.length;++o){const s=a[o],c=Array.isArray(e)?e[o].tensor:e[s];if("float32"!==c.dtype&&"int32"!==c.dtype&&"bool"!==c.dtype&&"string"!==c.dtype&&"complex64"!==c.dtype)throw new Error(`Unsupported dtype in weight '${s}': ${c.dtype}`);const u={name:s,shape:c.shape,dtype:c.dtype};if("string"===c.dtype){const e=new Promise(async e=>{const t=await c.bytes(),n=t.reduce((e,t)=>e+t.length,0)+i*t.length,r=new Uint8Array(n);let a=0;for(let s=0;s<t.length;s++){const e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,a),a+=i,r.set(e,a),a+=e.length}e(r)});r.push(e)}else r.push(c.data());null!=t&&(u.group=t),n.push(u)}const s=await Promise.all(r);return{data:l(s),specs:n}}function u(e,t){const n={};let c,u=0;for(const l of t){const t=l.name,d=l.dtype,p=l.shape,f=Object(s["O"])(p);let h;if("quantization"in l){const n=l.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${l.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${l.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==d)throw new Error(`Weight ${l.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${d}.`)}const r=o["a"][n.dtype],a=e.slice(u,u+f*r),s="uint8"===n.dtype?new Uint8Array(a):new Uint16Array(a);if("float32"===d)if("uint8"===n.dtype||"uint16"===n.dtype){h=new Float32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];h[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===c&&(c=v()),h=c(s)}else{if("int32"!==d)throw new Error(`Unsupported dtype in weight '${t}': ${d}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);h=new Int32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];h[e]=Math.round(t*n.scale+n.min)}}u+=f*r}else if("string"===d){const t=Object(s["O"])(l.shape);h=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(u,u+i))[0];u+=i;const n=new Uint8Array(e.slice(u,u+t));h.push(n),u+=t}}else{const s=o["a"][d],i=e.slice(u,u+f*s);if("float32"===d)h=new Float32Array(i);else if("int32"===d)h=new Int32Array(i);else if("bool"===d)h=new Uint8Array(i);else{if("complex64"!==d)throw new Error(`Unsupported dtype in weight '${t}': ${d}`);{h=new Float32Array(i);const e=new Float32Array(h.length/2),s=new Float32Array(h.length/2);for(let t=0;t<e.length;t++)e[t]=h[2*t],s[t]=h[2*t+1];const o=Object(a["a"])(e,p,"float32"),c=Object(a["a"])(s,p,"float32");n[t]=Object(r["a"])(o,c),o.dispose(),c.dispose()}}u+=f*s}"complex64"!==d&&(n[t]=Object(a["a"])(h,p,d))}return n}function l(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)});const r=new Uint8Array(t);let a=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength}),r.buffer}const d="undefined"!==typeof e&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function p(t){return d?e.byteLength(t):new Blob([t]).size}function f(t){if(d)return e.from(t).toString("base64");const n=new Uint8Array(t);let r="";for(let e=0,a=n.length;e<a;e++)r+=String.fromCharCode(n[e]);return btoa(r)}function h(t){if(d){const n=e.from(t,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(t),r=new Uint8Array(n.length);for(let e=0;e<n.length;++e)r.set([n.charCodeAt(e)],e);return r.buffer}function m(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});const n=new Uint8Array(t);let r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function b(e){const t="/";e=e.trim();while(e.endsWith(t))e=e.slice(0,e.length-1);const n=e.split(t);return n[n.length-1]}function g(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:p(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:p(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function y(){const e=e=>{let t=e<<13,n=0;while(0===(8388608&t))n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function x(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function O(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function v(){const e=y(),t=x(),n=O();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let o=0;o<r.length;o++){const a=r[o],i=e[n[a>>10]+(1023&a)]+t[a>>10];s[o]=i}return new Float32Array(a)}}}).call(this,n("b639").Buffer)},"357d":function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("a3f7"),a=n("5959");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t,n){const s=Object(r["c"])(e,n);return Object(a["a"])(e,t,s,n)}},"35c9":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t){const n=Object(s["a"])(e,"x","reshape","string_or_numeric"),o={x:n},i={shape:t};return r["a"].runKernel(a["pc"],o,i)}const c=Object(o["b"])({reshape_:i})},"364e":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t,n="NHWC"){const i=Object(s["a"])(e,"x","depthToSpace"),c="NHWC"===n?i.shape[1]:i.shape[2],u="NHWC"===n?i.shape[2]:i.shape[3],l="NHWC"===n?i.shape[3]:i.shape[1];o["b"](c*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${c} and ${t}  for depthToSpace with input shape\n    ${i.shape}`),o["b"](u*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t} for depthToSpace with input shape\n        ${i.shape}`),o["b"](l%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${l} for depthToSpace with input shape ${i.shape}`);const d={x:i},p={blockSize:t,dataFormat:n};return r["a"].runKernel(a["N"],d,p)}const u=Object(i["b"])({depthToSpace_:c})},"36e5":function(e,t,n){"use strict";n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return s})),n.d(t,"d",(function(){return o})),n.d(t,"e",(function(){return i})),n.d(t,"a",(function(){return c})),n.d(t,"f",(function(){return u})),n.d(t,"h",(function(){return l})),n.d(t,"g",(function(){return d}));var r=n("6ad5");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function s(e,t,n){const r=e.length+t.length,a=[];let s=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?a.push(e[s++]):a.push(t[o++]);return a}function o(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);const a=t.map(t=>e[t]);return[n,a]}function i(e,t){const n=t.map(e=>1);return s(e,n,t)}function c(e,t,n){r["b"](a(t,n),()=>e+" supports only inner-most axes for now. "+`Got axes ${t} and rank-${n} input.`)}function u(e,t){if(a(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function l(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function d(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},"3a44":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t=0){const n=Object(s["a"])(e,"x","unstack","string_or_numeric");o["b"](t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);const i={value:n},c={axis:t};return r["a"].runKernel(a["bd"],i,c)}const u=Object(i["b"])({unstack_:c})},"3b28":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t,n){const i=Object(s["a"])(e,"x","batchToSpaceND"),c=t.reduce((e,t)=>e*t);o["b"](i.rank>=1+t.length,()=>`input rank is ${i.rank} but should be > than blockShape.length ${t.length}`),o["b"](n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),o["b"](i.shape[0]%c===0,()=>`input tensor batch is ${i.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${c}`);const u={x:i},l={blockShape:t,crops:n};return r["a"].runKernel(a["t"],u,l)}const u=Object(i["b"])({batchToSpaceND_:c})},"3bb7":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","neg"),n={x:t};return r["a"].runKernel(a["Wb"],n)}const c=Object(o["b"])({neg_:i})},"3bfc":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},"3c35":function(e,t){(function(t){e.exports=t}).call(this,{})},"3d50":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},"3efc":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef"),i=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t,n,o=!1){const c=Object(s["a"])(e,"logits","multinomial"),u=c.size,l=c.rank;if(u<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+u+".");if(l>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+l);n=n||Math.random();const d=1===l?Object(i["a"])(c,[1,-1]):c,p={logits:d},f={numSamples:t,seed:n,normalized:o},h=r["a"].runKernel(a["Ub"],p,f);return 1===l?Object(i["a"])(h,[h.size]):h}const u=Object(o["b"])({multinomial_:c})},4184:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("526f"),c=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){let n=Object(o["a"])(e,"a","squaredDifference"),c=Object(o["a"])(t,"b","squaredDifference");[n,c]=Object(s["makeTypesMatch"])(n,c),Object(i["a"])(n.shape,c.shape);const u={a:n,b:c},l={};return r["a"].runKernel(a["Pc"],u,l)}const l=Object(c["b"])({squaredDifference_:u})},"43d9":function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("fa11");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){const s=e===t,o=e<t&&n<0,i=t<e&&n>1;if(s||o||i)return r["util"].makeZerosTypedArray(0,a);const c=Math.abs(Math.ceil((t-e)/n)),u=r["util"].makeZerosTypedArray(c,a);t<e&&1===n&&(n=-1),u[0]=e;for(let r=1;r<u.length;r++)u[r]=u[r-1]+n;return u}},4516:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=null,n=!1){const o=Object(s["a"])(e,"x","any","bool"),i={x:o},c={axis:t,keepDims:n};return r["a"].runKernel(a["g"],i,c)}const c=Object(o["b"])({any_:i})},"45bb":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n=0){const o=Object(s["a"])(e,"x","split"),i={x:o},c={numOrSizeSplits:t,axis:n};return r["a"].runKernel(a["Mc"],i,c)}const c=Object(o["b"])({split_:i})},4611:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t){let n=Object(o["a"])(e,"a","mod"),i=Object(o["a"])(t,"b","mod");[n,i]=Object(s["makeTypesMatch"])(n,i);const c={a:n,b:i};return r["a"].runKernel(a["Tb"],c)}const u=Object(i["b"])({mod_:c})},4615:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","acosh"),n={x:t};return r["a"].runKernel(a["c"],n)}const c=Object(o["b"])({acosh_:i})},4681:function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return c}));var r=n("fa11"),a=n("cd4a"),s=n("892a");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a["a"])(e=>Math.ceil(e)),i=Object(s["b"])(r["Ceil"],o),c={kernelName:r["Ceil"],backendName:"cpu",kernelFunc:i}},"46a8":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","relu6"),n={x:t};return r["a"].runKernel(a["oc"],n)}const c=Object(o["b"])({relu6_:i})},"46b1":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","log1p"),n={x:t};return r["a"].runKernel(a["Db"],n)}const c=Object(o["b"])({log1p_:i})},"46b8":function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("6ae2"),a=n("c05b");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t,n){const s={shape:e,value:t,dtype:n};return r["a"].runKernel(a["eb"],{},s)}},"46cc":function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
var r,a;n.d(t,"a",(function(){return r})),function(e){e[e["DT_INVALID"]=0]="DT_INVALID",e[e["DT_FLOAT"]=1]="DT_FLOAT",e[e["DT_DOUBLE"]=2]="DT_DOUBLE",e[e["DT_INT32"]=3]="DT_INT32",e[e["DT_UINT8"]=4]="DT_UINT8",e[e["DT_INT16"]=5]="DT_INT16",e[e["DT_INT8"]=6]="DT_INT8",e[e["DT_STRING"]=7]="DT_STRING",e[e["DT_COMPLEX64"]=8]="DT_COMPLEX64",e[e["DT_INT64"]=9]="DT_INT64",e[e["DT_BOOL"]=10]="DT_BOOL",e[e["DT_QINT8"]=11]="DT_QINT8",e[e["DT_QUINT8"]=12]="DT_QUINT8",e[e["DT_QINT32"]=13]="DT_QINT32",e[e["DT_BFLOAT16"]=14]="DT_BFLOAT16",e[e["DT_FLOAT_REF"]=101]="DT_FLOAT_REF",e[e["DT_DOUBLE_REF"]=102]="DT_DOUBLE_REF",e[e["DT_INT32_REF"]=103]="DT_INT32_REF",e[e["DT_UINT8_REF"]=104]="DT_UINT8_REF",e[e["DT_INT16_REF"]=105]="DT_INT16_REF",e[e["DT_INT8_REF"]=106]="DT_INT8_REF",e[e["DT_STRING_REF"]=107]="DT_STRING_REF",e[e["DT_COMPLEX64_REF"]=108]="DT_COMPLEX64_REF",e[e["DT_INT64_REF"]=109]="DT_INT64_REF",e[e["DT_BOOL_REF"]=110]="DT_BOOL_REF",e[e["DT_QINT8_REF"]=111]="DT_QINT8_REF",e[e["DT_QUINT8_REF"]=112]="DT_QUINT8_REF",e[e["DT_QINT32_REF"]=113]="DT_QINT32_REF",e[e["DT_BFLOAT16_REF"]=114]="DT_BFLOAT16_REF"}(r||(r={})),function(e){let t;(function(e){e[e["LEGACY"]=0]="LEGACY",e[e["V1"]=1]="V1",e[e["V2"]=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(a||(a={}))},4749:function(e,t,n){"use strict";n.d(t,"c",(function(){return h})),n.d(t,"b",(function(){return m})),n.d(t,"a",(function(){return b})),n.d(t,"d",(function(){return g}));var r=n("526f"),a=n("9e38"),s=n("6f37"),o=n("a5aa"),i=n("520f"),c=n("917a"),u=n("46a8"),l=n("35c9"),d=n("ffb3"),p=n("2fb1"),f=n("e053");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function h(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Object(o["a"])(e,Object(p["a"])(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function m(e,t){let n=t;const a=r["c"](e.shape,t.shape);return a.length>0&&(n=Object(f["a"])(n,a)),Object(l["a"])(n,e.shape)}function b(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Object(c["a"])(e);if("elu"===t)return Object(a["a"])(e);if("relu6"===t)return Object(u["a"])(e);if("prelu"===t)return Object(i["a"])(e,n);if("leakyrelu"===t)return Object(s["a"])(e,r);if("sigmoid"===t)return Object(d["a"])(e);throw new Error(`Unknown fused activation ${t}.`)}const g=(e,t)=>{const n=e>0;return!n||"linear"===t}},4850:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e){o["b"](Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),o["b"](e.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+e.length);const t=e.map((e,t)=>Object(s["a"])(e,"tensors"+t,"addN")),n=t[0];t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!o["a"](e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const i=t;return r["a"].runKernel(a["e"],i)}const u=Object(i["b"])({addN_:c})},"487b":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t,n=!1,i=!1){let c=Object(o["a"])(e,"a","matMul"),u=Object(o["a"])(t,"b","matMul");[c,u]=Object(s["makeTypesMatch"])(c,u);const l={a:c,b:u},d={transposeA:n,transposeB:i};return r["a"].runKernel(a["s"],l,d)}const u=Object(i["b"])({matMul_:c})},"48db":function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("f0a9"),i=n("54ef"),c=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){let n=Object(s["a"])(e,"broadcastTo","x");const i=n.shape;if(t.some(e=>!(e>0)||e%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();while(e.length<t.length)e.unshift(1);n=Object(c["a"])(n,e)}const u=n.shape,l=Array.from(t);for(let r=t.length-1;r>=0;r--)if(u[r]===t[r])l[r]=1;else if(1!==n.shape[r])throw new Error(`broadcastTo(): [${i}] cannot be broadcast to [${t}].`);const d=l.map((e,t)=>e>1?t:-1).filter(e=>e>=0);if(0===d.length)return Object(o["a"])(n);const p={x:n},f={reps:l};return r["a"].runKernel(a["Wc"],p,f)}const l=Object(i["b"])({broadcastTo_:u})},"4b05":function(e,t,n){"use strict";(function(e){var t=n("b333");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r={importFetch:()=>n(1)};let a;class s{constructor(){this.util=n(2),this.textEncoder=new this.util.TextEncoder}fetch(e,n){return null!=Object(t["c"])().global.fetch?Object(t["c"])().global.fetch(e,n):(null==a&&(a=r.importFetch()),a(e,n))}now(){const t=e.hrtime();return 1e3*t[0]+t[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}Object(t["c"])().get("IS_NODE")&&Object(t["c"])().setPlatform("node",new s)}).call(this,n("4362"))},"4c7a":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("6ad5"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){Object(s["b"])("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);const t={input:e};return r["a"].runKernel(a["qb"],t)}const c=Object(o["b"])({ifft_:i})},"4c9c":function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return c}));var r=n("fa11"),a=n("cedd"),s=n("15d4");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t,n,a){const[s,o]=r["backend_util"].computeOutAndReduceShapes(e,a),i=Object(r["upcastType"])(t,"int32"),c=r["util"].makeZerosTypedArray(r["util"].sizeFromShape(s),i),u=r["util"].sizeFromShape(o);for(let r=0;r<c.length;++r){const e=r*u;let t=1;for(let r=0;r<u;++r)t*=n[e+r];c[r]=t}return{outVals:c,outShape:s,outDtype:i}}function i(e){const{inputs:t,backend:n,attrs:i}=e,{x:c}=t,{axis:u,keepDims:l}=i;Object(a["a"])(c,"prod");const d=c.shape.length,p=r["util"].parseAxisParam(u,c.shape),f=r["backend_util"].getAxesPermutation(p,d);let h=p,m=c;const b=[];null!=f&&(m=Object(s["a"])({inputs:{x:c},backend:n,attrs:{perm:f}}),b.push(m),h=r["backend_util"].getInnerMostAxes(h.length,d));const g=n.data.get(m.dataId).values,{outVals:y,outShape:x,outDtype:O}=o(m.shape,m.dtype,g,h);let v=x;return l&&(v=r["backend_util"].expandShapeToKeepDim(x,p)),b.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(v,O,y)}const c={kernelName:r["Prod"],backendName:"cpu",kernelFunc:i}},"4e1c":function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return c}));var r=n("fa11"),a=n("7d43"),s=n("bf1d");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a["a"])((e,t)=>{const n=e-t;return n*n}),i=Object(s["a"])(r["SquaredDifference"],o),c={kernelName:r["SquaredDifference"],backendName:"cpu",kernelFunc:i}},"4f20":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","exp"),n={x:t};return r["a"].runKernel(a["ab"],n)}const c=Object(o["b"])({exp_:i})},"508f":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t){let n=Object(o["a"])(e,"a","floorDiv"),i=Object(o["a"])(t,"b","floorDiv");[n,i]=Object(s["makeTypesMatch"])(n,i);const c={a:n,b:i};return r["a"].runKernel(a["hb"],c)}const u=Object(i["b"])({floorDiv_:c})},"520f":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t){const n=Object(s["a"])(e,"x","prelu"),o=Object(s["a"])(t,"alpha","prelu"),i={x:n,alpha:o};return r["a"].runKernel(a["hc"],i)}const c=Object(o["b"])({prelu_:i})},"526c":function(e,t,n){"use strict";n.d(t,"d",(function(){return a})),n.d(t,"e",(function(){return s})),n.d(t,"f",(function(){return o})),n.d(t,"b",(function(){return i})),n.d(t,"g",(function(){return u})),n.d(t,"c",(function(){return l})),n.d(t,"a",(function(){return d}));var r=n("fa11");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,o){const i=t.inputParams[e];if(i&&void 0!==i.inputIndexStart){const e=i.inputIndexStart,c=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?e+1:i.inputIndexEnd;if("tensor"===i.type)return s(t.inputNames[i.inputIndexStart],n,a,o);if("tensors"===i.type){const r=t.inputNames.slice(e,c);return r.map(e=>s(e,n,a,o))}const u=s(t.inputNames.slice(e)[0],n,a,o),l=u.dataSync();return"number"===i.type?l[0]:r["util"].toNestedArray(u.shape,l)}const c=t.attrParams[e];return c&&c.value}function s(e,t,n,r){const[a,s]=u(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const o=n.currentContextIds.find(e=>!!t[c(a,e)]);return void 0!==o?t[c(a,o)][s]:void 0}function o(e,t,n){return t[c(e,n.currentContextId)]}function i(e,t){const[n,r]=u(e);return[c(n,t&&t.currentContextId),r]}function c(e,t){return t?`${e}-${t}`:e}function u(e){const t=e.split(":");if(1===t.length)return[e,0];const n=t[0];return[n,Number(t[t.length-1])]}function l(e,t,n){let r=a("pad",e,t,n);if("explicit"===r){r=a("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function d(e){return e.kept?e:Object(r["clone"])(e)}},"526f":function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,o=e[s]||1,i=t[t.length-1-a]||1;i>1&&1===o&&r.unshift(s)}return r}function a(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,o=t[s];(null==a||1===a&&o>1)&&n.unshift(s)}return n}function s(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){const n=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(n)}n.unshift(r)}}return n}n.d(t,"b",(function(){return r})),n.d(t,"c",(function(){return a})),n.d(t,"a",(function(){return s}))},"52f6":function(e,t,n){"use strict";n.d(t,"c",(function(){return o})),n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return u}));var r=n("fa11"),a=n("7d43"),s=n("bf1d");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a["a"])((e,t)=>e-t),i=Object(s["b"])((e,t,n,r)=>({real:e-n,imag:t-r})),c=Object(s["a"])(r["Sub"],o,i),u={kernelName:r["Sub"],backendName:"cpu",kernelFunc:c}},"538e":function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"f",(function(){return d})),n.d(t,"d",(function(){return u})),n.d(t,"e",(function(){return l})),n.d(t,"b",(function(){return i})),n.d(t,"c",(function(){return c}));var r=n("6ae2"),a=n("34d7"),s=n("a3f7"),o=n("6ad5");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){return o["b"](o["u"](e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{const a=Object(s["a"])(t,"x","tf.grad","string_or_numeric"),i=null!=n?Object(s["a"])(n,"dy","tf.grad"):null;return r["a"].tidy(()=>{const{value:t,grads:n}=r["a"].gradients(()=>e(a),[a],i);return null!=i&&o["e"](t.shape,i.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),f(n),n[0]})}}function c(e){return o["b"](o["u"](e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{o["b"](Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const a=Object(s["b"])(t,"args","tf.grads","string_or_numeric"),i=null!=n?Object(s["a"])(n,"dy","tf.grads"):null;return r["a"].tidy(()=>{const{value:t,grads:n}=r["a"].gradients(()=>e(...a),a,i);return null!=i&&o["e"](t.shape,i.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),f(n),n})}}function u(e){return o["b"](o["u"](e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{o["b"](t instanceof a["a"],()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),o["b"](null==n||n instanceof a["a"],()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:s,value:i}=r["a"].gradients(()=>e(t),[t],n);return f(s),{grad:s[0],value:i}}}function l(e){return o["b"](o["u"](e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{o["b"](Array.isArray(t)&&t.every(e=>e instanceof a["a"]),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),o["b"](null==n||n instanceof a["a"],()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const s=r["a"].gradients(()=>e(...t),t,n);return null!=n&&o["e"](s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),f(s.grads),s}}function d(e,t){o["b"](o["u"](e),()=>"The f passed in variableGrads(f) must be a function"),o["b"](null==t||Array.isArray(t)&&t.every(e=>e instanceof a["c"]),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in r["a"].registeredVariables)t.push(r["a"].registeredVariables[e])}const s=n?t.filter(e=>!e.trainable):null,i=t.length;t=t.filter(e=>e.trainable),o["b"](t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`);const c=!0,{value:u,grads:l}=r["a"].gradients(e,t,null,c);o["b"](l.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),o["b"](0===u.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`);const d={};return t.forEach((e,t)=>{null!=l[t]&&(d[e.name]=l[t])}),null!=s&&s.forEach(e=>d[e.name]=null),{value:u,grads:d}}function p(e){return r["a"].customGrad(e)}function f(e){const t=e.filter(e=>null==e).length;if(t>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},"53fd":function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef"),c=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t=[1,1,1],n,i,u,l="NDHWC"){const d=Object(s["a"])(e,"x","maxPool3d");let p=d,f=!1;4===d.rank&&(f=!0,p=Object(c["a"])(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),o["b"](5===p.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${p.rank}.`),o["b"]("NDHWC"===l,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+l),null!=u&&o["b"](o["v"](i),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${u} but got pad ${i}.`);const h={x:p},m={filterSize:t,strides:n,pad:i,dimRoundingMode:u,dataFormat:l},b=r["a"].runKernel(a["Kb"],h,m);return f?Object(c["a"])(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}const l=Object(i["b"])({maxPool3d_:u})},"54ef":function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return o}));var r=n("6ae2"),a=n("6ad5");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s="__op";function o(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");let n=t[0];const o=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const i=(...e)=>{r["a"].startScope(n);try{const t=o(...e);return Object(a["x"])(t)&&console.error("Cannot return a Promise inside of tidy."),r["a"].endScope(t),t}catch(t){throw r["a"].endScope(null),t}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},5616:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=1,n=!0){const o=Object(s["a"])(e,"x","topk");if(0===o.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=o.shape[o.shape.length-1];if(t>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got `+t);const c={x:o},u={k:t,sorted:n},[l,d]=r["a"].runKernel(a["Xc"],c,u);return{values:l,indices:d}}const c=Object(o["b"])({topk_:i})},"57e0":function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var r;n.d(t,"a",(function(){return r})),function(e){e[e["NONE"]=0]="NONE",e[e["MEAN"]=1]="MEAN",e[e["SUM"]=2]="SUM",e[e["SUM_BY_NONZERO_WEIGHTS"]=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},5874:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]},5894:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("6ae2"),a=n("c05b");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:e,stop:t,num:n};return r["a"].runKernel(a["Bb"],{},s)}},5959:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("6ae2"),a=n("6ad5"),s=n("eb7e");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t,n,o){if(null==o&&(o=Object(a["r"])(e)),"complex64"===o)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(a["A"])(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Object(a["c"])(t);const e=Object(a["O"])(t),r=Object(a["O"])(n);Object(a["b"])(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let s=0;s<n.length;++s){const e=n[s],r=s!==n.length-1||e!==Object(a["O"])(t.slice(s));Object(a["b"])(n[s]===t[s]||!r,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return Object(a["A"])(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==o?Object(s["toTypedArray"])(e,o):Object(a["m"])(e,[],!0),r["a"].makeTensor(e,t,o)}},5960:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","ceil"),n={x:t};return r["a"].runKernel(a["x"],n)}const c=Object(o["b"])({ceil_:i})},"5a2c":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("6ae2"),a=n("6ad5"),s=n("0777");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t="float32"){if("complex64"===t){const t=o(e,"float32"),n=o(e,"float32");return Object(s["a"])(t,n)}const n=Object(a["F"])(Object(a["O"])(e),t);return r["a"].makeTensor(n,e,t)}},"5dc4":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","sinh"),n={x:t};return r["a"].runKernel(a["Ec"],n)}const c=Object(o["b"])({sinh_:i})},"5f2a":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","rsqrt"),n={x:t};return r["a"].runKernel(a["xc"],n)}const c=Object(o["b"])({rsqrt_:i})},"5f87":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=-1){const n=Object(s["a"])(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const o={logits:n},i={dim:t};return r["a"].runKernel(a["Gc"],o,i)}const c=Object(o["b"])({softmax_:i})},6002:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t){let n=Object(o["a"])(e,"a","atan2"),i=Object(o["a"])(t,"b","atan2");[n,i]=Object(s["makeTypesMatch"])(n,i);const c={a:n,b:i};return r["a"].runKernel(a["m"],c)}const u=Object(i["b"])({atan2_:c})},6125:function(e,t,n){var r=n("1212"),a=n("b838"),s=n("a49e"),o=n("cae0"),i=n("7aec"),c=n("89ed"),u=n("a49d");u.alea=r,u.xor128=a,u.xorwow=s,u.xorshift7=o,u.xor4096=i,u.tychei=c,e.exports=u},"62e4":function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},"649e":function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("f0a9"),c=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t=0){Object(o["b"])(e.length>=1,()=>"Pass at least one tensor to concat");const n=Object(s["b"])(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length)return Object(i["a"])(n[0]);const c=n,u={axis:t};return r["a"].runKernel(a["B"],c,u)}const l=Object(c["b"])({concat_:u})},"673d":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}]},6791:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("48db"),i=n("526f"),c=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t,n){const c=Object(s["a"])(t,"a","where"),u=Object(s["a"])(n,"b","where"),l=Object(s["a"])(e,"condition","where","bool"),d=Object(i["a"])(Object(i["a"])(l.shape,c.shape),u.shape),p=Object(o["a"])(l,d),f=Object(o["a"])(c,d),h=Object(o["a"])(u,d),m={condition:p,t:f,e:h};return r["a"].runKernel(a["zc"],m)}const l=Object(c["b"])({where_:u})},"68db":function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return c}));var r=n("fa11"),a=n("cd4a"),s=n("892a");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a["a"])(e=>Math.log(e)),i=Object(s["b"])(r["Log"],o),c={kernelName:r["Log"],backendName:"cpu",kernelFunc:i}},6932:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","sin"),n={x:t};return r["a"].runKernel(a["Dc"],n)}const c=Object(o["b"])({sin_:i})},"69dc":function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n("0777"),a=n("649e"),s=n("24b0"),o=n("a5aa"),i=n("54ef"),c=n("d7b0"),u=n("35c9"),l=n("d08e"),d=n("015f"),p=n("6d3c"),f=n("4c7a");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function h(e){const t=e.shape[e.shape.length-1],n=e.size/t;let i;if(t<=2){const r=Object(u["a"])(e,[n,t]);i=Object(f["a"])(r)}else{const h=[n,2*(t-1)],m=Object(u["a"])(Object(c["a"])(e),[n,t]),b=Object(u["a"])(Object(s["a"])(e),[n,t]),g=Object(l["a"])(Object(p["a"])(m,[0,1],[n,t-2]),1),y=Object(o["a"])(Object(l["a"])(Object(p["a"])(b,[0,1],[n,t-2]),1),Object(d["a"])(-1)),x=Object(a["a"])([m,g],1),O=Object(a["a"])([b,y],1),v=Object(u["a"])(Object(r["a"])(x,O),[h[0],h[1]]);i=Object(f["a"])(v)}if(i=Object(c["a"])(i),3===e.rank&&0!==e.shape[0]){const t=i,n=e.shape[0];i=Object(u["a"])(i,[n,i.shape[0]/n,i.shape[1]]),t.dispose()}return i}const m=Object(i["b"])({irfft_:h})},"6ad5":function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e){let t=e.length,n=0,r=0;while(t>0)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function a(e,t){if(e.length!==t.length)throw new Error("Array sizes must match to be shuffled together First array length was "+e.length+"Second array length was "+t.length);let n,r,a=e.length,s=0;while(a>0)s=Math.random()*a|0,a--,n=e[a],r=t[a],e[a]=e[s],t[a]=t[s],e[s]=n,t[s]=r}function s(e,t,n){return Math.max(e,Math.min(t,n))}function o(e){return e%2===0?e:e+1}function i(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function c(e,t){const n=Math.random();return t*n+(1-n)*e}function u(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function l(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function d(e,t,n=""){l(b(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function p(e){l(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function f(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||$(e)&&!n)for(let r=0;r<e.length;++r)f(e[r],t,n);else t.push(e);return t}function h(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function b(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function g(e){return e%1===0}function y(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function x(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function O(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function v(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function k(e,t=(e=>0),n){return new Promise((r,a)=>{let s=0;const o=()=>{if(e())return void r();s++;const i=t(s);null!=n&&s>=n?a():setTimeout(o,i)};o()})}function w(e,t){let n=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function I(e,t){const n=t.length;return e=null==e?t.map((e,t)=>t):[].concat(e),l(e.every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+e),l(e.every(e=>g(e)),()=>"All values in axis param must be integers but got axis "+e),e.map(e=>e<0?n+e:e)}function N(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:I(t,e).sort();let o=0;for(let i=0;i<e.length;++i){if(null!=s){if(s[o]===i&&1!==e[i])throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(null==s[o]||s[o]>i)&&1===e[i]&&(n.push(e[i]),r.push(i)),s[o]<=i&&o++}1!==e[i]&&(n.push(e[i]),r.push(i))}return{newShape:n,keptDims:r}}function j(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function T(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function S(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function C(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function E(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function $(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function A(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function R(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function _(e){return"string"===typeof e||e instanceof String}function F(e){return"boolean"===typeof e}function D(e){return"number"===typeof e}function M(e){return Array.isArray(e)?M(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":D(e)?"float32":_(e)?"string":F(e)?"bool":"float32"}function L(e){return!!(e&&e.constructor&&e.call&&e.apply)}function P(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function B(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function z(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],o=t.slice(1),i=o.reduce((e,t)=>e*t)*(r?2:1);for(let t=0;t<s;t++)a[t]=z(e+t*i,o,n,r)}return a}function V(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce((e,t)=>e*t)*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return z(0,e,t,n)}function W(e,t){const n=U(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function U(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function G(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return V(e,new Float32Array(n));if("int32"===t)return V(e,new Int32Array(n));if("bool"===t)return V(e,new Uint8Array(n));throw new Error("Unknown data type "+t)}function H(e){e.forEach(t=>{l(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function q(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function K(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}function X(e){return e&&e.then&&"function"===typeof e.then}n.d(t,"M",(function(){return r})),n.d(t,"N",(function(){return a})),n.d(t,"i",(function(){return s})),n.d(t,"H",(function(){return o})),n.d(t,"R",(function(){return i})),n.d(t,"J",(function(){return c})),n.d(t,"l",(function(){return u})),n.d(t,"b",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"d",(function(){return p})),n.d(t,"m",(function(){return f})),n.d(t,"O",(function(){return h})),n.d(t,"y",(function(){return m})),n.d(t,"a",(function(){return b})),n.d(t,"v",(function(){return g})),n.d(t,"S",(function(){return y})),n.d(t,"P",(function(){return x})),n.d(t,"k",(function(){return O})),n.d(t,"L",(function(){return v})),n.d(t,"K",(function(){return k})),n.d(t,"s",(function(){return w})),n.d(t,"I",(function(){return I})),n.d(t,"Q",(function(){return N})),n.d(t,"o",(function(){return j})),n.d(t,"n",(function(){return T})),n.d(t,"h",(function(){return S})),n.d(t,"B",(function(){return C})),n.d(t,"p",(function(){return E})),n.d(t,"A",(function(){return $})),n.d(t,"g",(function(){return A})),n.d(t,"f",(function(){return R})),n.d(t,"z",(function(){return _})),n.d(t,"t",(function(){return F})),n.d(t,"w",(function(){return D})),n.d(t,"r",(function(){return M})),n.d(t,"u",(function(){return L})),n.d(t,"G",(function(){return P})),n.d(t,"j",(function(){return B})),n.d(t,"T",(function(){return V})),n.d(t,"D",(function(){return W})),n.d(t,"F",(function(){return U})),n.d(t,"E",(function(){return G})),n.d(t,"c",(function(){return H})),n.d(t,"C",(function(){return q})),n.d(t,"q",(function(){return K})),n.d(t,"x",(function(){return X}))},"6ae2":function(e,t,n){"use strict";n.d(t,"b",(function(){return v})),n.d(t,"a",(function(){return k}));var r=n("8b87"),a=n("b333"),s=n("f490"),o=n("c05b"),i=n("73b8"),c=n("eb7e"),u=n("6ad5");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class l{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let o;const i=c["now"]();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();o=Promise.resolve({kernelMs:c["now"]()-i})}if(Object(a["c"])().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let a=0;a<r.length;a++){const t=r[a];t.data().then(n=>{d(n,t.dtype,e)})}const u={kernelName:e,outputs:r,inputs:t,timeMs:o.then(e=>e.kernelMs),extraInfo:o.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")};return u}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach(e=>{Promise.all([e.data(),r,s]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])})})}}function d(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class p{logKernelProfile(e,t,n,r,a,s){const o="number"===typeof r?u["L"](r+"ms",9):r["error"],i=u["L"](e,25),c=t.rank,l=t.size,d=u["L"](t.shape.toString(),14);let p="";for(const u in a){const e=a[u];if(null!=e){const n=e.shape||t.shape,r=n.length;p+=`${u}: ${r}D ${r>0?n:""} `}}console.log(`%c${i}\t%c${o}\t%c${c}D ${d}\t%c${l}\t%c${p}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f(e,t,n){const r={},a={};for(let c=0;c<t.length;c++)r[t[c].id]=!0;for(let c=0;c<e.length;c++){const n=e[c],s=n.inputs;for(const e in s){const o=s[e];let i=!1;for(let e=0;e<t.length;e++)if(r[o.id]){n.outputs.forEach(e=>r[e.id]=!0),i=!0,a[n.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let c=e.length-1;c>=0;c--){const t=e[c],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(const e in n)s[n[e].id]=!0,o[t.id]=!0;break}}const i=[];for(let c=0;c<e.length;c++){const t=e[c];if(a[t.id]&&o[t.id]){const e={};for(const a in t.inputs){const n=t.inputs[a];r[n.id]&&(e[a]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}function h(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],o=[];if(s.outputs.forEach(t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const a=n(()=>i[t]());if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const o=s.inputs[t];if(!u["a"](a.shape,o.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=a;else{const t=e[o.id];e[o.id]=r(t,a),t.dispose()}}}}var m=n("34d7"),b=n("76c2");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function g(e){return null!=e.kernelName}class y{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class x{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new y}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],r=await this.initializeBackend(n).success;if(r)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e),r=n?await t:t;if(!r)return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new l(this.backendInstance),!0}setupRegisteredKernels(){const e=Object(i["d"])(this.backendName);e.forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){const t=Object(i["d"])(e);t.forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r["b"]||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0)).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return x.nextTensorId++}nextVariableId(){return x.nextVariableId++}clone(e){const t=k.runKernel(o["rb"],{x:e}),n={x:e},r=e=>({x:()=>{const t="float32",n={x:e},r={dtype:t};return k.runKernel(o["w"],n,r)}}),a=[];return this.addTapeNode(this.state.activeScope.name,n,[t],r,a,{}),t}runKernel(e,t,n){const r=null!=Object(i["c"])(e,this.backendName);if(!r)throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach(e=>{a+="complex64"===e.dtype?3:1});const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-a-s;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let o,c;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const l=Object(i["c"])(t,this.backendName);u["b"](null!=l,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),o=()=>{const e=this.backend.numDataIds();c=l.kernelFunc({inputs:a,attrs:s,backend:this.backend});const o=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const i=o.map(e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)});if(r){const e=this.getTensorsForGradient(t,a,i);n=this.saveTensorsForBackwardMode(e)}return i}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map(e=>this.keep(this.clone(e))))};o=()=>{const e=this.backend.numDataIds();c=this.tidy(()=>t(this.backend,a));const n=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:d,attrs:p}=e,f=g(e)?null:e.backwardsFunc;let h;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(h=this.profiler.profileKernel(l,d,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(h),t=h.outputs):t=o()}),r&&this.addTapeNode(l,d,t,f,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map(e=>null!=d[e]?d[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:h.timeMs,extraInfo:h.extraInfo}),Array.isArray(c)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map(e=>this.keep(this.clone(e)));return t}getTensorsForGradient(e,t,n){const r=Object(i["b"])(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(u["b"](Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),s=Object.keys(t).map(e=>t[e])):s=e.map(e=>t[e]);const o=n.filter((e,t)=>a[t]);return s.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&u["z"](e[0])&&(a=e.map(e=>c["encodeString"](e)));const s=r.write(a,t,n),o=new m["a"](t,n,s,this.nextTensorId());if(this.trackTensor(o,r),"string"===n){const e=this.state.tensorInfo.get(s),t=Object(u["f"])(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){n=n||"float32";const a=new m["a"](t,n,e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new m["c"](e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*u["g"](e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof m["c"]||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*u["g"](e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},c=Object(i["b"])(e);null!=c&&(r=c.gradFunc),null!=r&&(o.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=u["F"](e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Object(b["getTensorsInContainer"])(e),n=new Set(t.map(e=>e.id));for(let a=0;a<this.state.activeScope.track.length;a++){const e=this.state.activeScope.track[a];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(u["b"](t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));u["b"](a instanceof m["a"],()=>"The result y returned by f() must be a tensor.");const s=f(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[a.id]=null==n?O(a.shape):n,h(e,s,e=>this.tidy(e),w);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(e){return u["b"](u["u"](e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;u["b"](t.every(e=>e instanceof m["a"]),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};t.forEach((e,t)=>{r[t]=e});const a=(r,a)=>(n=e(...t,a),u["b"](n.value instanceof m["a"],()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),u["b"](u["u"](n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),s=(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];u["b"](s.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),u["b"](s.every(e=>e instanceof m["a"]),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const o={};return s.forEach((e,t)=>{o[t]=()=>e}),o};return this.runKernelFunc({forwardFunc:a,backwardsFunc:s,inputs:r})}}readSync(e){const t=this.state.tensorInfo.get(e);return t.backend.readSync(e)}read(e){const t=this.state.tensorInfo.get(e);return t.backend.read(e)}async time(e){const t=Object(c["now"])(),n=await this.backend.time(e);return n.wallMs=Object(c["now"])()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new y;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function O(e){const t=Object(u["D"])(Object(u["O"])(e),"float32");return k.makeTensor(t,e,"float32")}function v(){const e=Object(s["b"])();if(null==e._tfengine){const t=new a["b"](e);e._tfengine=new x(t)}return Object(a["d"])(e._tfengine.ENV),Object(m["f"])(()=>e._tfengine),e._tfengine}x.nextTensorId=0,x.nextVariableId=0;const k=v();function w(e,t){const n={a:e,b:t};return k.runKernel(o["d"],n)}},"6d3c":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n){const o=Object(s["a"])(e,"x","slice","string_or_numeric");if(0===o.rank)throw new Error("Slicing scalar is not possible");const i={x:o},c={begin:t,size:n};return r["a"].runKernel(a["Fc"],i,c)}const c=Object(o["b"])({slice_:i})},"6e83":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}]},"6f37":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=.2){const n=Object(s["a"])(e,"x","leakyRelu"),o={x:n},i={alpha:t};return r["a"].runKernel(a["yb"],o,i)}const c=Object(o["b"])({leakyRelu_:i})},"6fef":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","isNaN"),n={x:t};return r["a"].runKernel(a["vb"],n)}const c=Object(o["b"])({isNaN_:i})},"71db":function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("35c9");function c(e){let t;return t=0===e.rank||1===e.rank?Object(i["a"])(e,[1,1,1,e.size]):2===e.rank?Object(i["a"])(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Object(i["a"])(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}var u=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l(e,t,n,u,l,d){null==d&&(d=.001);const p=Object(s["a"])(e,"x","batchNorm"),f=Object(s["a"])(t,"mean","batchNorm"),h=Object(s["a"])(n,"variance","batchNorm");let m,b;null!=l&&(m=Object(s["a"])(l,"scale","batchNorm")),null!=u&&(b=Object(s["a"])(u,"offset","batchNorm")),o["b"](f.rank===h.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),o["b"](null==b||f.rank===b.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),o["b"](null==m||f.rank===m.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const g=c(p),y={x:g,scale:m,offset:b,mean:f,variance:h},x={varianceEpsilon:d},O=r["a"].runKernel(a["jb"],y,x);return Object(i["a"])(O,p.shape)}const d=Object(u["b"])({batchNorm_:l})},"72c4":function(e,t,n){"use strict";n.d(t,"c",(function(){return o})),n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return u}));var r=n("fa11"),a=n("7d43"),s=n("bf1d");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a["a"])((e,t)=>e*t),i=Object(s["b"])((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),c=Object(s["a"])(r["Multiply"],o,i),u={kernelName:r["Multiply"],backendName:"cpu",kernelFunc:c}},"73b8":function(e,t,n){"use strict";n.d(t,"c",(function(){return i})),n.d(t,"b",(function(){return c})),n.d(t,"d",(function(){return u})),n.d(t,"f",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"h",(function(){return p})),n.d(t,"g",(function(){return f})),n.d(t,"a",(function(){return h}));var r=n("b333"),a=n("f490");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=Object(a["a"])("kernelRegistry",()=>new Map),o=Object(a["a"])("gradRegistry",()=>new Map);function i(e,t){const n=m(e,t);return s.get(n)}function c(e){return o.get(e)}function u(e){const t=s.entries(),n=[];while(1){const{done:r,value:a}=t.next();if(r)break;const[s,o]=a,[i]=s.split("_");i===e&&n.push(o)}return n}function l(e){const{kernelName:t,backendName:n}=e,r=m(t,n);s.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),s.set(r,e)}function d(e){const{kernelName:t}=e;o.has(t)&&Object(r["c"])().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),o.set(t,e)}function p(e,t){const n=m(e,t);if(!s.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);s.delete(n)}function f(e){if(!o.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);o.delete(e)}function h(e,t){const n=u(e);n.forEach(e=>{const n=Object.assign({},e,{backendName:t});l(n)})}function m(e,t){return`${t}_${e}`}},"73d3":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("6ad5"),o=n("54ef"),i=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t,n,o,c,u="NHWC",l){s["b"](e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let d=e,p=t,f=!1;3===t.rank&&(f=!0,p=Object(i["a"])(t,[1,t.shape[0],t.shape[1],t.shape[2]]),d=[1,e[0],e[1],e[2]]),s["b"](4===d.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+d.length+"."),s["b"](4===p.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+p.rank),s["b"](4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const h="NHWC"===u?d[3]:d[1],m="NHWC"===u?p.shape[3]:p.shape[1];s["b"](h===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`),s["b"](m===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${n.shape[3]}.`),null!=l&&s["b"](s["v"](c),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${l} but got pad ${c}.`);const b={dy:p,filter:n},g={strides:o,pad:c,dataFormat:u,dimRoundingMode:l,inputShape:d},y=r["a"].runKernel(a["E"],b,g);return f?Object(i["a"])(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const u=Object(o["b"])({conv2DBackpropInput_:c})},7568:function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e,t=!1){console.log(e.toString(t))}n.d(t,"a",(function(){return r}))},7580:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t,n){const i=Object(s["a"])(e,"x","spaceToBatchND");o["b"](i.rank>=1+t.length,()=>`input rank ${i.rank} should be > than [blockShape] ${t.length}`),o["b"](n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),o["b"](i.shape.reduce((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]===0:e,!0),()=>`input spatial dimensions ${i.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const c={x:i},u={blockShape:t,paddings:n};return r["a"].runKernel(a["Ic"],c,u)}const u=Object(i["b"])({spaceToBatchND_:c})},"75ab":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,...t){const n=t.map((e,t)=>Object(s["a"])(e,"tensors"+t,"einsum")),o={equation:e};return r["a"].runKernel(a["V"],n,o)}const c=Object(o["b"])({einsum_:i})},7675:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("a3f7"),a=n("6ad5"),s=n("dd7e"),o=n("b818"),i=n("54ef"),c=n("35c9");function u(e,t,n,i,u="NWC",l=1,d){const p=Object(r["a"])(e,"x","conv1d"),f=Object(r["a"])(t,"filter","conv1d");let h=p,m=!1;2===p.rank&&(m=!0,h=Object(c["a"])(p,[1,p.shape[0],p.shape[1]])),a["b"](3===h.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${h.rank}.`),a["b"](3===f.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+f.rank+"."),null!=d&&a["b"](a["v"](i),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${i}.`),a["b"](h.shape[2]===f.shape[1],()=>`Error in conv1d: depth of input (${h.shape[2]}) must match input depth for filter ${f.shape[1]}.`),a["b"](o["h"](n,l),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${l}'`),a["b"]("NWC"===u,()=>`Error in conv1d: got dataFormat of ${u} but only NWC is currently supported.`);const b=Object(c["a"])(f,[1,f.shape[0],f.shape[1],f.shape[2]]),g=Object(c["a"])(h,[h.shape[0],1,h.shape[1],h.shape[2]]),y=[1,n],x=[1,l],O="NHWC",v=Object(s["a"])(g,b,y,i,O,x,d);return m?Object(c["a"])(v,[v.shape[2],v.shape[3]]):Object(c["a"])(v,[v.shape[0],v.shape[2],v.shape[3]])}const l=Object(i["b"])({conv1d_:u})},"76c2":function(e,t,n){"use strict";n.r(t),n.d(t,"makeTypesMatch",(function(){return o})),n.d(t,"assertTypesMatch",(function(){return i})),n.d(t,"isTensorInList",(function(){return c})),n.d(t,"getTensorsInContainer",(function(){return u}));var r=n("34d7"),a=n("23bf"),s=n("6ad5");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t){if(e.dtype===t.dtype)return[e,t];const n=Object(a["c"])(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function i(e,t){Object(s["b"])(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function c(e,t){return t.some(t=>t.id===e.id)}function u(e){const t=[],n=new Set;return l(e,t,n),t}function l(e,t,n){if(null==e)return;if(e instanceof r["a"])return void t.push(e);if(!d(e))return;const a=e;for(const r in a){const e=a[r];n.has(e)||(n.add(e),l(e,t,n))}}function d(e){return Array.isArray(e)||"object"===typeof e}},"7aec":function(e,t,n){(function(e){var r;(function(e,a,s){function o(e){var t=this;function n(e,t){var n,r,a,s,o,i=[],c=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,c=Math.max(c,t.length)),a=0,s=-32;s<c;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(o=o+1640531527|0,n=i[127&s]^=r+o,a=0==n?a+1:0);for(a>=128&&(i[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[a]=r^n;e.w=o,e.X=i,e.i=a}t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},n(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function c(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n("07d6")&&n("3c35")?(r=function(){return c}.call(t,n,t,a),void 0===r||(a.exports=r)):this.xor4096=c})(0,e,n("07d6"))}).call(this,n("62e4")(e))},"7d43":function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("fa11");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e){return(t,n,a,s,o)=>{const i=r["backend_util"].assertAndGetBroadcastShape(t,n),c=i.length,u=r["util"].computeStrides(i),l=r["util"].sizeFromShape(i),d=r["util"].getTypedArrayFromDType(o,l),p=t.length,f=n.length,h=r["util"].computeStrides(t),m=r["util"].computeStrides(n),b=r["backend_util"].getBroadcastDims(t,i),g=r["backend_util"].getBroadcastDims(n,i);if(b.length+g.length===0)for(let r=0;r<d.length;++r)d[r]=e(a[r%a.length],s[r%s.length]);else for(let y=0;y<d.length;++y){const t=r["util"].indexToLoc(y,c,u),n=t.slice(-p);b.forEach(e=>n[e]=0);const o=r["util"].locToIndex(n,p,h),i=t.slice(-f);g.forEach(e=>i[e]=0);const l=r["util"].locToIndex(i,f,m);d[y]=e(a[o],s[l])}return[d,i]}}},"7e36":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","atan"),n={x:t};return r["a"].runKernel(a["l"],n)}const c=Object(o["b"])({atan_:i})},"7e6a":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("043e"),a=n("54ef"),s=n("d4e4");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t=0,n=1,a,o){if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const i=new s["a"](t,n,a,!0,o),c=Object(r["a"])(e,a);for(let r=0;r<c.values.length;r++)c.values[r]=i.nextValue();return c.toTensor()}const i=Object(a["b"])({truncatedNormal_:o})},"7e7f":function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return c}));var r=n("fa11"),a=n("7d43"),s=n("bf1d");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a["a"])((e,t)=>e>t?1:0),i=Object(s["a"])(r["Greater"],o,null,"bool"),c={kernelName:r["Greater"],backendName:"cpu",kernelFunc:i}},"7ed6":function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(){return"undefined"!==typeof navigator&&null!=navigator}function a(e){if(e||r()){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function s(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}n.r(t),n.d(t,"isMobile",(function(){return a})),n.d(t,"isBrowser",(function(){return s}))},"804a":function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n("538e"),a=n("a3f7"),s=n("deb3"),o=n("4f20"),i=n("1359"),c=n("c021"),u=n("a5aa"),l=n("54ef"),d=n("a009"),p=n("e053");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function f(e,t=-1){const n=Object(a["a"])(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const l=Object(r["a"])((e,n)=>{const r=!0,a=Object(c["a"])(e,t,!0),l=Object(d["a"])(e,a),f=Object(d["a"])(Object(s["a"])(l,"float32"),Object(i["a"])(Object(p["a"])(Object(o["a"])(l),t,r)));n([f]);const h=(e,n)=>{const[r]=n,a=!0,s=Object(o["a"])(r);return Object(d["a"])(e,Object(u["a"])(Object(p["a"])(e,t,a),s))};return{value:f,gradFunc:h}});return l(n)}const h=Object(l["b"])({logSoftmax_:f})},8389:function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e,t,n){const r=a(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function a(e,t,n){return o(e,t,n||s)}function s(e,t){return e>t?1:e<t?-1:0}function o(e,t,n){let r=0,a=e.length,s=0,o=!1;while(r<a){s=r+(a-r>>>1);const i=n(t,e[s]);i>0?r=s+1:(a=s,o=!i)}return o?r:-r-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i(e,t,n,r,a){return l(e,t,n,r,a,0)}function c(e,t,n,r,a,s){return l(e,t,n,r,a,0,!1,s,!0)}function u(e,t,n,r,a,s){return l(e,t,n,r,a,s,!0)}function l(e,t,n,a,s,o,i=!1,c=!1,u=!1){const l=[];for(let r=0;r<t.length;r++)t[r]>s&&l.push({score:t[r],boxIndex:r,suppressBeginIndex:0});l.sort(f);const h=o>0?-.5/o:0,m=[],b=[];while(m.length<n&&l.length>0){const t=l.pop(),{score:n,boxIndex:o,suppressBeginIndex:i}=t;if(n<s)break;let c=!1;for(let r=m.length-1;r>=i;--r){const n=d(e,o,m[r]);if(n>=a){c=!0;break}if(t.score=t.score*p(a,h,n),t.score<=s)break}t.suppressBeginIndex=m.length,c||(t.score===n?(m.push(o),b.push(t.score)):t.score>s&&r(l,t,f))}const g=m.length,y=n-g;c&&y>0&&(m.push(...new Array(y).fill(0)),b.push(...new Array(y).fill(0)));const x={selectedIndices:m};return i&&(x["selectedScores"]=b),u&&(x["validOutputs"]=g),x}function d(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),c=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),f=(i-s)*(c-o),h=(d-u)*(p-l);if(f<=0||h<=0)return 0;const m=Math.max(s,u),b=Math.max(o,l),g=Math.min(i,d),y=Math.min(c,p),x=Math.max(g-m,0)*Math.max(y-b,0);return x/(f+h-x)}function p(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function f(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return c})),n.d(t,"c",(function(){return u}))},"838f":function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef"),c=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t,n,i,u="NHWC",l=[1,1],d){const p=Object(s["a"])(e,"x","depthwiseConv2d"),f=Object(s["a"])(t,"filter","depthwiseConv2d");let h=p,m=!1;3===p.rank&&(m=!0,h=Object(c["a"])(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o["b"](4===h.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),o["b"](4===f.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+f.rank+"."),o["b"](h.shape[3]===f.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`),null!=d&&o["b"](o["v"](i),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${i}.`);const b={x:h,filter:f},g={strides:n,pad:i,dataFormat:u,dilations:l,dimRoundingMode:d},y=r["a"].runKernel(a["O"],b,g);return m?Object(c["a"])(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const l=Object(i["b"])({depthwiseConv2d_:u})},"84d6":function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("6ae2"),a=n("c05b");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const o={start:e,stop:t,step:n,dtype:s};return r["a"].runKernel(a["jc"],{},o)}},"853e":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t=0){const n=Object(s["a"])(e,"x","unique","string_or_numeric");Object(o["b"])(n.rank>0,()=>"The input tensor must be at least 1D");const i={x:n},c={axis:t},[u,l]=r["a"].runKernel(a["ad"],i,c);return{values:u,indices:l}}const u=Object(i["b"])({unique_:c})},8629:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("043e"),a=n("54ef"),s=n("d4e4");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t=0,n=1,a="float32",o){const i=Object(r["a"])(e,a),c=new s["c"](t,n,null,o);for(let r=0;r<i.values.length;r++)i.values[r]=c.nextValue();return i.toTensor()}const i=Object(a["b"])({randomUniform_:o})},8661:function(e,t,n){"use strict";n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return i}));var r=n("fa11"),a=n("cedd");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const o=e=>{const{x:t}=e.inputs,n=e.backend;Object(a["a"])(t,"abs");let o=new Float32Array(r["util"].sizeFromShape(t.shape));const i=n.data.get(t.dataId).values;return o=s(i),n.makeOutput(o,t.shape,"float32")},i={kernelName:r["Abs"],backendName:"cpu",kernelFunc:o}},8888:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","tanh"),n={x:t};return r["a"].runKernel(a["Vc"],n)}const c=Object(o["b"])({tanh_:i})},"88e9":function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("fa11");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){const s=r["util"].parseAxisParam(t,n)[0],o=[1,n[0],1];for(let r=0;r<s;r++)o[0]*=n[r];o[1]=n[s];for(let r=s+1;r<n.length;r++)o[2]*=n[r];const i={},c=new Int32Array(n[s]),u=new r["TensorBuffer"](o,a,e),l=[],d=1===o[0]&&1===o[2];for(let r=0;r<n[s];r++){let t;if(d)t=e[r].toString();else{const e=[];for(let t=0;t<o[0];t++)for(let n=0;n<o[2];n++)e.push(u.get(t,r,n));t=e.join(",")}if(void 0!==i[t])c[r]=i[t];else{const e=Object.keys(i).length;i[t]=e,c[r]=e,l.push(r)}}const p=o.slice();p[1]=Object.keys(i).length;const f=new r["TensorBuffer"](p,a);l.forEach((e,t)=>{for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)f.set(u.get(n,e,r),n,t,r)});const h=n.slice();return h[s]=p[1],{outputValues:f.values,outputShape:h,indices:c}}},"892a":function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return o}));var r=n("fa11"),a=n("cedd");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t,n){return({inputs:s,attrs:o,backend:i})=>{const{x:c}=s;if(Object(a["a"])(c,e),"string"===c.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=i,l=u.data.get(c.dataId).values,d=r["util"].sizeFromShape(c.shape),p=n||c.dtype,f=r["util"].getArrayFromDType(p,d);for(let e=0;e<d;++e)f[e]=t(l[e],o);return u.makeTensorInfo(c.shape,p,f)}}function o(e,t,n){return({inputs:r,attrs:s,backend:o})=>{const{x:i}=r;if(Object(a["a"])(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const c=o,u=c.data.get(i.dataId).values,l=n||i.dtype,d=t(u,l,s);return c.makeTensorInfo(i.shape,l,d)}}},"89ed":function(e,t,n){(function(e){var r;(function(e,a,s){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function c(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n("07d6")&&n("3c35")?(r=function(){return c}.call(t,n,t,a),void 0===r||(a.exports=r)):this.tychei=c})(0,e,n("07d6"))}).call(this,n("62e4")(e))},"8ae0":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r["a"].runKernel(a["A"],e)}{const e={x:t};return r["a"].runKernel(a["a"],e)}}const c=Object(o["b"])({abs_:i})},"8b1d":function(e,t,n){"use strict";n.r(t),n.d(t,"MathBackendCPU",(function(){return o})),n.d(t,"version_cpu",(function(){return c})),n.d(t,"shared",(function(){return i}));var r=n("fa11"),a=n("cedd");
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=r["kernel_impls"].whereImpl;class o extends r["KernelBackend"]{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new r["DataStorage"](this,Object(r["engine"])())}nextDataId(){return o.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Object(r["env"])().get("IS_NODE")&&r["backend_util"].warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&r["util"].isString(n[0])){const s=n.map(e=>r["util"].encodeString(e));a=this.write(s,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){const t=this.data.get(e);return t.refCount}return 0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return r["backend_util"].mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>r["util"].decodeString(e))}catch(a){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(r["buffer"])(e.shape,e.dtype,n)}makeOutput(e,t,n){const a=this.write(e,t,n);return Object(r["engine"])().makeTensorFromDataId(a,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=r["util"].now();e();const n=r["util"].now()-t;return{kernelMs:n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Object(a["a"])([e],"where");const t=this.readSync(e.dataId);return s(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}o.nextDataId=0;var i=n("ab98");
/** @license See the LICENSE file. */const c="3.6.0";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(r["registerBackend"])("cpu",()=>new o,1);var u=n("892a");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l=Object(u["a"])(r["Elu"],e=>e>=0?e:Math.exp(e)-1),d={kernelName:r["Elu"],backendName:"cpu",kernelFunc:l};var p=n("1dd2");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{alpha:i}=s;Object(a["a"])([o],"leakyRelu");const c=r["util"].sizeFromShape(o.shape),u=n.data.get(o.dataId).values,l=r["util"].getTypedArrayFromDType("float32",c);for(let r=0;r<u.length;r++)l[r]=u[r]<0?i*u[r]:u[r];return n.makeTensorInfo(o.shape,"float32",l)}const h={kernelName:r["LeakyRelu"],backendName:"cpu",kernelFunc:f};var m=n("7d43");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b=Object(m["a"])((e,t)=>e<0?t*e:e);function g(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;Object(a["a"])([r,s],"prelu");const o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[c,u]=b(r.shape,s.shape,o,i,r.dtype);return n.makeTensorInfo(u,r.dtype,c)}const y={kernelName:r["Prelu"],backendName:"cpu",kernelFunc:g},x=Object(u["a"])(r["Relu"],e=>Math.max(0,e)),O={kernelName:r["Relu"],backendName:"cpu",kernelFunc:x},v=Object(u["a"])(r["Relu6"],e=>Math.min(Math.max(0,e),6)),k={kernelName:r["Relu6"],backendName:"cpu",kernelFunc:v},w=Object(u["a"])(r["Sigmoid"],e=>1/(1+Math.exp(-e))),I={kernelName:r["Sigmoid"],backendName:"cpu",kernelFunc:w};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function N(e,t,n,r,a){if("linear"===n)return Object(p["a"])({inputs:{x:t},backend:e});if("relu"===n)return x({inputs:{x:t},backend:e});if("elu"===n)return l({inputs:{x:t},backend:e});if("relu6"===n)return v({inputs:{x:t},backend:e});if("prelu"===n)return g({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return f({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return w({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}var j=n("9735");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{shape:o}=a,i=r["util"].sizeFromShape(s.shape),c=r["util"].inferFromImplicitShape(o,i),u=r["util"].sizeFromShape(c);r["util"].assert(i===u,()=>`The new shape (${c}) has ${u} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=c,t.shape=c}return{dataId:s.dataId,shape:c,dtype:s.dtype}}const S={kernelName:r["Reshape"],backendName:"cpu",kernelFunc:T};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C(e){const{inputs:t,backend:n,attrs:s}=e,{a:o,b:i}=t,{transposeA:c,transposeB:u}=s;Object(a["a"])([o,i],"matMul");const l=o.shape.length,d=i.shape.length,p=c?o.shape[l-2]:o.shape[l-1],f=u?i.shape[d-1]:i.shape[d-2],h=c?o.shape[l-1]:o.shape[l-2],m=u?i.shape[d-2]:i.shape[d-1],b=o.shape.slice(0,-2),g=i.shape.slice(0,-2),y=r["util"].sizeFromShape(b),x=r["util"].sizeFromShape(g),O=y===x||1===y||1===x;r["util"].assert(l>=2&&d>=2&&O,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${b}) and (${g}).`);const v=y>x?o.shape.slice(0,-2):i.shape.slice(0,-2),k=v.concat([h,m]);r["util"].assert(p===f,()=>`Error in matMul: inner shapes (${p}) and (${f}) of Tensors with shapes ${o.shape} and ${i.shape} and transposeA=${c} and transposeB=${u} must match.`);const w=c?[y,p,h]:[y,h,p],I=u?[x,m,f]:[x,f,m],N=T({inputs:{x:o},backend:n,attrs:{shape:w}}),j=T({inputs:{x:i},backend:n,attrs:{shape:I}}),S=c?N.shape[1]:N.shape[2],C=c?N.shape[2]:N.shape[1],E=u?j.shape[1]:j.shape[2],$=Math.max(y,x),A=n.data.get(N.dataId).values,R=n.data.get(j.dataId).values,_=r["util"].computeStrides(N.shape),F=r["util"].computeStrides(j.shape),[D,M,L]=c?[_[0],1,_[1]]:[_[0],_[1],1],[P,B,z]=u?[1,F[1],F[0]]:[F[1],1,F[0]],V=C*E,W=Object(r["buffer"])([$,C,E],N.dtype),U=W.values,G=n.blockSize;for(let r=0;r<$;r++)for(let e=0;e<C;e+=G)for(let t=0;t<E;t+=G)for(let n=0;n<S;n+=G){const a=Math.min(e+G,C),s=Math.min(t+G,E),o=Math.min(n+G,S);for(let i=e;i<a;i++)for(let e=t;e<s;e++){let t=0;for(let a=n;a<o;a++){const n=Math.min(r,y-1)*D,s=Math.min(r,x-1)*z,o=A[n+i*M+a*L],c=R[a*P+e*B+s];t+=o*c}U[r*V+(i*E+e)]+=t}}return n.disposeIntermediateTensorInfo(N),n.disposeIntermediateTensorInfo(j),n.makeTensorInfo(k,W.dtype,W.values)}const E={kernelName:r["BatchMatMul"],backendName:"cpu",kernelFunc:C};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=r;let p,f,h;const m=[],b=C({inputs:{a:a,b:s},attrs:{transposeA:c,transposeB:u},backend:n});p=b,o&&(f=Object(j["a"])({inputs:{a:p,b:o},backend:n}),m.push(p),p=f),l&&(h=N(n,p,l,i,d),m.push(p),p=h);for(const g of m)n.disposeIntermediateTensorInfo(g);return p}const A={kernelName:r["_FusedMatMul"],backendName:"cpu",kernelFunc:$};var R=n("8661");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _=Object(u["a"])(r["Acos"],e=>Math.acos(e)),F={kernelName:r["Acos"],backendName:"cpu",kernelFunc:_},D=Object(u["a"])(r["Acosh"],e=>Math.acosh(e)),M={kernelName:r["Acosh"],backendName:"cpu",kernelFunc:D};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function L(e){const{inputs:t,backend:n}=e,s=t;Object(a["a"])(t,"addN");const o=s.map(e=>n.data.get(e.dataId).values),i=Object(r["buffer"])(s[0].shape,s[0].dtype),c=i.values;for(let r=0;r<s.length;r++){const e=o[r];for(let t=0;t<c.length;t++)c[t]+=e[t]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}const P={kernelName:r["AddN"],backendName:"cpu",kernelFunc:L};var B=n("15d4");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i,keepDims:c}=s;Object(a["a"])(o,"all");const u=r["util"].parseAxisParam(i,o.shape);let l=u;const d=r["backend_util"].getAxesPermutation(l,o.shape.length);let p=o;null!=d&&(p=Object(B["a"])({inputs:{x:o},backend:n,attrs:{perm:d}}),l=r["backend_util"].getInnerMostAxes(l.length,o.shape.length)),r["backend_util"].assertAxesAreInnerMostDims("all",l,p.shape.length);const[f,h]=r["backend_util"].computeOutAndReduceShapes(p.shape,l),m=r["util"].sizeFromShape(h),b=r["util"].makeZerosTypedArray(r["util"].sizeFromShape(f),p.dtype),g=n.data.get(p.dataId).values;for(let r=0;r<b.length;++r){const e=r*m;let t=g[e];for(let n=0;n<m;++n){const r=g[e+n];t=t&&r}b[r]=t}null!=d&&n.disposeIntermediateTensorInfo(p);const y=n.makeTensorInfo(f,p.dtype,b);if(c){const e=r["backend_util"].expandShapeToKeepDim(f,u),t=T({inputs:{x:y},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(y),t}return y}const V={kernelName:r["All"],backendName:"cpu",kernelFunc:z};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i,keepDims:c}=s;Object(a["a"])(o,"any");const u=r["util"].parseAxisParam(i,o.shape);let l=u;const d=r["backend_util"].getAxesPermutation(l,o.shape.length);let p=o;null!=d&&(p=Object(B["a"])({inputs:{x:o},backend:n,attrs:{perm:d}}),l=r["backend_util"].getInnerMostAxes(l.length,o.shape.length)),r["backend_util"].assertAxesAreInnerMostDims("any",l,p.shape.length);const[f,h]=r["backend_util"].computeOutAndReduceShapes(p.shape,l),m=r["util"].sizeFromShape(h),b=r["util"].makeZerosTypedArray(r["util"].sizeFromShape(f),p.dtype),g=n.data.get(p.dataId).values;for(let r=0;r<b.length;++r){const e=r*m;let t=g[e];for(let n=0;n<m;++n){const r=g[e+n];t=t||r}b[r]=t}null!=d&&n.disposeIntermediateTensorInfo(p);const y=n.makeTensorInfo(f,p.dtype,b);if(c){const e=r["backend_util"].expandShapeToKeepDim(f,u),t=T({inputs:{x:y},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(y),t}return y}const U={kernelName:r["Any"],backendName:"cpu",kernelFunc:W};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i}=s;Object(a["a"])(o,"argMax");let c=r["util"].parseAxisParam(i,o.shape);const u=r["backend_util"].getAxesPermutation(c,o.shape.length);let l=o;const d=[];null!=u&&(l=Object(B["a"])({inputs:{x:o},backend:n,attrs:{perm:u}}),d.push(l),c=r["backend_util"].getInnerMostAxes(c.length,l.shape.length)),c=[c[0]],r["backend_util"].assertAxesAreInnerMostDims("argMax",c,l.shape.length);const[p,f]=r["backend_util"].computeOutAndReduceShapes(l.shape,c),h=r["util"].sizeFromShape(p),m=r["util"].makeZerosTypedArray(h,"int32"),b=r["util"].sizeFromShape(f),g=n.data.get(l.dataId).values;for(let r=0;r<m.length;++r){const e=r*b;let t=g[e],n=0;for(let r=0;r<b;++r){const a=g[e+r];a>t&&(t=a,n=r)}m[r]=n}return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(p,"int32",m)}const H={kernelName:r["ArgMax"],backendName:"cpu",kernelFunc:G};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i}=s;Object(a["a"])(o,"argMin");let c=r["util"].parseAxisParam(i,o.shape);const u=r["backend_util"].getAxesPermutation(c,o.shape.length);let l=o;const d=[];null!=u&&(l=Object(B["a"])({inputs:{x:o},backend:n,attrs:{perm:u}}),d.push(l),c=r["backend_util"].getInnerMostAxes(c.length,l.shape.length)),c=[c[0]],r["backend_util"].assertAxesAreInnerMostDims("argMin",c,l.shape.length);const[p,f]=r["backend_util"].computeOutAndReduceShapes(l.shape,c),h=r["util"].sizeFromShape(p),m=r["util"].makeZerosTypedArray(h,"int32"),b=r["util"].sizeFromShape(f),g=n.data.get(l.dataId).values;for(let r=0;r<m.length;++r){const e=r*b;let t=g[e],n=0;for(let r=0;r<b;++r){const a=g[e+r];a<t&&(t=a,n=r)}m[r]=n}return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(p,"int32",m)}const K={kernelName:r["ArgMin"],backendName:"cpu",kernelFunc:q},X=Object(u["a"])(r["Asin"],e=>Math.asin(e)),Y={kernelName:r["Asin"],backendName:"cpu",kernelFunc:X},Q=Object(u["a"])(r["Asinh"],e=>Math.asinh(e)),Z={kernelName:r["Asinh"],backendName:"cpu",kernelFunc:Q},J=Object(u["a"])(r["Atan"],e=>Math.atan(e)),ee={kernelName:r["Atan"],backendName:"cpu",kernelFunc:J};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var te=n("bf1d");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ne=Object(m["a"])((e,t)=>Math.atan2(e,t)),re=Object(te["a"])(r["Atan2"],ne),ae={kernelName:r["Atan2"],backendName:"cpu",kernelFunc:re},se=Object(u["a"])(r["Atanh"],e=>Math.atanh(e)),oe={kernelName:r["Atanh"],backendName:"cpu",kernelFunc:se};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ie(e,t,n,a,s,o){const i=s.strideHeight,c=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,d=s.effectiveFilterHeight,p=s.effectiveFilterWidth,f=s.padInfo.top,h=s.padInfo.left,m="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=Object(r["buffer"])(s.outShape,n),g=b.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],x=s.outShape[2]*s.outShape[3],O=s.outShape[3];for(let r=0;r<s.batchSize;++r){const t=r*y,n=r*a[0];for(let r=0;r<s.inChannels;++r)for(let b=0;b<s.outHeight;++b){const y=b*i-f,v=Math.max(0,y),k=Math.min(s.inHeight,d+y),w=t+b*x;for(let t=0;t<s.outWidth;++t){const i=t*c-h,d=Math.max(0,i),f=Math.min(s.inWidth,p+i);let b=m,y=0,x=0;for(let t=v;t<k;t+=u){const s=n+t*a[1];for(let t=d;t<f;t+=l){const n=s+t*a[2],i=e[n+r];"max"===o&&i>b?b=i:"avg"===o&&(y+=i,x++)}if(isNaN(b))break}const I=w+t*O+r;g[I]="avg"===o?y/x:b}}}return b}function ce(e,t,n,a,s=!1,o=!1){const i=Object(r["buffer"])(a.outShape,"int32"),c=a.strideHeight,u=a.strideWidth,l=a.dilationHeight,d=a.dilationWidth,p=a.effectiveFilterHeight,f=a.effectiveFilterWidth,h=a.padInfo.top,m=a.padInfo.left,b=Object(r["buffer"])(t,n,e);for(let r=0;r<a.batchSize;++r)for(let e=0;e<a.inChannels;++e)for(let t=0;t<a.outHeight;++t){const n=t*c-h;let g=n;while(g<0)g+=l;const y=Math.min(a.inHeight,p+n);for(let c=0;c<a.outWidth;++c){const p=c*u-m;let h=p;while(h<0)h+=d;const x=Math.min(a.inWidth,f+p);let O=Number.NEGATIVE_INFINITY,v=-1;for(let t=g;t<y;t+=l){const i=t-n;for(let n=h;n<x;n+=d){const c=n-p,u=b.get(r,t,n,e);u>O&&(O=u,v=s?o?((r*a.inHeight+t)*a.inWidth+n)*a.inChannels+e:(t*a.inWidth+n)*a.inChannels+e:i*f+c)}}i.set(v,r,t,c,e)}}return i}function ue(e,t,n,a,s,o){const i=s.strideDepth,c=s.strideHeight,u=s.strideWidth,l=s.dilationDepth,d=s.dilationHeight,p=s.dilationWidth,f=s.effectiveFilterDepth,h=s.effectiveFilterHeight,m=s.effectiveFilterWidth,b=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,x="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,O=Object(r["buffer"])(s.outShape,n),v=O.values,k=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],w=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],N=s.outShape[4];for(let r=0;r<s.batchSize;++r){const t=r*k,n=r*a[0];for(let r=0;r<s.inChannels;++r)for(let O=0;O<s.outDepth;++O){const k=O*i-b;let j=k;while(j<0)j+=l;const T=Math.min(s.inDepth,f+k),S=t+O*w;for(let t=0;t<s.outHeight;++t){const i=t*c-g;let f=i;while(f<0)f+=d;const b=Math.min(s.inHeight,h+i),O=S+t*I;for(let t=0;t<s.outWidth;++t){const i=t*u-y;let c=i;while(c<0)c+=p;const h=Math.min(s.inWidth,m+i),g=O+t*N;let k=x,w=0,I=0;for(let t=j;t<T;t+=l){const s=n+t*a[1];for(let t=f;t<b;t+=d){const n=s+t*a[2];for(let t=c;t<h;t+=p){const s=n+t*a[3],i=e[s+r];if("max"===o&&i>k?k=i:"avg"===o&&(w+=i,I++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}const S=g+r;v[S]="avg"===o?w/I:k}}}}return O}function le(e,t){const n=Object(r["buffer"])(t.outShape,"int32"),a=t.strideDepth,s=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth,f=t.padInfo.front,h=t.padInfo.top,m=t.padInfo.left;for(let r=0;r<t.batchSize;++r)for(let b=0;b<t.inChannels;++b)for(let g=0;g<t.outDepth;++g){const y=g*a-f;let x=y;while(x<0)x+=i;const O=Math.min(t.inDepth,l+y);for(let a=0;a<t.outHeight;++a){const l=a*s-h;let f=l;while(f<0)f+=c;const v=Math.min(t.inHeight,d+l);for(let s=0;s<t.outWidth;++s){const h=s*o-m;let k=h;while(k<0)k+=u;const w=Math.min(t.inWidth,p+h);let I=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<O;t+=i){const n=t-y;for(let a=f;a<v;a+=c){const s=a-l;for(let o=k;o<w;o+=u){const i=o-h,c=e.get(r,t,a,o,b);c>=I&&(I=c,N=n*d*p+s*d+i)}}}n.set(N,r,g,a,s,b)}}}return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function de(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t;Object(a["a"])(o,"avgPool");const{filterSize:i,strides:c,pad:u,dimRoundingMode:l}=s,d=1;r["util"].assert(r["backend_util"].eitherStridesOrDilationsAreOne(c,d),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${c} and dilations '${d}'`);const f=r["backend_util"].computePool2DInfo(o.shape,i,c,d,u,l);let h;if(1===f.filterWidth&&1===f.filterHeight&&r["util"].arraysEqual(f.inShape,f.outShape))h=Object(p["a"])({inputs:{x:o},backend:n});else{const e=n.data.get(o.dataId).values,t=r["util"].computeStrides(o.shape),a=ie(e,o.shape,o.dtype,t,f,"avg");h=n.makeTensorInfo(f.outShape,o.dtype,a.values)}return h}const pe={kernelName:r["AvgPool"],backendName:"cpu",kernelFunc:de};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fe(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{filterSize:i,strides:c,pad:u,dimRoundingMode:l,dataFormat:d}=s;Object(a["a"])(o,"avgPool3d");const p=r["backend_util"].computePool3DInfo(o.shape,i,c,1,u,l,d),f=n.data.get(o.dataId).values,h=ue(f,o.shape,o.dtype,r["util"].computeStrides(o.shape),p,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}const he={kernelName:r["AvgPool3D"],backendName:"cpu",kernelFunc:fe};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function me(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,input:i}=t,{filterSize:c,strides:u,pad:l,dimRoundingMode:d}=s;Object(a["a"])([o,i],"avgPool3DGrad");const p=r["backend_util"].computePool3DInfo(i.shape,c,u,1,l,d),f=p.strideDepth,h=p.strideHeight,m=p.strideWidth,b=p.filterDepth,g=p.filterHeight,y=p.filterWidth,x=p.dilationDepth,O=p.dilationHeight,v=p.dilationWidth,k=p.effectiveFilterDepth,w=p.effectiveFilterHeight,I=p.effectiveFilterWidth,N=k-1-p.padInfo.front,j=I-1-p.padInfo.left,T=w-1-p.padInfo.top,S=Object(r["buffer"])(i.shape,"float32"),C=1/(b*g*y),E=n.bufferSync(o);for(let r=0;r<p.batchSize;++r)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inDepth;++t)for(let n=0;n<p.inHeight;++n)for(let a=0;a<p.inWidth;++a){const s=t-N,o=n-T,i=a-j;let c=0;for(let t=0;t<k;t+=x){const n=(s+t)/f;if(!(n<0||n>=p.outDepth||Math.floor(n)!==n))for(let t=0;t<w;t+=O){const a=(o+t)/h;if(!(a<0||a>=p.outHeight||Math.floor(a)!==a))for(let t=0;t<I;t+=v){const s=(i+t)/m;if(s<0||s>=p.outWidth||Math.floor(s)!==s)continue;const o=E.get(r,n,a,s,e);c+=o}}}S.set(c*C,r,t,n,a,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const be={kernelName:r["AvgPool3DGrad"],backendName:"cpu",kernelFunc:me};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ge(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,input:i}=t,c=i;Object(a["a"])([o,i],"avgPoolGrad");const{filterSize:u,strides:l,pad:d}=s,p=r["backend_util"].computePool2DInfo(c.shape,u,l,1,d),f=p.strideHeight,h=p.strideWidth,m=p.filterHeight,b=p.filterWidth,g=p.dilationHeight,y=p.dilationWidth,x=p.effectiveFilterHeight,O=p.effectiveFilterWidth,v=O-1-p.padInfo.left,k=x-1-p.padInfo.top,w=Object(r["buffer"])(c.shape,"float32"),I=1/(m*b),N=n.data.get(o.dataId).values,j=Object(r["buffer"])(o.shape,"float32",N);for(let r=0;r<p.batchSize;++r)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inHeight;++t)for(let n=0;n<p.inWidth;++n){const a=t-k,s=n-v;let o=0;for(let t=0;t<x;t+=g){const n=(a+t)/f;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let t=0;t<O;t+=y){const a=(s+t)/h;if(a<0||a>=p.outWidth||Math.floor(a)!==a)continue;const i=j.get(r,n,a,e);o+=i}}w.set(o*I,r,t,n,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}const ye={kernelName:r["AvgPoolGrad"],backendName:"cpu",kernelFunc:ge};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xe(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,scale:i,offset:c,mean:u,variance:l}=t;r["util"].assert(u.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r["util"].assert(null==c||u.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r["util"].assert(null==i||u.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Object(a["a"])([o,u,l,i,c],"batchNorm");let{varianceEpsilon:d}=s;null==d&&(d=.001);const p=n.data.get(o.dataId).values,f=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values,m=i?n.data.get(i.dataId).values:new Float32Array([1]),b=c?n.data.get(c.dataId).values:new Float32Array([0]),g=new Float32Array(p.length),y=b.length,x=m.length,O=h.length,v=f.length;let k=0,w=0,I=0,N=0;for(let r=0;r<p.length;++r)g[r]=b[k++]+(p[r]-f[w++])*m[I++]/Math.sqrt(h[N++]+d),k>=y&&(k=0),w>=v&&(w=0),I>=x&&(I=0),N>=O&&(N=0);return n.makeTensorInfo(o.shape,o.dtype,g)}const Oe={kernelName:r["FusedBatchNorm"],backendName:"cpu",kernelFunc:xe};var ve=n("235d");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ke(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{blockShape:i,crops:c}=s;Object(a["a"])([o],"batchToSpaceND");const u=i.reduce((e,t)=>e*t),l=r["backend_util"].getReshaped(o.shape,i,u),d=r["backend_util"].getPermuted(l.length,i.length),p=r["backend_util"].getReshapedPermuted(o.shape,i,u),f=r["backend_util"].getSliceBeginCoords(c,i.length),h=r["backend_util"].getSliceSize(p,c,i.length),m=T({inputs:{x:o},backend:n,attrs:{shape:l}}),b=Object(B["a"])({inputs:{x:m},backend:n,attrs:{perm:d}}),g=T({inputs:{x:b},backend:n,attrs:{shape:p}}),y=Object(ve["a"])({inputs:{x:g},backend:n,attrs:{begin:f,size:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),y}const we={kernelName:r["BatchToSpaceND"],backendName:"cpu",kernelFunc:ke};var Ie=n("1aa1");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ne(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o}=r,i=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,u=Object(Ie["a"])(i,c,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,u)}const je={kernelName:r["Bincount"],backendName:"cpu",kernelFunc:Ne};var Te=n("fa0a"),Se=n("4681");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Ce=Object(u["a"])(r["ClipByValue"],(e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),Ee={kernelName:r["ClipByValue"],backendName:"cpu",kernelFunc:Ce};var $e=n("9277");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ae=e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(r["util"].sizeFromShape(t.shape)),s=n.data.get(t.dataId),o=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,c=n.data.get(o.dataId).values,u=n.data.get(i.dataId).values;for(let r=0;r<c.length;r++){const e=c[r],t=u[r];a[r]=Math.hypot(e,t)}return n.makeOutput(a,t.shape,"float32")},Re={kernelName:r["ComplexAbs"],backendName:"cpu",kernelFunc:Ae};var _e=n("c003");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fe(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const De={kernelName:r["Imag"],backendName:"cpu",kernelFunc:Fe};var Me=n("0cf8");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Le(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a,o=r["util"].parseAxisParam(s,t[0].shape)[0];let i=r["backend_util"].computeOutShape(t.map(e=>e.shape),o);if(0===r["util"].sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const c=t.filter(e=>r["util"].sizeFromShape(e.shape)>0);if(1===c.length)return Object(p["a"])({inputs:{x:c[0]},backend:n});const u=c.map(e=>e.shape);if(r["backend_util"].assertParamsConsistent(u,o),"complex64"===c[0].dtype){const e=c.map(e=>Object(Me["a"])({inputs:{input:e},backend:n})),t=c.map(e=>Fe({inputs:{input:e},backend:n})),r=Le({inputs:e,backend:n,attrs:{axis:o}}),a=Le({inputs:t,backend:n,attrs:{axis:o}}),s=Object($e["a"])({inputs:{real:r,imag:a},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),s}const l=c.map(e=>{const t=r["util"].sizeFromShape(e.shape.slice(o)),a=[-1,t];return T({inputs:{x:e},backend:n,attrs:{shape:a}})}),d=l.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));i=r["backend_util"].computeOutShape(l.map(e=>e.shape),1);const f=1===l[0].shape[0],h=Object(_e["a"])(d,i,t[0].dtype,f),m=r["backend_util"].computeOutShape(c.map(e=>e.shape),o),b=n.makeTensorInfo(m,t[0].dtype,h);return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),b}const Pe={kernelName:r["Concat"],backendName:"cpu",kernelFunc:Le};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Be(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,filter:i}=t,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p}=s;Object(a["a"])([o,i],"conv2d");const f=r["backend_util"].convertConv2DDataFormat(l),h=r["backend_util"].computeConv2DInfo(o.shape,i.shape,c,d,u,p,!1,f),m=h.filterHeight,b=h.filterWidth,g=h.dilationHeight,y=h.dilationWidth,x=h.padInfo.left,O=h.padInfo.top,v="channelsLast"===h.dataFormat,k=new r["TensorBuffer"](h.outShape,o.dtype),w=r["util"].computeStrides(o.shape),I=r["util"].computeStrides(i.shape),N=w[0],j=v?w[1]:w[2],T=v?w[2]:1,S=v?1:w[1],C=k.strides[0],E=v?k.strides[1]:k.strides[2],$=v?k.strides[2]:1,A=v?1:k.strides[1],R=n.data.get(o.dataId).values,_=n.data.get(i.dataId).values,F=k.values;for(let r=0;r<h.batchSize;++r){const e=r*N,t=r*C;for(let n=0;n<h.outHeight;++n){const r=t+n*E,a=n*h.strideHeight-O;for(let t=0;t<m;++t){const n=a+t*g;if(n<0||n>=h.inHeight)continue;const s=t*I[0],o=e+n*j;for(let e=0;e<h.outWidth;++e){const t=r+e*$,n=e*h.strideWidth-x;for(let e=0;e<b;++e){const r=n+e*y;if(r<0||r>=h.inWidth)continue;const a=s+e*I[1],i=o+r*T;let c=a;for(let e=0;e<h.inChannels;++e){const n=R[i+e*S];for(let e=0;e<h.outChannels;++e)F[t+e*A]+=n*_[c+e];c+=h.outChannels}}}}}}return n.makeTensorInfo(k.shape,k.dtype,F)}const ze={kernelName:r["Conv2D"],backendName:"cpu",kernelFunc:Be};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ve(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,dy:i}=t,{strides:c,pad:u,dataFormat:l,dimRoundingMode:d,filterShape:p}=s;Object(a["a"])([o,i],"conv2dBackpropFilter");const f=r["backend_util"].convertConv2DDataFormat(l),h=r["backend_util"].computeConv2DInfo(o.shape,p,c,1,u,d,!1,f),{strideHeight:m,strideWidth:b,filterHeight:g,filterWidth:y}=h,x="channelsLast"===h.dataFormat,O=new r["TensorBuffer"](h.filterShape,"float32"),v=h.padInfo.left,k=h.padInfo.top,w=n.data.get(o.dataId).values,I=n.data.get(i.dataId).values,N=new r["TensorBuffer"](o.shape,o.dtype,w),j=new r["TensorBuffer"](i.shape,i.dtype,I);for(let r=0;r<g;++r){const e=Math.max(0,Math.ceil((k-r)/m)),t=Math.min(h.outHeight,(h.inHeight+k-r)/m);for(let n=0;n<y;++n){const a=Math.max(0,Math.ceil((v-n)/b)),s=Math.min(h.outWidth,(h.inWidth+v-n)/b);for(let o=0;o<h.inChannels;++o)for(let i=0;i<h.outChannels;++i){let c=0;for(let u=0;u<h.batchSize;++u)for(let l=e;l<t;++l){const e=r+l*m-k;for(let t=a;t<s;++t){const r=n+t*b-v;c+=x?N.get(u,e,r,o)*j.get(u,l,t,i):N.get(u,o,e,r)*j.get(u,i,l,t)}}O.set(c,r,n,o,i)}}}return n.makeTensorInfo(O.shape,O.dtype,O.values)}const We={kernelName:r["Conv2DBackpropFilter"],backendName:"cpu",kernelFunc:Ve};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ue(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,filter:i}=t,{inputShape:c,strides:u,pad:l,dataFormat:d,dimRoundingMode:p}=s;Object(a["a"])([o,i],"conv2dBackpropInput");const f=r["util"].computeStrides(i.shape),h=r["util"].computeStrides(o.shape);let m=r["backend_util"].convertConv2DDataFormat(d);const b=r["backend_util"].computeConv2DInfo(c,i.shape,u,1,l,p,!1,m),g=new r["TensorBuffer"](b.inShape,"float32"),y=g.values,x=n.data.get(o.dataId).values,O=n.data.get(i.dataId).values,[v,k,w]=f,{batchSize:I,filterHeight:N,filterWidth:j,inChannels:T,inHeight:S,inWidth:C,outChannels:E,outHeight:$,outWidth:A,strideHeight:R,strideWidth:_}=b;m=b.dataFormat;const F=N-1-b.padInfo.top,D=j-1-b.padInfo.left,M="channelsLast"===m,L=g.strides[0],P=M?g.strides[1]:g.strides[2],B=M?g.strides[2]:1,z=M?1:g.strides[1],V=h[0],W=M?h[1]:h[2],U=M?h[2]:1,G=M?1:h[1];for(let r=0;r<I;++r)for(let e=0;e<T;++e)for(let t=0;t<S;++t){const n=t-F,a=Math.max(0,Math.ceil(n/R)),s=Math.min($,(N+n)/R);for(let o=0;o<C;++o){const i=o-D,c=Math.max(0,Math.ceil(i/_)),u=Math.min(A,(j+i)/_);let l=0;for(let t=a;t<s;++t){const a=t*R-n;for(let n=c;n<u;++n){const s=n*_-i,o=V*r+W*t+U*n,c=v*(N-1-a)+k*(j-1-s)+w*e;for(let e=0;e<E;++e){const t=x[o+G*e],n=O[c+e];l+=t*n}}}const d=L*r+P*t+B*o+z*e;y[d]=l}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}const Ge={kernelName:r["Conv2DBackpropInput"],backendName:"cpu",kernelFunc:Ue};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function He(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,filter:i}=t,{strides:c,pad:u,dilations:l}=s;Object(a["a"])([o,i],"conv3d");const d=r["backend_util"].computeConv3DInfo(o.shape,i.shape,c,l,u),{filterDepth:p,filterHeight:f,filterWidth:h,dilationDepth:m,dilationHeight:b,dilationWidth:g,padInfo:y}=d,x=y.front,O=y.left,v=y.top,k=new r["TensorBuffer"](d.outShape,o.dtype),w=n.data.get(o.dataId).values,I=n.data.get(i.dataId).values,N=k.values,j=r["util"].computeStrides(o.shape),T=r["util"].computeStrides(i.shape);for(let r=0;r<d.batchSize;++r){const e=r*j[0],t=r*k.strides[0];for(let n=0;n<d.outDepth;++n){const r=t+n*k.strides[1],a=n*d.strideDepth-x;for(let t=0;t<p;++t){const n=a+t*m;if(n<0||n>=d.inDepth)continue;const s=t*T[0],o=e+n*j[1];for(let e=0;e<d.outHeight;++e){const t=r+e*k.strides[2],n=e*d.strideHeight-v;for(let e=0;e<f;++e){const r=n+e*b;if(r<0||r>=d.inHeight)continue;const a=s+e*T[1],i=o+r*j[2];for(let e=0;e<d.outWidth;++e){const n=t+e*d.outChannels,r=e*d.strideWidth-O;for(let e=0;e<h;++e){const t=r+e*g;if(t<0||t>=d.inWidth)continue;const s=a+e*T[2],o=i+t*d.inChannels;let c=s;for(let e=0;e<d.inChannels;++e){const t=w[o+e];for(let e=0;e<d.outChannels;++e)N[n+e]+=t*I[c+e];c+=d.outChannels}}}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const qe={kernelName:r["Conv3D"],backendName:"cpu",kernelFunc:He};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ke(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,dy:i}=t,{strides:c,pad:u,filterShape:l}=s;Object(a["a"])([o,i],"conv3dBackpropFilterV2");const d=r["util"].computeStrides(o.shape),p=r["util"].computeStrides(i.shape),f=r["backend_util"].computeConv3DInfo(o.shape,l,c,1,u),h=f.strideDepth,m=f.strideHeight,b=f.strideWidth,g=f.filterDepth,y=f.filterHeight,x=f.filterWidth,O=new r["TensorBuffer"](f.filterShape,"float32"),v=O.values,[k,w,I,N]=O.strides,j=n.data.get(i.dataId).values,[T,S,C,E]=p,$=n.data.get(o.dataId).values,[A,R,_,F]=d,D=f.padInfo.front,M=f.padInfo.left,L=f.padInfo.top;for(let r=0;r<g;++r){const e=Math.max(0,Math.ceil((D-r)/h)),t=Math.min(f.outDepth,(f.inDepth+D-r)/h),n=r*k;for(let a=0;a<y;++a){const s=Math.max(0,Math.ceil((L-a)/m)),o=Math.min(f.outHeight,(f.inHeight+L-a)/m),i=a*w+n;for(let n=0;n<x;++n){const c=Math.max(0,Math.ceil((M-n)/b)),u=Math.min(f.outWidth,(f.inWidth+M-n)/b),l=n*I+i;for(let i=0;i<f.inChannels;++i){const d=i*N+l;for(let l=0;l<f.outChannels;++l){let p=0;for(let d=0;d<f.batchSize;++d){const f=d*A,g=d*T;for(let d=e;d<t;++d){const e=r+d*h-D,t=e*R+f,y=d*S+g;for(let r=s;r<o;++r){const e=a+r*m-L,s=e*_+t,o=r*C+y;for(let t=c;t<u;++t){const e=n+t*b-M,r=e*F+s,a=t*E+o;p+=$[r+i]*j[a+l]}}}}v[d+l]=p}}}}}return n.makeTensorInfo(O.shape,O.dtype,O.values)}const Xe={kernelName:r["Conv3DBackpropFilterV2"],backendName:"cpu",kernelFunc:Ke};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ye(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,filter:i}=t,{pad:c,strides:u,inputShape:l}=s;Object(a["a"])([o],"conv3dBackpropInputV2");const d=r["util"].computeStrides(o.shape),p=r["util"].computeStrides(i.shape),f=r["backend_util"].computeConv3DInfo(l,i.shape,u,1,c),h=new r["TensorBuffer"](f.inShape,"float32"),m=h.values,[b,g,y,x]=h.strides,O=n.data.get(o.dataId).values,[v,k,w,I]=d,N=n.data.get(i.dataId).values,[j,T,S,C]=p,{batchSize:E,filterDepth:$,filterHeight:A,filterWidth:R,inChannels:_,inDepth:F,inHeight:D,inWidth:M,outChannels:L,outDepth:P,outHeight:B,outWidth:z,strideDepth:V,strideHeight:W,strideWidth:U}=f,G=$-1-f.padInfo.front,H=A-1-f.padInfo.top,q=R-1-f.padInfo.left;for(let r=0;r<E;++r)for(let e=0;e<_;++e)for(let t=0;t<F;++t){const n=t-G,a=Math.max(0,Math.ceil(n/V)),s=Math.min(P,($+n)/V);for(let o=0;o<D;++o){const i=o-H,c=Math.max(0,Math.ceil(i/W)),u=Math.min(B,(A+i)/W);for(let l=0;l<M;++l){const d=l-q,p=Math.max(0,Math.ceil(d/U)),f=Math.min(z,(R+d)/U);let h=0;for(let t=a;t<s;++t){const a=t*V-n;for(let n=c;n<u;++n){const s=n*W-i;for(let o=p;o<f;++o){const i=o*U-d,c=v*r+k*t+w*n+I*o,u=j*($-1-a)+T*(A-1-s)+S*(R-1-i)+C*e;for(let e=0;e<L;++e){const t=O[c+e],n=N[u+e];h+=t*n}}}}m[b*r+g*t+y*o+x*l+e]=h}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}const Qe={kernelName:r["Conv3DBackpropInputV2"],backendName:"cpu",kernelFunc:Ye},Ze=Object(u["a"])(r["Cos"],e=>Math.cos(e)),Je={kernelName:r["Cos"],backendName:"cpu",kernelFunc:Ze},et=Object(u["a"])(r["Cosh"],e=>Math.cosh(e)),tt={kernelName:r["Cosh"],backendName:"cpu",kernelFunc:et};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nt(e){const{inputs:t,backend:n,attrs:a}=e,{image:s,boxes:o,boxInd:i}=t,{cropSize:c,method:u,extrapolationValue:l}=a,[d,p,f,h]=s.shape,m=o.shape[0],[b,g]=c,y=Object(r["buffer"])([m,b,g,h],"float32"),x=n.data.get(o.dataId).values,O=n.data.get(i.dataId).values,v=n.data.get(s.dataId).values,k=r["util"].computeStrides(s.shape),w=r["util"].computeStrides(y.shape);for(let r=0;r<m;r++){const e=4*r,t=x[e],n=x[e+1],a=x[e+2],s=x[e+3],o=O[r];if(o>=d)continue;const i=b>1?(a-t)*(p-1)/(b-1):0,c=g>1?(s-n)*(f-1)/(g-1):0;for(let d=0;d<b;d++){const e=b>1?t*(p-1)+d*i:.5*(t+a)*(p-1);if(e<0||e>p-1)for(let t=0;t<g;t++)for(let e=0;e<h;e++){const n=e+t*w[2]+d*w[1]+r*w[0];y.values[n]=l}else if("bilinear"===u){const t=Math.floor(e),a=Math.ceil(e),i=e-t;for(let e=0;e<g;e++){const u=g>1?n*(f-1)+e*c:.5*(n+s)*(f-1);if(u<0||u>f-1){for(let t=0;t<h;t++){const n=t+e*w[2]+d*w[1]+r*w[0];y.values[n]=l}continue}const p=Math.floor(u),m=Math.ceil(u),b=u-p;for(let n=0;n<h;n++){let s=n+p*k[2]+t*k[1]+o*k[0];const c=v[s];s=n+m*k[2]+t*k[1]+o*k[0];const u=v[s];s=n+p*k[2]+a*k[1]+o*k[0];const l=v[s];s=n+m*k[2]+a*k[1]+o*k[0];const f=v[s],h=c+(u-c)*b,g=l+(f-l)*b;s=n+e*w[2]+d*w[1]+r*w[0],y.values[s]=h+(g-h)*i}}}else for(let t=0;t<g;++t){const a=g>1?n*(f-1)+t*c:.5*(n+s)*(f-1);if(a<0||a>f-1){for(let e=0;e<h;e++){const n=e+t*w[2]+d*w[1]+r*w[0];y.values[n]=l}continue}const i=Math.round(a),u=Math.round(e);for(let e=0;e<h;e++){const n=e+i*k[2]+u*k[1]+o*k[0],a=e+t*w[2]+d*w[1]+r*w[0];y.values[a]=v[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}const rt={kernelName:r["CropAndResize"],backendName:"cpu",kernelFunc:nt};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function at(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i,exclusive:c,reverse:u}=s;Object(a["a"])(o,"cumsum");const l=r["backend_util"].getAxesPermutation([i],o.shape.length);let d=o;null!=l&&(d=Object(B["a"])({inputs:{x:o},backend:n,attrs:{perm:l}}));const p=r["backend_util"].getInnerMostAxes(1,o.shape.length)[0];if(p!==d.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${d.shape.length-1} but got axis=${p}`);const f=Object(r["upcastType"])(d.dtype,"int32"),h=r["util"].makeZerosTypedArray(r["util"].sizeFromShape(d.shape),f),m=n.data.get(d.dataId).values,b=d.shape[d.shape.length-1],g=u?(e,t)=>e+b-t-1:(e,t)=>e+t;for(let r=0;r<m.length;r+=b)for(let e=0;e<b;e++){const t=g(r,e);if(0===e)h[t]=c?0:m[t];else{const n=g(r,e-1);h[t]=c?m[n]+h[n]:m[t]+h[n]}}const y=n.makeTensorInfo(d.shape,f,h);if(null!=l){const e=r["backend_util"].getUndoAxesPermutation(l),t=Object(B["a"])({inputs:{x:y},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(d),t}return y}const st={kernelName:r["Cumsum"],backendName:"cpu",kernelFunc:at};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ot(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o,binaryOutput:i}=r;if(1===a.shape.length){const e=n.data.get(a.dataId).values,t=n.data.get(s.dataId).values,r=Object(Ie["a"])(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=Object(Ie["b"])(e,t,o,i);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+a.shape.length+".")}const it={kernelName:r["DenseBincount"],backendName:"cpu",kernelFunc:ot};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ct(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockSize:o,dataFormat:i}=a;r["util"].assert("NHWC"===i,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+i),r["util"].assert(o>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+o);const c=s.shape[0],u=s.shape[1],l=s.shape[2],d=s.shape[3],p=u*o,f=l*o,h=d/(o*o),m=n.data.get(s.dataId).values,b=new Float32Array(c*p*f*h);let g=0;for(let r=0;r<c;++r)for(let e=0;e<p;++e){const t=Math.floor(e/o),n=e%o;for(let e=0;e<f;++e){const a=Math.floor(e/o),s=e%o,i=(n*o+s)*h;for(let e=0;e<h;++e){const n=e+i,s=n+d*(a+l*(t+u*r));b[g++]=m[s]}}}return n.makeTensorInfo([c,p,f,h],s.dtype,b)}const ut={kernelName:r["DepthToSpace"],backendName:"cpu",kernelFunc:ct};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lt(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,filter:i}=t,{strides:c,pad:u,dilations:l,dimRoundingMode:d}=s;Object(a["a"])([o,i],"depthwiseConv2DNative");const p=r["util"].computeStrides(o.shape),f=r["util"].computeStrides(i.shape);let h=l;null==h&&(h=[1,1]),r["util"].assert(r["backend_util"].eitherStridesOrDilationsAreOne(c,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${h}'`);const m=r["backend_util"].computeConv2DInfo(o.shape,i.shape,c,h,u,d,!0),{filterHeight:b,filterWidth:g,dilationHeight:y,dilationWidth:x,padInfo:O}=m,v=O.left,k=O.top,w=m.outChannels/m.inChannels,I=new r["TensorBuffer"](m.outShape,o.dtype),N=n.data.get(o.dataId).values,j=n.data.get(i.dataId).values,T=I.values;for(let r=0;r<m.batchSize;++r){const e=r*p[0],t=r*I.strides[0];for(let n=0;n<m.outHeight;++n){const r=t+n*I.strides[1],a=n*m.strideHeight-k;for(let t=0;t<b;++t){const n=a+t*y;if(n<0||n>=m.inHeight)continue;const s=t*f[0],o=e+n*p[1];for(let e=0;e<m.outWidth;++e){const t=r+e*I.strides[2],n=e*m.strideWidth-v;for(let e=0;e<g;++e){const r=n+e*x;if(r<0||r>=m.inWidth)continue;const a=s+e*f[1],i=o+r*m.inChannels;let c=t,u=a;for(let e=0;e<m.inChannels;++e){const t=N[i+e];for(let e=0;e<w;++e)T[c+e]+=t*j[u+e];c+=w,u+=w}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const dt={kernelName:r["DepthwiseConv2dNative"],backendName:"cpu",kernelFunc:lt};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pt(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,dy:i}=t,{strides:c,dilations:u,pad:l,dimRoundingMode:d,filterShape:p}=s;Object(a["a"])([o,i],"depthwiseConv2dNativeBackpropFilter");const f=r["backend_util"].computeConv2DInfo(o.shape,p,c,u,l,d,!0),{strideHeight:h,strideWidth:m,filterHeight:b,filterWidth:g}=f,y=new r["TensorBuffer"](f.filterShape,"float32"),x=f.padInfo.left,O=f.padInfo.top,v=f.outChannels/f.inChannels,k=n.data.get(o.dataId).values,w=new r["TensorBuffer"](o.shape,o.dtype,k),I=n.data.get(i.dataId).values,N=new r["TensorBuffer"](i.shape,i.dtype,I);for(let r=0;r<b;++r){const e=Math.max(0,Math.ceil((O-r)/h)),t=Math.min(f.outHeight,(f.inHeight+O-r)/h);for(let n=0;n<g;++n){const a=Math.max(0,Math.ceil((x-n)/m)),s=Math.min(f.outWidth,(f.inWidth+x-n)/m);for(let o=0;o<f.outChannels;++o){const i=Math.trunc(o/v),c=o%v;let u=0;for(let l=0;l<f.batchSize;++l)for(let c=e;c<t;++c){const e=r+c*h-O;for(let t=a;t<s;++t){const r=n+t*m-x;u+=w.get(l,e,r,i)*N.get(l,c,t,o)}}y.set(u,r,n,i,c)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}const ft={kernelName:r["DepthwiseConv2dNativeBackpropFilter"],backendName:"cpu",kernelFunc:pt};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ht(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,filter:i}=t,{strides:c,dilations:u,pad:l,dimRoundingMode:d,inputShape:p}=s;Object(a["a"])([o,i],"depthwiseConv2DNativeBackpropInput");const f=r["util"].computeStrides(o.shape),h=r["util"].computeStrides(i.shape),m=r["backend_util"].computeConv2DInfo(p,i.shape,c,u,l,d,!0),b=new r["TensorBuffer"](m.inShape,"float32"),g=b.values,[y,x,O]=b.strides,v=n.data.get(o.dataId).values,[k,w,I]=f,N=n.data.get(i.dataId).values,[j,T,S]=h,{batchSize:C,filterHeight:E,filterWidth:$,inChannels:A,inHeight:R,inWidth:_,outChannels:F,outHeight:D,outWidth:M,strideHeight:L,strideWidth:P}=m,B=E-1-m.padInfo.top,z=$-1-m.padInfo.left,V=F/A;for(let r=0;r<C;++r)for(let e=0;e<A;++e)for(let t=0;t<R;++t){const n=t-B,a=Math.max(0,Math.ceil(n/L)),s=Math.min(D,(E+n)/L);for(let o=0;o<_;++o){const i=o-z,c=Math.max(0,Math.ceil(i/P)),u=Math.min(M,($+i)/P);let l=0;for(let t=a;t<s;++t){const a=t*L-n;for(let n=c;n<u;++n){const s=n*P-i,o=k*r+w*t+I*n,c=j*(E-1-a)+T*($-1-s)+S*e;for(let t=0;t<V;++t){const n=e*V+t,r=v[o+n],a=N[c+t];l+=r*a}}}g[y*r+x*t+O*o+e]=l}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const mt={kernelName:r["DepthwiseConv2dNativeBackpropInput"],backendName:"cpu",kernelFunc:ht};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bt(e){const{inputs:t,backend:n}=e,{x:a}=t,s=r["util"].sizeFromShape(a.shape),o=n.data.get(a.dataId).values,i=Object(r["buffer"])([s,s],a.dtype),c=i.values;for(let r=0;r<o.length;r++)c[r*s+r]=o[r];const u=[...a.shape,...a.shape];return n.makeTensorInfo(u,i.dtype,i.values)}const gt={kernelName:r["Diag"],backendName:"cpu",kernelFunc:bt},yt={kernelName:r["Dilation2D"],backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s}=e,{strides:o,pad:i,dilations:c}=n,u=t,l=u.data.get(a.dataId).values,d=a.shape.length,p=u.data.get(s.dataId).values,f=s.shape.length,{batchSize:h,inHeight:m,inWidth:b,inChannels:g,outHeight:y,outWidth:x,padInfo:O,strideHeight:v,strideWidth:k,filterHeight:w,filterWidth:I,dilationHeight:N,dilationWidth:j,outShape:T}=r["backend_util"].computeDilation2DInfo(a.shape,s.shape,o,i,"NHWC",c),S=r["util"].sizeFromShape(T),C=T.length,E=r["util"].getArrayFromDType(a.dtype,S);for(let A=0;A<h;++A)for(let e=0;e<y;++e){const t=e*v-O.top;for(let n=0;n<x;++n){const o=n*k-O.left;for(let i=0;i<g;++i){let c=Number.MIN_SAFE_INTEGER;for(let e=0;e<w;++e){const n=t+e*N;if(n>=0&&n<m)for(let t=0;t<I;++t){const u=o+t*j;if(u>=0&&u<b){const o=r["util"].locToIndex([A,n,u,i],d,r["util"].computeStrides(a.shape)),h=r["util"].locToIndex([e,t,i],f,r["util"].computeStrides(s.shape)),m=l[o]+p[h];m>c&&(c=m)}}}const u=r["util"].locToIndex([A,e,n,i],C,r["util"].computeStrides(T));E[u]=c}}}const $=u.write(r["util"].toTypedArray(E,a.dtype),T,a.dtype);return{dataId:$,shape:T,dtype:a.dtype}}},xt={kernelName:r["Dilation2DBackpropFilter"],backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s,dy:o}=e,{strides:i,pad:c,dilations:u}=n,l=t,d=r["util"].toNestedArray(a.shape,l.data.get(a.dataId).values),p=r["util"].toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:f,inHeight:h,inWidth:m,inChannels:b,outHeight:g,outWidth:y,padInfo:x,strideHeight:O,strideWidth:v,filterHeight:k,filterWidth:w,dilationHeight:I,dilationWidth:N,outShape:j}=r["backend_util"].computeDilation2DInfo(a.shape,s.shape,i,c,"NHWC",u);r["util"].assert(o.rank===j.length,()=>`Error in ${r["Dilation2DBackpropFilter"]}, dy must have the same rank as output ${j.length}, but got `+o.rank);const T=r["util"].toNestedArray(j,l.data.get(o.dataId).values),S=r["util"].makeZerosNestedTypedArray(s.shape,s.dtype);for(let r=0;r<f;++r)for(let e=0;e<g;++e){const t=e*O-x.top;for(let n=0;n<y;++n){const a=n*v-x.left;for(let s=0;s<b;++s){let o=Number.MIN_SAFE_INTEGER,i=0,c=0;for(let e=0;e<k;++e){const n=t+e*I;if(n>=0&&n<h)for(let t=0;t<w;++t){const u=a+t*N;if(u>=0&&u<m){const a=d[r][n][u][s]+p[e][t][s];a>o&&(o=a,i=e,c=t)}}}S[i][c][s]+=T[r][e][n][s]}}}const C=l.write(r["util"].toTypedArray(S,a.dtype),s.shape,s.dtype);return{dataId:C,shape:s.shape,dtype:s.dtype}}},Ot={kernelName:r["Dilation2DBackpropInput"],backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s,dy:o}=e,{strides:i,pad:c,dilations:u}=n,l=t,d=r["util"].toNestedArray(a.shape,l.data.get(a.dataId).values),p=r["util"].toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:f,inHeight:h,inWidth:m,inChannels:b,outHeight:g,outWidth:y,padInfo:x,strideHeight:O,strideWidth:v,filterHeight:k,filterWidth:w,dilationHeight:I,dilationWidth:N,outShape:j}=r["backend_util"].computeDilation2DInfo(a.shape,s.shape,i,c,"NHWC",u);r["util"].assert(o.rank===j.length,()=>`Error in ${r["Dilation2DBackpropInput"]}, dy must have the same rank as output ${j.length}, but got `+o.rank);const T=r["util"].toNestedArray(j,l.data.get(o.dataId).values),S=r["util"].makeZerosNestedTypedArray(a.shape,a.dtype);for(let r=0;r<f;++r)for(let e=0;e<g;++e){const t=e*O-x.top;for(let n=0;n<y;++n){const a=n*v-x.left;for(let s=0;s<b;++s){let o=Number.MIN_SAFE_INTEGER,i=t<0?0:t,c=a<0?0:a;for(let e=0;e<k;++e){const n=t+e*I;if(n>=0&&n<h)for(let t=0;t<w;++t){const u=a+t*N;if(u>=0&&u<m){const a=d[r][n][u][s]+p[e][t][s];a>o&&(o=a,i=n,c=u)}}}S[r][i][c][s]+=T[r][e][n][s]}}}const C=l.write(r["util"].toTypedArray(S,a.dtype),a.shape,a.dtype);return{dataId:C,shape:a.shape,dtype:a.dtype}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var vt=n("72c4"),kt=n("d1e0");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wt(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i,keepDims:c}=s;let u;Object(a["a"])(o,"sum"),u="bool"===o.dtype?Object(Te["a"])({inputs:{x:o},backend:n,attrs:{dtype:"int32"}}):Object(p["a"])({inputs:{x:o},backend:n});const l=u.shape.length,d=r["util"].parseAxisParam(i,u.shape),f=r["backend_util"].getAxesPermutation(d,l);let h=d,m=u;null!=f&&(m=Object(B["a"])({inputs:{x:u},backend:n,attrs:{perm:f}}),h=r["backend_util"].getInnerMostAxes(h.length,l)),r["backend_util"].assertAxesAreInnerMostDims("sum",h,m.shape.length);const[b,g]=r["backend_util"].computeOutAndReduceShapes(m.shape,h),y=r["backend_util"].upcastType(m.dtype,"int32");let x=Object(kt["a"])(n,b,y);const O=r["util"].sizeFromShape(g),v=n.data.get(x.dataId).values,k=n.data.get(m.dataId).values;for(let r=0;r<v.length;++r){const e=r*O;let t=0;for(let n=0;n<O;++n)t+=k[e+n];v[r]=t}if(c){const e=r["backend_util"].expandShapeToKeepDim(x.shape,d),t=x;x=T({inputs:{x:x},backend:n,attrs:{shape:e}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(u),null!=f&&n.disposeIntermediateTensorInfo(m),x}const It={kernelName:r["Sum"],backendName:"cpu",kernelFunc:wt};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nt(e){const{inputs:t,backend:n,attrs:a}=e,{equation:s}=a,o=t,{allDims:i,summedDims:c,idDims:u}=r["backend_util"].decodeEinsumEquation(s,o.length);r["backend_util"].checkEinsumDimSizes(i.length,u,o);const{path:l,steps:d}=r["backend_util"].getEinsumComputePath(c,u),p=d.length;let f=null,h=i.length;const m=[];for(let b=0;b<p;++b){for(const e of d[b]){const{permutationIndices:t,expandDims:a}=r["backend_util"].getEinsumPermutation(h,u[e]);let s;r["backend_util"].isIdentityPermutation(t)?s=o[e]:(s=Object(B["a"])({inputs:{x:o[e]},backend:n,attrs:{perm:t}}),m.push(s));const i=s.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);r["util"].arraysEqual(s.shape,i)||(s=T({inputs:{x:s},backend:n,attrs:{shape:i}}),m.push(s)),null===f?f=s:(f=Object(vt["a"])({inputs:{a:s,b:f},backend:n}),m.push(f))}b<p-1&&(l[b]>=0&&(f=wt({inputs:{x:f},backend:n,attrs:{axis:l[b]-(i.length-h),keepDims:!1}}),m.push(f)),h--)}for(const r of m)r!==f&&n.disposeIntermediateTensorInfo(r);return f}const jt={kernelName:r["Einsum"],backendName:"cpu",kernelFunc:Nt};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tt(e){const{inputs:t,backend:n}=e,{dy:s,y:o}=t;Object(a["a"])([s,o],"eluGrad");const i=new Float32Array(r["util"].sizeFromShape(o.shape)),c=n.data.get(o.dataId).values,u=n.data.get(s.dataId).values;for(let r=0;r<c.length;++r){const e=c[r];i[r]=e>=1?u[r]:u[r]*(e+1)}return n.makeTensorInfo(o.shape,"float32",i)}const St={kernelName:r["EluGrad"],backendName:"cpu",kernelFunc:Tt},Ct=Object(m["a"])((e,t)=>e===t?1:0),Et=Object(te["a"])(r["Equal"],Ct,null,"bool"),$t={kernelName:r["Equal"],backendName:"cpu",kernelFunc:Et},At=r["backend_util"].ERF_P,Rt=r["backend_util"].ERF_A1,_t=r["backend_util"].ERF_A2,Ft=r["backend_util"].ERF_A3,Dt=r["backend_util"].ERF_A4,Mt=r["backend_util"].ERF_A5,Lt=Object(u["a"])(r["Erf"],e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+At*n);return t*(1-((((Mt*r+Dt)*r+Ft)*r+_t)*r+Rt)*r*Math.exp(-n*n))}),Pt={kernelName:r["Erf"],backendName:"cpu",kernelFunc:Lt};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Bt=n("fb0c");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zt(e){const{inputs:t,backend:n,attrs:a}=e,{input:s}=t,{dim:o}=a,i=s.shape.length,c=s.shape.slice();let u=o;return o<0&&(r["util"].assert(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+o+1),c.splice(u,0,1),T({inputs:{x:s},backend:n,attrs:{shape:c}})}const Vt={kernelName:r["ExpandDims"],backendName:"cpu",kernelFunc:zt};var Wt=n("bd61");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ut=Object(m["a"])((e,t)=>e/t),Gt=Object(te["a"])(r["RealDiv"],Ut),Ht={kernelName:r["RealDiv"],backendName:"cpu",kernelFunc:Gt};var qt=n("52f6");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kt(e,t,n){const a=e.shape,s=a[0],o=a[1],i=n.data.get(e.dataId),c=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[s,o],d=r["util"].sizeFromShape(l),p=r["util"].getTypedArrayFromDType("float32",d),f=r["util"].getTypedArrayFromDType("float32",d);for(let g=0;g<s;g++){const e=Object(ve["a"])({inputs:{x:c},backend:n,attrs:{begin:[g,0],size:[1,o]}}),a=Object(ve["a"])({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,o]}}),s=Object($e["a"])({inputs:{real:e,imag:a},backend:n}),{real:i,imag:l}=Xt(s,t,n),d=r["backend_util"].mergeRealAndImagArrays(i,l);for(let t=0;t<o;t++){const e=r["backend_util"].getComplexWithIndex(d,t);p[g*o+t]=e.real,f[g*o+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s)}const h=n.makeTensorInfo(l,"float32",p),m=n.makeTensorInfo(l,"float32",f),b=Object($e["a"])({inputs:{real:h,imag:m},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),b}function Xt(e,t,n){const a=r["util"].sizeFromShape(e.shape),s=n.data.get(e.dataId),o=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(Yt(a)){const s=Qt(o,i,a,t,n),c=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(c,"float32",s.real),t=n.makeTensorInfo(c,"float32",s.imag),o=n.makeTensorInfo([],"float32",r["util"].createScalarValue(a,"float32")),i=Object(p["a"])({inputs:{x:o},backend:n}),u=Ht.kernelFunc({inputs:{a:e,b:o},backend:n}),l=Ht.kernelFunc({inputs:{a:t,b:i},backend:n}),d=n.data.get(u.dataId).values,f=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:d,imag:f}}return s}{const e=r["backend_util"].mergeRealAndImagArrays(o,i),n=Zt(e,a,t);return r["backend_util"].splitRealAndImagArrays(n)}}function Yt(e){return 0===(e&e-1)}function Qt(e,t,n,a,s){if(1===n)return{real:e,imag:t};const o=r["backend_util"].mergeRealAndImagArrays(e,t),i=n/2,c=r["backend_util"].complexWithEvenIndex(o),u=c.real,l=c.imag,d=[u.length],p=s.makeTensorInfo(d,"float32",u),f=s.makeTensorInfo(d,"float32",l),h=Object($e["a"])({inputs:{real:p,imag:f},backend:s}),m=r["backend_util"].complexWithOddIndex(o),b=m.real,g=m.imag,y=[b.length],x=s.makeTensorInfo(y,"float32",b),O=s.makeTensorInfo(y,"float32",g),v=Object($e["a"])({inputs:{real:x,imag:O},backend:s}),k=Qt(u,l,i,a,s),w=k.real,I=k.imag,N=[w.length],T=s.makeTensorInfo(N,"float32",w),S=s.makeTensorInfo(N,"float32",I),C=Object($e["a"])({inputs:{real:T,imag:S},backend:s}),E=Qt(b,g,i,a,s),$=E.real,A=E.imag,R=[$.length],_=s.makeTensorInfo(R,"float32",$),F=s.makeTensorInfo(R,"float32",A),D=Object($e["a"])({inputs:{real:_,imag:F},backend:s}),M=r["backend_util"].exponents(n,a),L=[M.real.length],P=s.makeTensorInfo(L,"float32",M.real),B=s.makeTensorInfo(L,"float32",M.imag),z=Object($e["a"])({inputs:{real:P,imag:B},backend:s}),V=Object(vt["a"])({inputs:{a:z,b:D},backend:s}),W=Object(j["a"])({inputs:{a:C,b:V},backend:s}),U=Object(qt["a"])({inputs:{a:C,b:V},backend:s}),G=Object(Me["a"])({inputs:{input:W},backend:s}),H=Object(Me["a"])({inputs:{input:U},backend:s}),q=Fe({inputs:{input:W},backend:s}),K=Fe({inputs:{input:U},backend:s}),X=Le({inputs:[G,H],backend:s,attrs:{axis:0}}),Y=Le({inputs:[q,K],backend:s,attrs:{axis:0}}),Q=s.data.get(X.dataId).values,Z=s.data.get(Y.dataId).values;return s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(X),s.disposeIntermediateTensorInfo(Y),{real:Q,imag:Z}}function Zt(e,t,n){const a=new Float32Array(2*t);for(let s=0;s<t;s++){let o=0,i=0;for(let a=0;a<t;a++){const c=r["backend_util"].exponent(s*a,t,n),u=r["backend_util"].getComplexWithIndex(e,a);o+=u.real*c.real-u.imag*c.imag,i+=u.real*c.imag+u.imag*c.real}n&&(o/=t,i/=t),r["backend_util"].assignToTypedArray(a,o,i,s)}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jt(e){const{inputs:t,backend:n}=e,{input:a}=t,s=r["util"].sizeFromShape(a.shape),o=a.shape[a.shape.length-1],i=s/o,c=T({inputs:{x:a},backend:n,attrs:{shape:[i,o]}}),u=Kt(c,!1,n),l=T({inputs:{x:u},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),l}const en={kernelName:r["FFT"],backendName:"cpu",kernelFunc:Jt};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tn(e){const{backend:t,attrs:n}=e,{shape:a,value:s,dtype:o}=n,i=o||r["util"].inferDtype(s),c=r["util"].getArrayFromDType(i,r["util"].sizeFromShape(a));return rn(c,s,i),t.makeTensorInfo(a,i,c)}const nn={kernelName:r["Fill"],backendName:"cpu",kernelFunc:tn};function rn(e,t,n){e.fill(t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const an={kernelName:r["FlipLeftRight"],backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,s=n,o=r["util"].getTypedArrayFromDType(a.dtype,r["util"].sizeFromShape(a.shape)),[i,c,u,l]=a.shape,d=s.data.get(a.dataId).values;for(let r=0;r<i;r++){const e=r*u*c*l;for(let t=0;t<c;t++){const n=t*(u*l);for(let r=0;r<u;r++){const a=r*l;for(let s=0;s<l;s++){const c=[i,t,r,s],p=c[2],f=Math.round(u-p),h=e+n+a+s;let m=d[h];if(f>=0&&f<u){const t=f*l,r=e+n+t+s;m=d[r]}o[h]=m}}}}const p=s.write(o,a.shape,a.dtype);return{dataId:p,shape:a.shape,dtype:a.dtype}}};var sn=n("d356");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const on=Object(m["a"])((e,t)=>Math.floor(e/t)),cn=Object(te["a"])(r["FloorDiv"],on,null,"int32"),un={kernelName:r["FloorDiv"],backendName:"cpu",kernelFunc:cn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ln(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p,activation:f,leakyreluAlpha:h}=r;let m=Be({inputs:{x:a,filter:s},backend:n,attrs:{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p}});if(o){const e=m;m=Object(j["a"])({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(f){const e=m;m=N(n,m,f,i,h),n.disposeIntermediateTensorInfo(e)}return m}const dn={kernelName:r["FusedConv2D"],backendName:"cpu",kernelFunc:ln};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p,activation:f,leakyreluAlpha:h}=r;let m=lt({inputs:{x:a,filter:s},backend:n,attrs:{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p}});if(o){const e=m;m=Object(j["a"])({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(f){const e=m;m=N(n,m,f,i,h),n.disposeIntermediateTensorInfo(e)}return m}const fn={kernelName:r["FusedDepthwiseConv2D"],backendName:"cpu",kernelFunc:pn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hn(e){const{inputs:t,backend:n}=e,{params:a,indices:s}=t,o=r["util"].sizeFromShape(a.shape),i=s.shape,c=i[i.length-1],[u,l,d,p]=r["backend_util"].prepareAndValidate(a,s);if(0===l)return n.makeTensorInfo(u,a.dtype,[]);const f=Object(r["buffer"])([l,d],a.dtype),h=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values;for(let r=0;r<l;r++){const e=[];let t=0;for(let n=0;n<c;n++){const a=h[r*c+n];t+=a*p[n],e.push(a)}if(t<0||t>=o/d)throw new Error(`Invalid indices: ${e} does not index into ${a.shape}`);for(let n=0;n<d;n++)f.values[r*d+n]=m[t*d+n]}return n.makeTensorInfo(u,f.dtype,f.values)}const mn={kernelName:r["GatherNd"],backendName:"cpu",kernelFunc:hn};var bn=n("028c");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gn(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,indices:i}=t,{axis:c,batchDims:u}=s;Object(a["a"])([o,i],"gatherV2");let l=u;null==u&&(l=0);const d=r["util"].sizeFromShape(i.shape),p=r["util"].parseAxisParam(c,o.shape)[0],f=r["backend_util"].segment_util.collectGatherOpShapeInfo(o,i,p,l),h=T({inputs:{x:o},backend:n,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),m=T({inputs:{x:i},backend:n,attrs:{shape:[f.batchSize,d/f.batchSize]}}),b=[f.batchSize,f.outerSize,d/f.batchSize,f.sliceSize],g=n.bufferSync(m),y=n.bufferSync(h),x=Object(bn["a"])(y,g,b);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(f.outputShape,x.dtype,x.values)}const yn={kernelName:r["GatherV2"],backendName:"cpu",kernelFunc:gn};var xn=n("7e7f");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const On=Object(m["a"])((e,t)=>e>=t?1:0),vn=Object(te["a"])(r["GreaterEqual"],On,null,"bool"),kn={kernelName:r["GreaterEqual"],backendName:"cpu",kernelFunc:vn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wn(e){const{inputs:t,backend:n}=e,{input:a}=t,s=r["util"].sizeFromShape(a.shape),o=a.shape[a.shape.length-1],i=s/o,c=T({inputs:{x:a},backend:n,attrs:{shape:[i,o]}}),u=Kt(c,!0,n),l=T({inputs:{x:u},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),l}const In={kernelName:r["IFFT"],backendName:"cpu",kernelFunc:wn},Nn=Object(u["a"])(r["IsFinite"],e=>Number.isFinite(e)?1:0,"bool"),jn={kernelName:r["IsFinite"],backendName:"cpu",kernelFunc:Nn},Tn=Object(u["a"])(r["IsInf"],e=>Math.abs(e)===1/0?1:0,"bool"),Sn={kernelName:r["IsInf"],backendName:"cpu",kernelFunc:Tn},Cn=Object(u["a"])(r["IsNan"],e=>Number.isNaN(e)?1:0,"bool"),En={kernelName:r["IsNan"],backendName:"cpu",kernelFunc:Cn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var $n=n("b213");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const An=Object(m["a"])((e,t)=>e<=t?1:0),Rn=Object(te["a"])(r["LessEqual"],An,null,"bool"),_n={kernelName:r["LessEqual"],backendName:"cpu",kernelFunc:Rn};var Fn=n("ef86");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dn(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,o=Object(Fn["a"])(r,a,s);return t.makeTensorInfo([o.length],"float32",o)}const Mn={kernelName:r["LinSpace"],backendName:"cpu",kernelFunc:Dn};var Ln=n("68db");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pn=Object(u["a"])(r["Log1p"],e=>Math.log1p(e)),Bn={kernelName:r["Log1p"],backendName:"cpu",kernelFunc:Pn},zn=Object(m["a"])((e,t)=>e&&t),Vn=Object(te["a"])(r["LogicalAnd"],zn,null,"bool"),Wn={kernelName:r["LogicalAnd"],backendName:"cpu",kernelFunc:Vn},Un=Object(u["a"])(r["LogicalNot"],e=>e?0:1,"bool"),Gn={kernelName:r["LogicalNot"],backendName:"cpu",kernelFunc:Un},Hn=Object(m["a"])((e,t)=>e||t),qn=Object(te["a"])(r["LogicalOr"],Hn,null,"bool"),Kn={kernelName:r["LogicalOr"],backendName:"cpu",kernelFunc:qn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xn(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{depthRadius:i,bias:c,alpha:u,beta:l}=s;Object(a["a"])(o,"LRN");const d=o.shape[3],p=d-1,f=n.data.get(o.dataId).values,h=r["util"].sizeFromShape(o.shape),m=new Float32Array(h);function b(e){const t=e%d;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,p);let a=0;for(;n<=r;n++){const e=f[n];a+=e*e}return a}for(let r=0;r<h;r++){const e=b(r),t=f[r]*Math.pow(c+u*e,-l);m[r]=t}return n.makeTensorInfo(o.shape,o.dtype,m)}const Yn={kernelName:r["LRN"],backendName:"cpu",kernelFunc:Xn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qn(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,y:i,dy:c}=t,{depthRadius:u,bias:l,alpha:d,beta:p}=s;Object(a["a"])(c,"LRNGrad");const f=r["util"].sizeFromShape(c.shape),h=c.shape[3],m=n.data.get(c.dataId).values,b=n.data.get(o.dataId).values,g=n.data.get(i.dataId).values,y=new Float32Array(f),x=f;for(let r=0;r<x;r++){const e=r%h,t=r-e+Math.max(0,e-u),n=r-e+Math.min(h,e+u+1);let a=0;for(let r=t;r<n;r++)a+=Math.pow(b[r],2);a=d*a+l;for(let s=t;s<n;s++){let e=-2*d*p*b[s]*g[r]/a;r===s&&(e+=Math.pow(a,-p)),e*=m[r],y[s]+=e}}return n.makeTensorInfo(c.shape,o.dtype,y)}const Zn={kernelName:r["LRNGrad"],backendName:"cpu",kernelFunc:Qn};var Jn=n("07b1"),er=n("1235");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tr(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{reductionIndices:i,keepDims:c}=s,u=n;let l=o.shape;const d=l.length,p=r["util"].parseAxisParam(i,l);let f=p;const h=r["backend_util"].getAxesPermutation(f,d);let m=u.data.get(o.dataId).values;if(null!=h){const e=new Array(d);for(let t=0;t<e.length;t++)e[t]=l[h[t]];m=Object(er["a"])(m,l,o.dtype,h,e),f=r["backend_util"].getInnerMostAxes(f.length,d),l=e}Object(a["a"])(o,"max"),r["backend_util"].assertAxesAreInnerMostDims("max",f,d);const[b,g]=r["backend_util"].computeOutAndReduceShapes(l,f),y=r["util"].sizeFromShape(g),x=Object(Jn["a"])(m,y,b,o.dtype),O=u.write(x,b,o.dtype);let v=b;if(c){const e=r["backend_util"].expandShapeToKeepDim(b,p);v=e}return{dataId:O,shape:v,dtype:o.dtype}}const nr={kernelName:r["Max"],backendName:"cpu",kernelFunc:tr};var rr=n("8be2");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ar(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t;Object(a["a"])(o,"maxPool");const{filterSize:i,strides:c,pad:u,dimRoundingMode:l}=s,d=1;r["util"].assert(r["backend_util"].eitherStridesOrDilationsAreOne(c,d),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${c} and dilations '${d}'`);const f=r["backend_util"].computePool2DInfo(o.shape,i,c,d,u,l);let h;if(1===f.filterWidth&&1===f.filterHeight&&r["util"].arraysEqual(f.inShape,f.outShape))h=Object(p["a"])({inputs:{x:o},backend:n});else{const e=n.data.get(o.dataId).values,t=r["util"].computeStrides(o.shape),a=ie(e,o.shape,o.dtype,t,f,"max");h=n.makeTensorInfo(f.outShape,o.dtype,a.values)}return h}const sr={kernelName:r["MaxPool"],backendName:"cpu",kernelFunc:ar};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function or(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{filterSize:i,strides:c,pad:u,dimRoundingMode:l,dataFormat:d}=s;Object(a["a"])(o,"maxPool3d");const p=r["backend_util"].computePool3DInfo(o.shape,i,c,1,u,l,d),f=n.data.get(o.dataId).values,h=ue(f,o.shape,o.dtype,r["util"].computeStrides(o.shape),p,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}const ir={kernelName:r["MaxPool3D"],backendName:"cpu",kernelFunc:or};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cr(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,input:i}=t,{filterSize:c,strides:u,pad:l,dimRoundingMode:d}=s;Object(a["a"])([o,i],"maxPool3DGrad");const p=r["backend_util"].computePool3DInfo(i.shape,c,u,1,l,d),f=n.bufferSync(i),h=le(f,p),m=p.strideDepth,b=p.strideHeight,g=p.strideWidth,y=p.dilationDepth,x=p.dilationHeight,O=p.dilationWidth,v=p.effectiveFilterDepth,k=p.effectiveFilterHeight,w=p.effectiveFilterWidth,I=v-1-p.padInfo.front,N=w-1-p.padInfo.left,j=k-1-p.padInfo.top,T=Object(r["buffer"])(i.shape,"float32"),S=n.bufferSync(o);for(let r=0;r<p.batchSize;++r)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inDepth;++t)for(let n=0;n<p.inHeight;++n)for(let a=0;a<p.inWidth;++a){const s=t-I,o=n-j,i=a-N;let c=0;for(let t=0;t<v;t+=y){const n=(s+t)/m;if(!(n<0||n>=p.outDepth||Math.floor(n)!==n))for(let a=0;a<k;a+=x){const s=(o+a)/b;if(!(s<0||s>=p.outHeight||Math.floor(s)!==s))for(let o=0;o<w;o+=O){const u=(i+o)/g;if(u<0||u>=p.outWidth||Math.floor(u)!==u)continue;const l=v*k*w-1-h.get(r,n,s,u,e),d=t*k*w+a*w+o,f=l===d?1:0;if(0===f)continue;const m=S.get(r,n,s,u,e);c+=m*f}}}T.set(c,r,t,n,a,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}const ur={kernelName:r["MaxPool3DGrad"],backendName:"cpu",kernelFunc:cr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lr(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,input:i,output:c}=t,u=i;Object(a["a"])([i,c],"maxPoolGrad");const{filterSize:l,strides:d,pad:p,dimRoundingMode:f}=s,h=r["backend_util"].computePool2DInfo(u.shape,l,d,1,p,f),m=n.data.get(u.dataId).values,b=Object(r["buffer"])(h.outShape,u.dtype,ce(m,u.shape,u.dtype,h).values),g=h.strideHeight,y=h.strideWidth,x=h.dilationHeight,O=h.dilationWidth,v=h.effectiveFilterHeight,k=h.effectiveFilterWidth,w=k-1-h.padInfo.left,I=v-1-h.padInfo.top,N=Object(r["buffer"])(u.shape,"float32"),j=n.data.get(o.dataId).values,T=Object(r["buffer"])(o.shape,"float32",j);for(let r=0;r<h.batchSize;++r)for(let e=0;e<h.inChannels;++e)for(let t=0;t<h.inHeight;++t)for(let n=0;n<h.inWidth;++n){const a=t-I,s=n-w;let o=0;for(let t=0;t<v;t+=x){const n=(a+t)/g;if(!(n<0||n>=h.outHeight||Math.floor(n)!==n))for(let a=0;a<k;a+=O){const i=(s+a)/y;if(i<0||i>=h.outWidth||Math.floor(i)!==i)continue;const c=v*k-1-b.get(r,n,i,e),u=t*k+a,l=c===u?1:0;if(0===l)continue;const d=T.get(r,n,i,e);o+=d*l}}N.set(o,r,t,n,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}const dr={kernelName:r["MaxPoolGrad"],backendName:"cpu",kernelFunc:lr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pr(e,t,n,a,s){const o=r["util"].computeStrides(t),i=ie(e,t,n,o,s,"max"),c=ce(e,t,n,s,!0,a);return[i.values,c.values]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fr={kernelName:r["MaxPoolWithArgmax"],backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:o,strides:i,pad:c,includeBatchInIndex:u}=t,l=n;Object(a["a"])(s,"MaxPoolWithArgmax");const d=l.data.get(s.dataId).values,p=r["backend_util"].computePool2DInfo(s.shape,o,i,[1,1],c),[f,h]=pr(d,s.shape,s.dtype,u,p),m=l.write(f,p.outShape,s.dtype),b=l.write(h,p.outShape,s.dtype);return[{dataId:m,shape:p.outShape,dtype:s.dtype},{dataId:b,shape:p.outShape,dtype:"int32"}]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hr(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o,keepDims:i}=a,c=r["util"].parseAxisParam(o,s.shape),u=r["backend_util"].computeOutAndReduceShapes(s.shape,c),l=u[1],d=r["util"].sizeFromShape(l),p=[],f=n.makeTensorInfo([],"float32",new Float32Array([d]));p.push(f);const h=Object(Te["a"])({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});p.push(h);const m=Gt({inputs:{a:h,b:f},backend:n});p.push(m);const b=wt({inputs:{x:m},backend:n,attrs:{axis:o,keepDims:i}});return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),b}const mr={kernelName:r["Mean"],backendName:"cpu",kernelFunc:hr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function br(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i,keepDims:c}=s;Object(a["a"])(o,"min");const u=r["util"].parseAxisParam(i,o.shape);let l=u;const d=r["backend_util"].getAxesPermutation(l,o.shape.length);let p=o;null!=d&&(p=Object(B["a"])({inputs:{x:o},backend:n,attrs:{perm:d}}),l=r["backend_util"].getInnerMostAxes(l.length,o.shape.length)),r["backend_util"].assertAxesAreInnerMostDims("min",l,p.shape.length);const[f,h]=r["backend_util"].computeOutAndReduceShapes(p.shape,l),m=r["util"].sizeFromShape(h),b=r["util"].makeZerosTypedArray(r["util"].sizeFromShape(f),p.dtype),g=n.data.get(p.dataId).values;for(let r=0;r<b.length;++r){const e=r*m;let t=g[e];for(let n=0;n<m;++n){const r=g[e+n];r<t&&(t=r)}b[r]=t}null!=d&&n.disposeIntermediateTensorInfo(p);const y=n.makeTensorInfo(f,p.dtype,b);if(c){const e=r["backend_util"].expandShapeToKeepDim(f,u),t=T({inputs:{x:y},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(y),t}return y}const gr={kernelName:r["Min"],backendName:"cpu",kernelFunc:br};var yr=n("03b5");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xr(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{paddings:i,mode:c}=s;Object(a["a"])(o,"mirrorPad");const u=i.map((e,t)=>e[0]+o.shape[t]+e[1]),l=i.map(e=>e[0]),d=i.map((e,t)=>e[0]+o.shape[t]),p="reflect"===c?0:1,f=n.data.get(o.dataId).values,h=o.shape.length,m=r["util"].computeStrides(o.shape),b=r["util"].sizeFromShape(u),g=u.length,y=r["util"].computeStrides(u),x=r["util"].getTypedArrayFromDType(o.dtype,b);for(let a=0;a<b;a++){let e=r["util"].indexToLoc(a,g,y);for(let n=0;n<g;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-p:e[n]>=d[n]&&(e[n]=2*(d[n]-1)-e[n]+p);e=e.map((e,t)=>e-l[t]);const t=r["util"].locToIndex(e,h,m);x[a]=f[t]}const O=n.write(x,u,o.dtype);return{dataId:O,shape:u,dtype:o.dtype}}const Or={kernelName:r["MirrorPad"],backendName:"cpu",kernelFunc:xr},vr=Object(m["a"])((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),kr=Object(te["a"])(r["Mod"],vr),wr={kernelName:r["Mod"],backendName:"cpu",kernelFunc:kr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ir=n("6125");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nr(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{dim:o}=a,i=s.shape.length;let c=o;if(-1===c&&(c=i-1),c!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${c}`);const u=r["util"].parseAxisParam([c],s.shape),l=tr({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),d=r["backend_util"].expandShapeToKeepDim(l.shape,u),p=T({inputs:{x:l},backend:n,attrs:{shape:d}}),f=Object(qt["a"])({inputs:{a:s,b:p},backend:n}),h=Object(Bt["a"])({inputs:{x:f},backend:n}),m=wt({inputs:{x:h},backend:n,attrs:{axis:u,keepDims:!1}}),b=T({inputs:{x:m},backend:n,attrs:{shape:d}}),g=Gt({inputs:{a:h,b:b},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),g}const jr={kernelName:r["Softmax"],backendName:"cpu",kernelFunc:Nr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tr(e){const{inputs:t,backend:n,attrs:s}=e,{logits:o}=t,{numSamples:i,seed:c,normalized:u}=s;Object(a["a"])(o,"multinomial");const l=u?o:Nr({inputs:{logits:o},backend:n,attrs:{dim:-1}}),d=l.shape[0],p=l.shape[1],f=n.data.get(l.dataId).values,h=[d,i],m=r["util"].makeZerosTypedArray(r["util"].sizeFromShape(h),"int32");for(let r=0;r<d;++r){const e=r*p,t=new Float32Array(p-1);t[0]=f[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+f[e+r];const n=Ir["alea"](c.toString()),a=r*i;for(let r=0;r<i;++r){const e=n();m[a+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){m[a+r]=n;break}}}return u||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(h,"int32",m)}const Sr={kernelName:r["Multinomial"],backendName:"cpu",kernelFunc:Tr};var Cr=n("b6e0");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Er=r["kernel_impls"].nonMaxSuppressionV3Impl;function $r(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:u}=r;Object(a["a"])(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,{selectedIndices:p}=Er(l,d,i,c,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}const Ar={kernelName:r["NonMaxSuppressionV3"],backendName:"cpu",kernelFunc:$r},Rr=r["kernel_impls"].nonMaxSuppressionV4Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _r(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:u,padToMaxOutputSize:l}=r;Object(a["a"])(s,"NonMaxSuppressionPadded");const d=n.data.get(s.dataId).values,p=n.data.get(o.dataId).values,{selectedIndices:f,validOutputs:h}=Rr(d,p,i,c,u,l);return[n.makeTensorInfo([f.length],"int32",new Int32Array(f)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}const Fr={kernelName:r["NonMaxSuppressionV4"],backendName:"cpu",kernelFunc:_r},Dr=r["kernel_impls"].nonMaxSuppressionV5Impl;
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mr(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:u,softNmsSigma:l}=r;Object(a["a"])(s,"NonMaxSuppressionWithScore");const d=n.data.get(s.dataId).values,p=n.data.get(o.dataId).values,f=i,h=c,m=u,b=l,{selectedIndices:g,selectedScores:y}=Dr(d,p,f,h,m,b);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const Lr={kernelName:r["NonMaxSuppressionV5"],backendName:"cpu",kernelFunc:Mr};var Pr=n("1faf");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Br(e){const{inputs:t,backend:n,attrs:s}=e,{indices:o}=t,{depth:i,onValue:c,offValue:u}=s;Object(a["a"])(o,"oneHot");const l=r["util"].sizeFromShape(o.shape),d=new Float32Array(l*i);d.fill(u);const p=n.data.get(o.dataId).values;for(let r=0;r<l;++r)p[r]>=0&&p[r]<i&&(d[r*i+p[r]]=c);return n.makeTensorInfo([...o.shape,i],"int32",d)}const zr={kernelName:r["OneHot"],backendName:"cpu",kernelFunc:Br};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vr(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=Object(Me["a"])({inputs:{input:r},backend:n}),t=Vr({inputs:{x:e},backend:n}),a=Fe({inputs:{input:r},backend:n}),s=Vr({inputs:{x:a},backend:n}),o=Object($e["a"])({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}return tn({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Wr={kernelName:r["ZerosLike"],backendName:"cpu",kernelFunc:Vr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ur(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const e=Object(Me["a"])({inputs:{input:r},backend:n}),t=Ur({inputs:{x:e},backend:n}),a=Fe({inputs:{input:r},backend:n}),s=Vr({inputs:{x:a},backend:n}),o=Object($e["a"])({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}return tn({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}const Gr={kernelName:r["OnesLike"],backendName:"cpu",kernelFunc:Ur};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hr(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a;if(1===t.length)return zt({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const o=t[0].shape,i=t[0].dtype;t.forEach(e=>{r["util"].assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),r["util"].assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=[],u=t.map(e=>{const t=zt({inputs:{input:e},backend:n,attrs:{dim:s}});return c.push(t),t}),l=Le({inputs:u,backend:n,attrs:{axis:s}});return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}const qr={kernelName:r["Pack"],backendName:"cpu",kernelFunc:Hr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kr(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{paddings:i,constantValue:c}=s;Object(a["a"])(o,"pad");const u=i.map((e,t)=>e[0]+o.shape[t]+e[1]),l=i.map(e=>e[0]),d=n.data.get(o.dataId).values,p=r["util"].sizeFromShape(o.shape),f=o.shape.length,h=r["util"].computeStrides(o.shape),m=r["util"].sizeFromShape(u),b=u.length,g=r["util"].computeStrides(u),y=r["util"].getTypedArrayFromDType(o.dtype,m);0!==c&&y.fill(c);for(let a=0;a<p;a++){const e=r["util"].indexToLoc(a,f,h),t=e.map((e,t)=>e+l[t]),n=r["util"].locToIndex(t,b,g);y[n]=d[a]}const x=n.write(y,u,o.dtype);return{dataId:x,shape:u,dtype:o.dtype}}const Xr={kernelName:r["PadV2"],backendName:"cpu",kernelFunc:Kr},Yr=Object(m["a"])((e,t)=>Math.pow(e,t)),Qr=Object(te["a"])(r["Pow"],Yr),Zr={kernelName:r["Pow"],backendName:"cpu",kernelFunc:Qr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Jr=n("4c9c"),ea=n("43d9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ta(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:o}=n,i=Object(ea["a"])(r,a,o,s);return t.makeTensorInfo([i.length],s,i)}const na={kernelName:r["Range"],backendName:"cpu",kernelFunc:ta},ra=Object(u["a"])(r["Reciprocal"],e=>1/e),aa={kernelName:r["Reciprocal"],backendName:"cpu",kernelFunc:ra};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sa(e){const{inputs:t,backend:n,attrs:s}=e,{images:o}=t,{alignCorners:i,halfPixelCenters:c,size:u}=s;Object(a["a"])(o,"resizeBilinear");const l=r["util"].computeStrides(o.shape),[d,p]=u,[f,h,m,b]=o.shape,g=n.data.get(o.dataId).values,y=new Float32Array(r["util"].sizeFromShape([f,d,p,b])),x=[i&&d>1?h-1:h,i&&p>1?m-1:m],O=[i&&d>1?d-1:d,i&&p>1?p-1:p];let v=0;const k=x[0]/O[0],w=x[1]/O[1];for(let r=0;r<f;r++)for(let e=0;e<d;e++){let t;t=c?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),a=t-n,s=Math.min(h-1,Math.ceil(t)),o=r*l[0]+n*l[1],i=r*l[0]+s*l[1];for(let e=0;e<p;e++){let t;t=c?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(m-1,Math.ceil(t)),u=o+n*l[2],d=i+n*l[2],p=o+s*l[2],f=i+s*l[2];for(let e=0;e<b;e++){const t=g[u+e],n=g[d+e],s=g[p+e],o=g[f+e],i=t+(s-t)*r,c=n+(o-n)*r,l=i+(c-i)*a;y[v++]=l}}}return n.makeTensorInfo([f,d,p,b],"float32",y)}const oa={kernelName:r["ResizeBilinear"],backendName:"cpu",kernelFunc:sa};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ia(e){const{inputs:t,backend:n,attrs:s}=e,{images:o,dy:i}=t,{alignCorners:c}=s;Object(a["a"])([i,o],"resizeBilinearGrad");const u=r["util"].computeStrides(o.shape),[l,d,p,f]=o.shape,[,h,m]=i.shape,b=new Float32Array(l*d*p*f),g=[c&&h>1?d-1:d,c&&m>1?p-1:p],y=[c&&h>1?h-1:h,c&&m>1?m-1:m],x=g[0]/y[0],O=g[1]/y[1],v=n.data.get(i.dataId).values;let k=0;for(let r=0;r<l;r++){const e=r*u[0];for(let t=0;t<h;t++){const n=t*x,r=Math.floor(n),a=Math.min(Math.ceil(n),d-1),s=e+r*u[1],o=e+a*u[1],i=n-r,c=1-i;for(let e=0;e<m;e++){const t=e*O,n=Math.floor(t),r=Math.min(Math.ceil(t),p-1),a=t-n,l=1-a,d=s+n*u[2],h=s+r*u[2],m=o+n*u[2],g=o+r*u[2],y=c*l,x=c*a,w=i*l,I=i*a;for(let e=0;e<f;e++){const t=v[k++];b[d+e]+=t*y,b[h+e]+=t*x,b[m+e]+=t*w,b[g+e]+=t*I}}}}return n.makeTensorInfo([l,p,d,f],"float32",b)}const ca={kernelName:r["ResizeBilinearGrad"],backendName:"cpu",kernelFunc:ia};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ua(e){const{inputs:t,backend:n,attrs:s}=e,{images:o}=t,{alignCorners:i,halfPixelCenters:c,size:u}=s;Object(a["a"])(o,"resizeNearestNeighbor");const l=r["util"].computeStrides(o.shape),[d,p]=u,[f,h,m,b]=o.shape,g=n.data.get(o.dataId).values,y=new Float32Array(f*d*p*b),x=[i&&d>1?h-1:h,i&&p>1?m-1:m],O=[i&&d>1?d-1:d,i&&p>1?p-1:p],v=x[0]/O[0],k=x[1]/O[1];let w=0;for(let r=0;r<f;r++){const e=r*l[0];for(let t=0;t<d;t++){const n=c?v*(t+.5):v*t;let r=Math.min(h-1,i?Math.round(n):Math.floor(n));c&&(r=Math.max(0,r));const a=e+r*l[1];for(let e=0;e<p;e++){const t=c?k*(e+.5):k*e;let n=Math.min(m-1,i?Math.round(t):Math.floor(t));c&&(n=Math.max(0,n));const r=a+n*l[2];for(let e=0;e<b;e++){const t=g[r+e];y[w++]=t}}}}return n.makeTensorInfo([f,d,p,b],o.dtype,y)}const la={kernelName:r["ResizeNearestNeighbor"],backendName:"cpu",kernelFunc:ua};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function da(e){const{inputs:t,backend:n,attrs:s}=e,{images:o,dy:i}=t,{alignCorners:c}=s;Object(a["a"])([i,o],"resizeNearestNeighborGrad");const u=r["util"].computeStrides(o.shape),l=r["util"].computeStrides(i.shape),[d,p,f,h]=o.shape,[,m,b]=i.shape,g=new Float32Array(d*p*f*h),y=n.data.get(i.dataId).values,x=[c&&m>1?p-1:p,c&&b>1?f-1:f],O=[c&&m>1?m-1:m,c&&b>1?b-1:b],v=x[0]/O[0],k=x[1]/O[1],w=1/v,I=1/k,N=2*Math.ceil(w)+2,j=2*Math.ceil(I)+2;for(let r=0;r<d;r++){const e=r*u[0];for(let t=0;t<p;t++){const n=e+t*u[1],r=Math.floor(t*w),a=Math.floor(r-N/2);for(let s=0;s<f;s++){const r=n+s*u[2],o=Math.floor(s*I),i=Math.floor(o-j/2);for(let n=0;n<h;n++){let o=0;for(let r=0;r<N;r++){const u=r+a;if(u<0||u>=m)continue;const d=e+u*l[1],h=u*v,g=Math.min(p-1,c?Math.round(h):Math.floor(h));if(t===g)for(let e=0;e<j;e++){const t=e+i;if(t<0||t>=b)continue;const r=d+t*l[2],a=t*k,u=Math.min(f-1,c?Math.round(a):Math.floor(a));s===u&&(o+=y[r+n])}}g[r+n]=o}}}}return n.makeTensorInfo(o.shape,o.dtype,g)}const pa={kernelName:r["ResizeNearestNeighborGrad"],backendName:"cpu",kernelFunc:da};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fa(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{dims:i}=s;Object(a["a"])(o,"reverse");const c=o.shape.length,u=r["util"].parseAxisParam(i,o.shape);if(0===c)return Object(p["a"])({inputs:{x:o},backend:n});const l=new r["TensorBuffer"](o.shape,o.dtype),d=n.bufferSync(o);for(let r=0;r<l.size;r++){const e=l.indexToLoc(r),t=e.slice();u.forEach(e=>t[e]=o.shape[e]-1-t[e]),l.set(d.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}const ha={kernelName:r["Reverse"],backendName:"cpu",kernelFunc:fa},ma={kernelName:r["RotateWithOffset"],backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:s,fillValue:o,center:i}=t,c=n,u=r["util"].getTypedArrayFromDType(a.dtype,r["util"].sizeFromShape(a.shape)),[l,d,p,f]=a.shape,[h,m]=r["backend_util"].getImageCenter(i,d,p),b=255,g=Math.sin(s),y=Math.cos(s),x=c.data.get(a.dataId).values;for(let r=0;r<l;r++){const e=r*p*d*f;for(let t=0;t<d;t++){const n=t*(p*f);for(let r=0;r<p;r++){const a=r*f;for(let s=0;s<f;s++){const i=[l,t,r,s],c=i[2],O=i[1];let v=(c-h)*y-(O-m)*g,k=(c-h)*g+(O-m)*y;v=Math.round(v+h),k=Math.round(k+m);let w=o;if("number"!==typeof o&&(w=3===s?b:o[s]),v>=0&&v<p&&k>=0&&k<d){const t=k*(p*f),n=v*f,r=e+t+n+s;w=x[r]}const I=e+n+a+s;u[I]=w}}}}const O=c.write(u,a.shape,a.dtype);return{dataId:O,shape:a.shape,dtype:a.dtype}}},ba=Object(u["a"])(r["Round"],e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),ga={kernelName:r["Round"],backendName:"cpu",kernelFunc:ba};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ya=n("c4e2");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xa(e,t,n,a,s,o,i,c,u,l){const d=[a/s,s],p=e.values,f=t.values;if(0===a)return Object(r["buffer"])(n,t.dtype);const h=Object(r["buffer"])(d,t.dtype);h.values.fill(u);for(let r=0;r<o;r++){const e=[];let o=0;for(let t=0;t<i;t++){const n=p[r*i+t];e.push(n),o+=n*c[t]}if(o<0||o>=a/s)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<s;n++)l?h.values[o*s+n]+=f[r*s+n]:h.values[o*s+n]=0===t.rank?f[0]:f[r*s+n]}return h}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oa(e){const{inputs:t,backend:n,attrs:a}=e,{indices:s,updates:o}=t,{shape:i}=a,{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:p}=r["backend_util"].calculateShapes(o,s,i),f=!0,h=n.bufferSync(s),m=n.bufferSync(o),b=xa(h,m,i,p,l,u,c,d,0,f);return n.makeTensorInfo(i,b.dtype,b.values)}const va={kernelName:r["ScatterNd"],backendName:"cpu",kernelFunc:Oa};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ka(e){const{inputs:t,backend:n}=e,{condition:s,t:o,e:i}=t;Object(a["a"])([s,o,i],"select");const c=s.shape.length,u=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values,d=n.data.get(i.dataId).values,p=Object(r["upcastType"])(o.dtype,i.dtype),f=r["util"].makeZerosTypedArray(r["util"].sizeFromShape(o.shape),p);let h=0;const m=0===c||c>1||1===o.shape.length?1:r["util"].sizeFromShape(o.shape.slice(1));for(let r=0;r<u.length;r++)for(let e=0;e<m;e++)1===u[r]?f[h++]=l[r]:f[h++]=d[r];return n.makeTensorInfo(o.shape,p,f)}const wa={kernelName:r["Select"],backendName:"cpu",kernelFunc:ka},Ia=r["backend_util"].SELU_SCALEALPHA,Na=r["backend_util"].SELU_SCALE,ja=Object(u["a"])(r["Selu"],e=>e>=0?Na*e:Ia*(Math.exp(e)-1)),Ta={kernelName:r["Selu"],backendName:"cpu",kernelFunc:ja},Sa=Object(u["a"])(r["Sign"],e=>e<0?-1:e>0?1:0),Ca={kernelName:r["Sign"],backendName:"cpu",kernelFunc:Sa},Ea=Object(u["a"])(r["Sin"],e=>Math.sin(e)),$a={kernelName:r["Sin"],backendName:"cpu",kernelFunc:Ea},Aa=Object(u["a"])(r["Sinh"],e=>Math.sinh(e)),Ra={kernelName:r["Sinh"],backendName:"cpu",kernelFunc:Aa},_a=1.1920928955078125e-7,Fa=Math.log(_a)+2,Da=Object(u["a"])(r["Softplus"],e=>{const t=e>-Fa,n=e<Fa,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a}),Ma={kernelName:r["Softplus"],backendName:"cpu",kernelFunc:Da};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function La(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{blockShape:i,paddings:c}=s;Object(a["a"])([o],"spaceToBatchND");const u=r["util"].sizeFromShape(i),l=[[0,0]];l.push(...c);for(let r=1+i.length;r<o.shape.length;++r)l.push([0,0]);const d=Xr.kernelFunc({inputs:{x:o},backend:n,attrs:{paddings:l,constantValue:0}}),p=r["backend_util"].getReshaped(d.shape,i,u,!1),f=r["backend_util"].getPermuted(p.length,i.length,!1),h=r["backend_util"].getReshapedPermuted(d.shape,i,u,!1),m={x:d},b={shape:p},g=T({inputs:m,backend:n,attrs:b}),y={x:g},x={perm:f},O=Object(B["a"])({inputs:y,backend:n,attrs:x}),v={x:O},k={shape:h},w=T({inputs:v,backend:n,attrs:k});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(O),w}const Pa={kernelName:r["SpaceToBatchND"],backendName:"cpu",kernelFunc:La};var Ba=n("1b2e");
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function za(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n        "+s.shape);if(2!==r.shape.length)throw new Error("Indices must be a matrix, saw:\n        "+r.shape);if(1!==a.shape.length)throw new Error("Values must be a vector, saw:\n        "+a.shape);if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        "+o.shape);const i=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values[0],[d,p,f,h,m]=Object(Ba["a"])(i,r.shape,r.dtype,c,a.dtype,u,l);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],a.dtype,f),n.makeTensorInfo([h.length],"bool",new Uint8Array(h.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}const Va={kernelName:r["SparseFillEmptyRows"],backendName:"cpu",kernelFunc:za};var Wa=n("31a0");
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ua(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error("Input indices should be a matrix but received shape\n        "+r.shape);if(1!==a.shape.length)throw new Error("Input shape should be a vector but received shape\n        "+a.shape);if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape "+s.shape);const o=Array.from(n.data.get(a.dataId).values),i=n.data.get(r.dataId).values,c=Array.from(n.data.get(s.dataId).values),[u,l,d]=Object(Wa["a"])(i,r.shape,r.dtype,o,c);return[n.makeTensorInfo(l,r.dtype,u),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}const Ga={kernelName:r["SparseReshape"],backendName:"cpu",kernelFunc:Ua};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ha(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:s,sparseValues:o,defaultValue:i}=t,{outputShape:c}=a,{sliceRank:u,numUpdates:l,sliceSize:d,strides:p,outputSize:f}=r["backend_util"].calculateShapes(o,s,c),h=!1,m=n.bufferSync(s),b=n.bufferSync(o),g=n.data.get(i.dataId).values[0],y=xa(m,b,c,f,d,l,u,p,g,h);return n.makeTensorInfo(c,y.dtype,y.values)}const qa={kernelName:r["SparseToDense"],backendName:"cpu",kernelFunc:Ha};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ka(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{numOrSizeSplits:o,axis:i}=a,c=r["util"].parseAxisParam(i,s.shape)[0],u=r["backend_util"].prepareSplitSize(s,o,c),l=new Array(s.shape.length).fill(0),d=s.shape.slice();return u.map(e=>{const t=[...d];t[c]=e;const r=Object(ve["a"])({inputs:{x:s},backend:n,attrs:{begin:l,size:t}});return l[c]+=e,r})}const Xa={kernelName:r["SplitV"],backendName:"cpu",kernelFunc:Ka},Ya=Object(u["a"])(r["Sqrt"],e=>Math.sqrt(e)),Qa={kernelName:r["Sqrt"],backendName:"cpu",kernelFunc:Ya},Za={kernelName:r["Square"],backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;Object(a["a"])(n,"square");const s=r.data.get(n.dataId).values,o=new Float32Array(s.length);for(let a=0;a<s.length;++a){const e=s[a];o[a]=e*e}const i=r.write(o,n.shape,n.dtype);return{dataId:i,shape:n.shape,dtype:n.dtype}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ja=n("4e1c");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const es=Object(u["a"])(r["Step"],(e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),ts={kernelName:r["Step"],backendName:"cpu",kernelFunc:es};var ns=n("e2d7");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rs(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{begin:i,end:c,strides:u,beginMask:l,endMask:d,ellipsisMask:p,newAxisMask:f,shrinkAxisMask:h}=s;Object(a["a"])(o,"stridedSlice");const{nonStrided:m,$begin:b,$strides:g,size:y,newShape:x,outShape:O}=r["slice_util"].sliceInfo(o.shape,i,c,u,l,d,p,f,h),v=T({inputs:{x:o},backend:n,attrs:{shape:x}});let k;if(m){const e=Object(ve["a"])({inputs:{x:v},backend:n,attrs:{begin:b,size:y}});k=T({inputs:{x:e},backend:n,attrs:{shape:O}}),n.disposeIntermediateTensorInfo(e)}else if(O.some(e=>0===e))k=n.makeTensorInfo(O,o.dtype,[]);else{const e=n.bufferSync(v),t=Object(ns["a"])(O,e,g,b);k=n.makeTensorInfo(t.shape,t.dtype,t.values)}const w=T({inputs:{x:k},backend:n,attrs:{shape:O}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(k),w}const as={kernelName:r["StridedSlice"],backendName:"cpu",kernelFunc:rs},ss=Object(u["a"])(r["Tan"],e=>Math.tan(e)),os={kernelName:r["Tan"],backendName:"cpu",kernelFunc:ss},is=Object(u["a"])(r["Tanh"],e=>Math.tanh(e)),cs={kernelName:r["Tanh"],backendName:"cpu",kernelFunc:is};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var us=n("0302");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ls(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:o}=r;Object(a["a"])(s,"tile");const i=Object(us["a"])(n.bufferSync(s),o);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const ds={kernelName:r["Tile"],backendName:"cpu",kernelFunc:ls};var ps=n("f11d");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fs(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:o,sorted:i}=r;Object(a["a"])(s,"topk");const c=n.data.get(s.dataId).values,[u,l]=Object(ps["a"])(c,s.shape,s.dtype,o,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}const hs={kernelName:r["TopK"],backendName:"cpu",kernelFunc:fs};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ms(e){const{inputs:t,attrs:n,backend:a}=e,{image:s,transforms:o}=t,{interpolation:i,fillMode:c,fillValue:u,outputShape:l}=n,[d,p,f,h]=s.shape,[m,b]=null!=l?l:[p,f],g=[d,m,b,h],y=r["util"].computeStrides(s.shape),x=y[0],O=y[1],v=y[2],k=r["util"].getTypedArrayFromDType(s.dtype,r["util"].sizeFromShape(g));k.fill(u);const w=a.data.get(s.dataId).values,I=a.data.get(o.dataId).values;for(let r=0;r<d;++r){const e=1===o.shape[0]?I:I.subarray(8*r,8*r+8);for(let t=0;t<m;++t)for(let n=0;n<b;++n)for(let a=0;a<h;++a){let s;const o=e[6]*n+e[7]*t+1;if(0===o)continue;const l=(e[0]*n+e[1]*t+e[2])/o,d=(e[3]*n+e[4]*t+e[5])/o,h=gs(l,f,c),m=gs(d,p,c);switch(i){case"nearest":s=ws(w,p,f,x,O,v,r,m,h,a,u);break;case"bilinear":s=Is(w,p,f,x,O,v,r,m,h,a,u);break;default:throw new Error("Error in Transform: Expect 'nearest' or 'bilinear', but got "+i)}const b=r*x+t*O+n*v+a;k[b]=s}return a.makeTensorInfo(g,s.dtype,k)}const N=a.write(k,g,s.dtype);return{dataId:N,shape:s.shape,dtype:s.dtype}}const bs={kernelName:r["Transform"],backendName:"cpu",kernelFunc:ms};function gs(e,t,n){switch(n){case"reflect":return ys(e,t);case"wrap":return xs(e,t);case"nearest":return vs(e,t);case"constant":default:return Os(e,t)}}function ys(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return r["util"].clamp(0,n,t-1)}function xs(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return r["util"].clamp(0,n,t-1)}function Os(e,t){return e}function vs(e,t){return r["util"].clamp(0,e,t-1)}function ks(e,t,n,r,a,s,o,i,c,u,l){const d=o*r+i*a+c*s+u;return 0<=i&&i<t&&0<=c&&c<n?e[d]:l}function ws(e,t,n,r,a,s,o,i,c,u,l){const d=Math.round(i),p=Math.round(c);return ks(e,t,n,r,a,s,o,d,p,u,l)}function Is(e,t,n,r,a,s,o,i,c,u,l){const d=Math.floor(i),p=Math.floor(c),f=d+1,h=p+1,m=(h-c)*ks(e,t,n,r,a,s,o,d,p,u,l)+(c-p)*ks(e,t,n,r,a,s,o,d,h,u,l),b=(h-c)*ks(e,t,n,r,a,s,o,f,p,u,l)+(c-p)*ks(e,t,n,r,a,s,o,f,h,u,l);return(f-i)*m+(i-d)*b}var Ns=n("88e9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function js(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:o}=t;Object(a["a"])(o,"unique");const i=r.data.get(o.dataId).values,{outputValues:c,outputShape:u,indices:l}=Object(Ns["a"])(i,s,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,c),r.makeTensorInfo([l.length],"int32",l)]}const Ts={kernelName:r["Unique"],backendName:"cpu",kernelFunc:js};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ss(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const o=a.shape.length,i=a.shape[s],c=new Array(o-1);let u=0;for(let f=0;f<o;f++)f!==s&&(c[u++]=a.shape[f]);const l=new Array(o).fill(0),d=a.shape.slice();d[s]=1;const p=new Array(i);for(let f=0;f<p.length;f++){l[s]=f;const e=Object(ve["a"])({inputs:{x:a},backend:n,attrs:{begin:l,size:d}});p[f]=T({inputs:{x:e},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(e)}return p}const Cs={kernelName:r["Unpack"],backendName:"cpu",kernelFunc:Ss};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Es(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,segmentIds:i}=t,{numSegments:c}=s;Object(a["a"])(o,"unsortedSegmentSum");const u=o.shape.length,l=i.shape.length,d=[],p=[],f=u-l;let h=i;for(let r=0;r<f;++r){const e=zt({inputs:{input:h},backend:n,attrs:{dim:r+1}});h=e,p.push(e)}for(let a=0;a<c;++a){const e=r["util"].createScalarValue(a,"int32"),t=n.makeTensorInfo([],"int32",e),s=Et({inputs:{a:t,b:h},backend:n}),i=Object(Te["a"])({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),c=Object(vt["a"])({inputs:{a:i,b:o},backend:n}),u=wt({inputs:{x:c},backend:n,attrs:{axis:0,keepDims:!1}});d.push(u),p.push(t),p.push(s),p.push(i),p.push(c),p.push(u)}const m=Hr({inputs:d,backend:n,attrs:{axis:0}});return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),m}const $s={kernelName:r["UnsortedSegmentSum"],backendName:"cpu",kernelFunc:Es},As=[A,R["a"],F,M,j["b"],P,V,U,H,K,Y,Z,ee,ae,oe,pe,he,be,ye,E,Oe,we,je,Te["b"],Se["a"],Ee,$e["b"],Re,Pe,We,Ge,ze,Xe,Qe,qe,Je,tt,rt,st,it,ut,dt,ft,mt,gt,yt,Ot,xt,Ht,jt,d,St,$t,Pt,Bt["b"],Vt,Wt["a"],en,nn,an,sn["a"],un,dn,fn,mn,yn,xn["a"],kn,p["b"],In,De,jn,Sn,En,h,$n["a"],_n,Mn,Ln["a"],Bn,Wn,Gn,Kn,Yn,Zn,rr["a"],sr,ir,ur,dr,fr,nr,mr,gr,yr["a"],Or,wr,Sr,vt["b"],Cr["a"],Ar,Fr,Lr,Pr["a"],zr,Gr,qr,Xr,Zr,y,Jr["a"],na,Me["b"],aa,O,k,S,oa,ca,la,pa,ha,ma,ga,ya["a"],va,wa,Ta,I,Ca,$a,Ra,ve["b"],jr,Ma,Pa,Va,Ga,qa,Xa,Qa,Za,Ja["a"],ts,as,qt["b"],It,os,cs,ds,hs,B["b"],bs,Ts,Cs,$s,Wr];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const Rs of As)Object(r["registerKernel"])(Rs);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},"8b87":function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return o}));
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=1e-7,a=1e-4;class s{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class o{refCount(e){return i("refCount")}incRef(e){return i("incRef")}timerAvailable(){return!0}time(e){return i("time")}read(e){return i("read")}readSync(e){return i("readSync")}numDataIds(){return i("numDataIds")}disposeData(e,t){return i("disposeData")}write(e,t,n){return i("write")}move(e,t,n,r,a){return i("move")}memory(){return i("memory")}floatPrecision(){return i("floatPrecision")}epsilon(){return 32===this.floatPrecision()?r:a}dispose(){return i("dispose")}}function i(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},"8bc9":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n,o,i=!1){const c=Object(s["a"])(e,"x","maxPoolWithArgmax"),u={x:c},l={filterSize:t,strides:n,pad:o,includeBatchInIndex:i},d=r["a"].runKernel(a["Nb"],u,l);return{result:d[0],indexes:d[1]}}const c=Object(o["b"])({maxPoolWithArgmax_:i})},"8be2":function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return c}));var r=n("fa11"),a=n("7d43"),s=n("bf1d");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a["a"])((e,t)=>Math.max(e,t)),i=Object(s["a"])(r["Maximum"],o),c={kernelName:r["Maximum"],backendName:"cpu",kernelFunc:i}},"8bfa":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef"),i=n("a34f");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t,n){const o=Object(s["a"])(e,"indices","scatterND","int32"),c=Object(s["a"])(t,"updates","scatterND");i["validateInput"](c,o,n);const u={indices:o,updates:c},l={shape:n};return r["a"].runKernel(a["yc"],u,l)}const u=Object(o["b"])({scatterND_:c})},"8d71":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t){const n=Object(s["a"])(e,"x","tile","string_or_numeric");o["b"](n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);const i={x:n},c={reps:t};return r["a"].runKernel(a["Wc"],i,c)}const u=Object(i["b"])({tile_:c})},"8e05":function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("deb3"),c=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e){let t=Object(s["a"])(e,"x","erf");o["b"]("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=Object(i["a"])(t,"float32"));const n={x:t};return r["a"].runKernel(a["Z"],n)}const l=Object(c["b"])({erf_:u})},9117:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t){let n=Object(o["a"])(e,"a","add"),i=Object(o["a"])(t,"b","add");[n,i]=Object(s["makeTypesMatch"])(n,i);const c={a:n,b:i};return r["a"].runKernel(a["d"],c)}const u=Object(i["b"])({add_:c})},9152:function(e,t){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
t.read=function(e,t,n,r,a){var s,o,i=8*a-r-1,c=(1<<i)-1,u=c>>1,l=-7,d=n?a-1:0,p=n?-1:1,f=e[t+d];for(d+=p,s=f&(1<<-l)-1,f>>=-l,l+=i;l>0;s=256*s+e[t+d],d+=p,l-=8);for(o=s&(1<<-l)-1,s>>=-l,l+=r;l>0;o=256*o+e[t+d],d+=p,l-=8);if(0===s)s=1-u;else{if(s===c)return o?NaN:1/0*(f?-1:1);o+=Math.pow(2,r),s-=u}return(f?-1:1)*o*Math.pow(2,s-r)},t.write=function(e,t,n,r,a,s){var o,i,c,u=8*s-a-1,l=(1<<u)-1,d=l>>1,p=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,f=r?0:s-1,h=r?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(i=isNaN(t)?1:0,o=l):(o=Math.floor(Math.log(t)/Math.LN2),t*(c=Math.pow(2,-o))<1&&(o--,c*=2),t+=o+d>=1?p/c:p*Math.pow(2,1-d),t*c>=2&&(o++,c/=2),o+d>=l?(i=0,o=l):o+d>=1?(i=(t*c-1)*Math.pow(2,a),o+=d):(i=t*Math.pow(2,d-1)*Math.pow(2,a),o=0));a>=8;e[n+f]=255&i,f+=h,i/=256,a-=8);for(o=o<<a|i,u+=a;u>0;e[n+f]=255&o,f+=h,o/=256,u-=8);e[n+f-h]|=128*m}},"917a":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","relu"),n={x:t};return r["a"].runKernel(a["nc"],n)}const c=Object(o["b"])({relu_:i})},"91a3":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n=0,o=0){const i=Object(s["a"])(e,"x","gather"),c=Object(s["a"])(t,"indices","gather","int32"),u={x:i,indices:c},l={axis:n,batchDims:o};return r["a"].runKernel(a["nb"],u,l)}const c=Object(o["b"])({gather_:i})},9277:function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return s}));var r=n("fa11");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,i=n.makeTensorInfo(r.shape,"complex64"),c=n.data.get(i.dataId);return c.complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",o)},i}const s={kernelName:r["Complex"],backendName:"cpu",kernelFunc:a}},"93b2":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e){const t=Object(a["a"])(e,"x","square"),n={};return r["a"].runKernel("Square",{x:t},n)}const i=Object(s["b"])({square_:o})},"93db":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t,n){o["b"]("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const i=Object(s["a"])(e,"x","mirrorPad");if(0===i.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");o["b"](t.length===i.rank,()=>`Padding doesn't match input. Must be ${i.rank}. Got ${t.length}.`);const c="reflect"===n?1:0;for(let r=0;r<i.rank;r++)o["b"](2===t[r].length,()=>"Invalid number of paddings. Must be length of 2 each."),o["b"](t[r][0]>=0&&t[r][0]<=i.shape[r]-c&&t[r][1]>=0&&t[r][1]<=i.shape[r]-c,()=>`Padding in dimension ${r} cannot be greater than or equal to ${i.shape[r]-c} or less than 0 for input of shape `+i.shape);const u={paddings:t,mode:n},l={x:i};return r["a"].runKernel(a["Sb"],l,u)}const u=Object(i["b"])({mirrorPad_:c})},9489:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},"960f":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("a3f7"),a=n("6ad5"),s=n("5959");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t){Object(a["d"])(e);const n=Object(r["c"])(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");const o=null;return Object(s["a"])(e,o,n,t)}},"96cf":function(e,t,n){var r=function(e){"use strict";var t,n=Object.prototype,r=n.hasOwnProperty,a="function"===typeof Symbol?Symbol:{},s=a.iterator||"@@iterator",o=a.asyncIterator||"@@asyncIterator",i=a.toStringTag||"@@toStringTag";function c(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},"")}catch(A){c=function(e,t,n){return e[t]=n}}function u(e,t,n,r){var a=t&&t.prototype instanceof b?t:b,s=Object.create(a.prototype),o=new C(r||[]);return s._invoke=N(e,n,o),s}function l(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(A){return{type:"throw",arg:A}}}e.wrap=u;var d="suspendedStart",p="suspendedYield",f="executing",h="completed",m={};function b(){}function g(){}function y(){}var x={};x[s]=function(){return this};var O=Object.getPrototypeOf,v=O&&O(O(E([])));v&&v!==n&&r.call(v,s)&&(x=v);var k=y.prototype=b.prototype=Object.create(x);function w(e){["next","throw","return"].forEach((function(t){c(e,t,(function(e){return this._invoke(t,e)}))}))}function I(e,t){function n(a,s,o,i){var c=l(e[a],e,s);if("throw"!==c.type){var u=c.arg,d=u.value;return d&&"object"===typeof d&&r.call(d,"__await")?t.resolve(d.__await).then((function(e){n("next",e,o,i)}),(function(e){n("throw",e,o,i)})):t.resolve(d).then((function(e){u.value=e,o(u)}),(function(e){return n("throw",e,o,i)}))}i(c.arg)}var a;function s(e,r){function s(){return new t((function(t,a){n(e,r,t,a)}))}return a=a?a.then(s,s):s()}this._invoke=s}function N(e,t,n){var r=d;return function(a,s){if(r===f)throw new Error("Generator is already running");if(r===h){if("throw"===a)throw s;return $()}n.method=a,n.arg=s;while(1){var o=n.delegate;if(o){var i=j(o,n);if(i){if(i===m)continue;return i}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===d)throw r=h,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=f;var c=l(e,t,n);if("normal"===c.type){if(r=n.done?h:p,c.arg===m)continue;return{value:c.arg,done:n.done}}"throw"===c.type&&(r=h,n.method="throw",n.arg=c.arg)}}}function j(e,n){var r=e.iterator[n.method];if(r===t){if(n.delegate=null,"throw"===n.method){if(e.iterator["return"]&&(n.method="return",n.arg=t,j(e,n),"throw"===n.method))return m;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return m}var a=l(r,e.iterator,n.arg);if("throw"===a.type)return n.method="throw",n.arg=a.arg,n.delegate=null,m;var s=a.arg;return s?s.done?(n[e.resultName]=s.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,m):s:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,m)}function T(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function S(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function C(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(T,this),this.reset(!0)}function E(e){if(e){var n=e[s];if(n)return n.call(e);if("function"===typeof e.next)return e;if(!isNaN(e.length)){var a=-1,o=function n(){while(++a<e.length)if(r.call(e,a))return n.value=e[a],n.done=!1,n;return n.value=t,n.done=!0,n};return o.next=o}}return{next:$}}function $(){return{value:t,done:!0}}return g.prototype=k.constructor=y,y.constructor=g,g.displayName=c(y,i,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"===typeof e&&e.constructor;return!!t&&(t===g||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,y):(e.__proto__=y,c(e,i,"GeneratorFunction")),e.prototype=Object.create(k),e},e.awrap=function(e){return{__await:e}},w(I.prototype),I.prototype[o]=function(){return this},e.AsyncIterator=I,e.async=function(t,n,r,a,s){void 0===s&&(s=Promise);var o=new I(u(t,n,r,a),s);return e.isGeneratorFunction(n)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},w(k),c(k,i,"Generator"),k[s]=function(){return this},k.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){while(t.length){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},e.values=E,C.prototype={constructor:C,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(S),!e)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0],t=e.completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function a(r,a){return i.type="throw",i.arg=e,n.next=r,a&&(n.method="next",n.arg=t),!!a}for(var s=this.tryEntries.length-1;s>=0;--s){var o=this.tryEntries[s],i=o.completion;if("root"===o.tryLoc)return a("end");if(o.tryLoc<=this.prev){var c=r.call(o,"catchLoc"),u=r.call(o,"finallyLoc");if(c&&u){if(this.prev<o.catchLoc)return a(o.catchLoc,!0);if(this.prev<o.finallyLoc)return a(o.finallyLoc)}else if(c){if(this.prev<o.catchLoc)return a(o.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return a(o.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var a=this.tryEntries[n];if(a.tryLoc<=this.prev&&r.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var s=a;break}}s&&("break"===e||"continue"===e)&&s.tryLoc<=t&&t<=s.finallyLoc&&(s=null);var o=s?s.completion:{};return o.type=e,o.arg=t,s?(this.method="next",this.next=s.finallyLoc,m):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),S(n),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var a=r.arg;S(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,r){return this.delegate={iterator:E(e),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=t),m}},e}(e.exports);try{regeneratorRuntime=r}catch(a){Function("r","regeneratorRuntime = r")(r)}},9735:function(e,t,n){"use strict";n.d(t,"c",(function(){return o})),n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return u}));var r=n("fa11"),a=n("7d43"),s=n("bf1d");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a["a"])((e,t)=>e+t),i=Object(s["b"])((e,t,n,r)=>({real:e+n,imag:t+r})),c=Object(s["a"])(r["Add"],o,i),u={kernelName:r["Add"],backendName:"cpu",kernelFunc:c}},9748:function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("deb3"),c=n("b818"),u=n("54ef"),l=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function d(e,t,n,u,d){const p=Object(s["a"])(e,"x","avgPool","float32"),f=1;o["b"](c["h"](n,f),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${f}'`);let h=p,m=!1;3===p.rank&&(m=!0,h=Object(l["a"])(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o["b"](4===h.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${h.rank}.`),null!=d&&o["b"](o["v"](u),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${d} but got pad ${u}.`);const b={x:h},g={filterSize:t,strides:n,pad:u,dimRoundingMode:d};let y=r["a"].runKernel(a["o"],b,g);return y=Object(i["a"])(y,p.dtype),m?Object(l["a"])(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const p=Object(u["b"])({avgPool_:d})},9847:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},"9e38":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","elu"),n={x:t};return r["a"].runKernel(a["W"],n)}const c=Object(o["b"])({elu_:i})},"9e7b":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}]},"9f29":function(e,t,n){"use strict";n.r(t);var r=n("7a23"),a=Object(r["O"])("data-v-df54af86");Object(r["A"])("data-v-df54af86");var s={class:"flex w-full"},o={class:"m-auto"},i={class:"mt-10"},c=Object(r["i"])("h1",{class:"text-2xl my-4"},"Tensorflow Object Detection",-1),u={class:"flex flex-wrap justify-center"},l={ref:"imgRef",src:"https://images.unsplash.com/photo-1604658768979-ca1ef26b2324?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80",width:"200",crossorigin:"anonymous"},d={class:"w-full text-center"},p={key:0},f={key:1},h={key:0};Object(r["y"])();var m=a((function(e,t,n,a,m,b){return Object(r["x"])(),Object(r["f"])("section",s,[Object(r["i"])("div",o,[Object(r["i"])("div",i,[c,Object(r["i"])("div",u,[Object(r["i"])("img",l,null,512),Object(r["i"])("div",d,[Object(r["i"])("button",{onClick:t[1]||(t[1]=function(){return a.detect&&a.detect.apply(a,arguments)}),class:"w-30 px-4 mt-2 bg-blue-600 text-white rounded"},[a.isLoading?(Object(r["x"])(),Object(r["f"])("span",p,"Loading ....")):(Object(r["x"])(),Object(r["f"])("span",f,"Detect Object"))]),a.result.length?(Object(r["x"])(),Object(r["f"])("div",h,[Object(r["i"])("p",null,Object(r["H"])(a.result[0].class),1)])):Object(r["g"])("",!0)])])])])])})),b=n("1da1");n("96cf");n("8b1d"),n("ee7d");var g=n("0cff"),y={setup:function(){var e=Object(r["C"])(""),t=Object(r["C"])([]),n=Object(r["C"])(!1),a=function(){var r=Object(b["a"])(regeneratorRuntime.mark((function r(){var a,s;return regeneratorRuntime.wrap((function(r){while(1)switch(r.prev=r.next){case 0:return a=e.value,n.value=!0,r.next=4,g.load();case 4:return s=r.sent,r.next=7,s.detect(a);case 7:t.value=r.sent,n.value=!1;case 9:case"end":return r.stop()}}),r)})));return function(){return r.apply(this,arguments)}}();return{imgRef:e,result:t,detect:a,isLoading:n}}};y.render=m,y.__scopeId="data-v-df54af86";t["default"]=y},"9fe6":function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("b818"),c=n("54ef"),u=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l(e,t,n,c,l){const d=Object(s["a"])(e,"x","maxPool"),p=1;let f=d,h=!1;3===d.rank&&(h=!0,f=Object(u["a"])(d,[1,d.shape[0],d.shape[1],d.shape[2]])),o["b"](4===f.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${f.rank}.`),o["b"](i["h"](n,p),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${p}'`),null!=l&&o["b"](o["v"](c),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${l} but got pad ${c}.`);const m={x:f},b={filterSize:t,strides:n,pad:c,dimRoundingMode:l},g=r["a"].runKernel(a["Jb"],m,b);return h?Object(u["a"])(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const d=Object(c["b"])({maxPool_:l})},"9ffd":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","softplus"),n={x:t};return r["a"].runKernel(a["Hc"],n)}const c=Object(o["b"])({softplus_:i})},a009:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t){let n=Object(o["a"])(e,"a","sub"),i=Object(o["a"])(t,"b","sub");[n,i]=Object(s["makeTypesMatch"])(n,i);const c={a:n,b:i};return r["a"].runKernel(a["Sc"],c)}const u=Object(i["b"])({sub_:c})},a09b:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","zerosLike"),n={x:t};return r["a"].runKernel(a["dd"],n)}const c=Object(o["b"])({zerosLike_:i})},a34f:function(e,t,n){"use strict";n.r(t),n.d(t,"validateUpdateShape",(function(){return a})),n.d(t,"validateInput",(function(){return s})),n.d(t,"calculateShapes",(function(){return o}));var r=n("6ad5");function a(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${t.shape}, shape: ${e}`+`, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+" Output shape length < "+(r+(n.rank-a)));if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let o=0;o<a;++o)if(n.shape[o]!==t.shape[o])throw new Error(s+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-a;++o)if(n.shape[o+a]!==e[o+r])throw new Error(s+` updates.shape[${o+a}] (${n.shape[o+a]}) != shape[${o+a}] (${e[o+a]})`)}function s(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}a(n,t,e)}function o(e,t,n){const a=t.shape.length,s=a>1?t.shape[a-1]:1,o=n.length;let i=1;for(let r=s;r<o;++r)i*=n[r];const c=s<1?1:s,u=Object(r["O"])(t.shape)/c,l=[...Object(r["j"])(n.slice(0,s)),1],d=Object(r["O"])(n);return{sliceRank:s,numUpdates:u,sliceSize:i,strides:l,outputSize:d}}},a374:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","acos"),n={x:t};return r["a"].runKernel(a["b"],n)}const c=Object(o["b"])({acos_:i})},a3f7:function(e,t,n){"use strict";n.d(t,"c",(function(){return c})),n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return p}));var r=n("6ae2"),a=n("b333"),s=n("34d7"),o=n("6ad5"),i=n("eb7e");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t){let n=e;if(Object(o["A"])(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];while(Array.isArray(n)||Object(o["A"])(n)&&"string"!==t)r.push(n.length),n=n[0];return Array.isArray(e)&&Object(a["c"])().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&u(e,r,[]),r}function u(e,t,n){if(n=n||[],!Array.isArray(e)&&!Object(o["A"])(e))return void Object(o["b"])(0===t.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);Object(o["b"])(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),Object(o["b"])(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);const r=t.slice(1);for(let a=0;a<e.length;++a)u(e[a],r,n.concat(a))}function l(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function d(e,t,n,a="numeric"){if(e instanceof s["a"])return l(a,e.dtype,t,n),e;let u=Object(o["r"])(e);if("string"!==u&&["bool","int32","float32"].indexOf(a)>=0&&(u=a),l(a,u,t,n),null==e||!Object(o["A"])(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const d=c(e,u);Object(o["A"])(e)||Array.isArray(e)||(e=[e]);const p=!0,f="string"!==u?Object(i["toTypedArray"])(e,u):Object(o["m"])(e,[],p);return r["a"].makeTensor(f,d,u)}function p(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);const a=e;return a.map((e,a)=>d(e,`${t}[${a}]`,n,r))}},a49d:function(e,t,n){var r;(function(a,s){var o,i=this,c=256,u=6,l=52,d="random",p=s.pow(c,u),f=s.pow(2,l),h=2*f,m=c-1;function b(e,t,n){var r=[];t=1==t?{entropy:!0}:t||{};var o=O(x(t.entropy?[e,k(a)]:null==e?v():e,3),r),i=new g(r),l=function(){var e=i.g(u),t=p,n=0;while(e<f)e=(e+n)*c,t*=c,n=i.g(1);while(e>=h)e/=2,t/=2,n>>>=1;return(e+n)/t};return l.int32=function(){return 0|i.g(4)},l.quick=function(){return i.g(4)/4294967296},l.double=l,O(k(i.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&y(r,i),e.state=function(){return y(i,{})}),n?(s[d]=e,t):e})(l,o,"global"in t?t.global:this==s,t.state)}function g(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];n||(e=[n++]);while(a<c)o[a]=a++;for(a=0;a<c;a++)o[a]=o[s=m&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){var t,n=0,a=r.i,s=r.j,o=r.S;while(e--)t=o[a=m&a+1],n=n*c+o[m&(o[a]=o[s=m&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(c)}function y(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function x(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(x(e[n],t-1))}catch(s){}return r.length?r:"string"==a?e:e+"\0"}function O(e,t){var n,r=e+"",a=0;while(a<r.length)t[m&a]=m&(n^=19*t[m&a])+r.charCodeAt(a++);return k(t)}function v(){try{var e;return o&&(e=o.randomBytes)?e=e(c):(e=new Uint8Array(c),(i.crypto||i.msCrypto).getRandomValues(e)),k(e)}catch(r){var t=i.navigator,n=t&&t.plugins;return[+new Date,i,n,i.screen,k(a)]}}function k(e){return String.fromCharCode.apply(0,e)}if(s["seed"+d]=b,O(s.random(),a),e.exports){e.exports=b;try{o=n(3)}catch(w){}}else r=function(){return b}.call(t,n,t,e),void 0===r||(e.exports=r)})([],Math)},a49e:function(e,t,n){(function(e){var r;(function(e,a,s){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function c(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n("07d6")&&n("3c35")?(r=function(){return c}.call(t,n,t,a),void 0===r||(a.exports=r)):this.xorwow=c})(0,e,n("07d6"))}).call(this,n("62e4")(e))},a5aa:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t){let n=Object(o["a"])(e,"a","mul"),i=Object(o["a"])(t,"b","mul");[n,i]=Object(s["makeTypesMatch"])(n,i);const c={a:n,b:i};return r["a"].runKernel(a["Vb"],c)}const u=Object(i["b"])({mul_:c})},a780:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("0280"),a=n("a3f7");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function s(e){const t=Object(a["a"])(e,"condition","whereAsync","bool"),n=await t.data(),s=Object(r["a"])(t.shape,n);return e!==t&&t.dispose(),s}const o=s},a80f:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},ab98:function(e,t,n){"use strict";n.r(t);var r=n("8661");n.d(t,"simpleAbsImpl",(function(){return r["b"]}));var a=n("9735");n.d(t,"addImpl",(function(){return a["c"]}));var s=n("1aa1");n.d(t,"bincountImpl",(function(){return s["a"]})),n.d(t,"bincountReduceImpl",(function(){return s["b"]}));var o=n("4681");n.d(t,"ceilImpl",(function(){return o["b"]}));var i=n("c003");n.d(t,"concatImpl",(function(){return i["a"]}));var c=n("fb0c");n.d(t,"expImpl",(function(){return c["c"]}));var u=n("bd61");n.d(t,"expm1Impl",(function(){return u["b"]}));var l=n("d356");n.d(t,"floorImpl",(function(){return l["b"]}));var d=n("028c");n.d(t,"gatherV2Impl",(function(){return d["a"]}));var p=n("7e7f");n.d(t,"greaterImpl",(function(){return p["b"]}));var f=n("b213");n.d(t,"lessImpl",(function(){return f["b"]}));var h=n("ef86");n.d(t,"linSpaceImpl",(function(){return h["a"]}));var m=n("68db");n.d(t,"logImpl",(function(){return m["b"]}));var b=n("07b1");n.d(t,"maxImpl",(function(){return b["a"]}));var g=n("8be2");n.d(t,"maximumImpl",(function(){return g["b"]}));var y=n("03b5");n.d(t,"minimumImpl",(function(){return y["b"]}));var x=n("72c4");n.d(t,"multiplyImpl",(function(){return x["c"]}));var O=n("b6e0");n.d(t,"negImpl",(function(){return O["b"]}));var v=n("1faf");n.d(t,"notEqualImpl",(function(){return v["b"]}));var k=n("4c9c");n.d(t,"prodImpl",(function(){return k["b"]}));var w=n("43d9");n.d(t,"rangeImpl",(function(){return w["a"]}));var I=n("c4e2");n.d(t,"rsqrtImpl",(function(){return I["b"]}));var N=n("235d");n.d(t,"sliceImpl",(function(){return N["c"]}));var j=n("1b2e");n.d(t,"sparseFillEmptyRowsImpl",(function(){return j["a"]}));var T=n("31a0");n.d(t,"sparseReshapeImpl",(function(){return T["a"]}));var S=n("4e1c");n.d(t,"squaredDifferenceImpl",(function(){return S["b"]}));var C=n("e2d7");n.d(t,"stridedSliceImpl",(function(){return C["a"]}));var E=n("52f6");n.d(t,"subImpl",(function(){return E["c"]}));var $=n("0302");n.d(t,"tileImpl",(function(){return $["a"]}));var A=n("f11d");n.d(t,"topKImpl",(function(){return A["a"]}));var R=n("1235");n.d(t,"transposeImpl",(function(){return R["a"]}));var _=n("88e9");n.d(t,"uniqueImpl",(function(){return _["a"]}))},ae6d:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=null,n=!1){const o=Object(s["a"])(e,"x","min"),i={x:o},c={axis:t,keepDims:n};return r["a"].runKernel(a["Qb"],i,c)}const c=Object(o["b"])({min_:i})},aeab:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},b213:function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return c}));var r=n("fa11"),a=n("7d43"),s=n("bf1d");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a["a"])((e,t)=>e<t?1:0),i=Object(s["a"])(r["Less"],o,null,"bool"),c={kernelName:r["Less"],backendName:"cpu",kernelFunc:i}},b21c:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("526f"),c=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){let n=Object(o["a"])(e,"a","lessEqual"),c=Object(o["a"])(t,"b","lessEqual");[n,c]=Object(s["makeTypesMatch"])(n,c),Object(i["a"])(n.shape,c.shape);const u={a:n,b:c};return r["a"].runKernel(a["Ab"],u)}const l=Object(c["b"])({lessEqual_:u})},b333:function(e,t,n){"use strict";n.d(t,"b",(function(){return s})),n.d(t,"c",(function(){return u})),n.d(t,"a",(function(){return l})),n.d(t,"d",(function(){return d}));var r=n("6ad5");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a="tfjsflags";class s{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=o,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Object(r["x"])(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(a in e){const t=e[a].split(",");t.forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=c(t,n)})}}}function o(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(i(t,n[0],n[1]),n.join("="))),t}function i(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function c(e,t){if(t=t.toLowerCase(),"true"===t||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function u(){return l}let l=null;function d(e){l=e}},b39e:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","selu"),n={x:t};return r["a"].runKernel(a["Ac"],n)}const c=Object(o["b"])({selu_:i})},b500:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","reciprocal"),n={x:t};return r["a"].runKernel(a["mc"],n)}const c=Object(o["b"])({reciprocal_:i})},b61d:function(e,t,n){"use strict";n.d(t,"a",(function(){return b}));var r=n("6ad5"),a=n("0777"),s=n("649e"),o=n("24b0"),i=n("54ef"),c=n("d7b0"),u=n("35c9"),l=n("6d3c"),d=n("45bb"),p=n("5a2c"),f=n("a09b"),h=n("1ab7");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function m(e,t){Object(r["b"])("float32"===e.dtype,()=>"The dtype for rfft() must be real value but got "+e.dtype);let n=e.shape[e.shape.length-1];const i=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map(e=>0),a=e.shape.map(e=>e);a[e.shape.length-1]=t,m=Object(l["a"])(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,m=Object(s["a"])([e,Object(p["a"])(r)],e.shape.length-1),n=t}else m=e;const b=Object(f["a"])(m),g=Object(u["a"])(Object(a["a"])(m,b),[i,n]),y=Object(h["a"])(g),x=Math.floor(n/2)+1,O=Object(c["a"])(y),v=Object(o["a"])(y),k=Object(d["a"])(O,[x,n-x],O.shape.length-1),w=Object(d["a"])(v,[x,n-x],v.shape.length-1),I=m.shape.slice();return I[m.shape.length-1]=x,Object(u["a"])(Object(a["a"])(k[0],w[0]),I)}const b=Object(i["b"])({rfft_:m})},b639:function(e,t,n){"use strict";(function(e){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
var r=n("1fb5"),a=n("9152"),s=n("e3db");function o(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"===typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(t){return!1}}function i(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function c(e,t){if(i()<t)throw new RangeError("Invalid typed array length");return u.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t),e.__proto__=u.prototype):(null===e&&(e=new u(t)),e.length=t),e}function u(e,t,n){if(!u.TYPED_ARRAY_SUPPORT&&!(this instanceof u))return new u(e,t,n);if("number"===typeof e){if("string"===typeof t)throw new Error("If encoding is specified then the first argument must be a string");return f(this,e)}return l(this,e,t,n)}function l(e,t,n,r){if("number"===typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!==typeof ArrayBuffer&&t instanceof ArrayBuffer?b(e,t,n,r):"string"===typeof t?h(e,t,n):g(e,t)}function d(e){if("number"!==typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function p(e,t,n,r){return d(t),t<=0?c(e,t):void 0!==n?"string"===typeof r?c(e,t).fill(n,r):c(e,t).fill(n):c(e,t)}function f(e,t){if(d(t),e=c(e,t<0?0:0|y(t)),!u.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function h(e,t,n){if("string"===typeof n&&""!==n||(n="utf8"),!u.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|O(t,n);e=c(e,r);var a=e.write(t,n);return a!==r&&(e=e.slice(0,a)),e}function m(e,t){var n=t.length<0?0:0|y(t.length);e=c(e,n);for(var r=0;r<n;r+=1)e[r]=255&t[r];return e}function b(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");return t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r),u.TYPED_ARRAY_SUPPORT?(e=t,e.__proto__=u.prototype):e=m(e,t),e}function g(e,t){if(u.isBuffer(t)){var n=0|y(t.length);return e=c(e,n),0===e.length?e:(t.copy(e,0,0,n),e)}if(t){if("undefined"!==typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!==typeof t.length||te(t.length)?c(e,0):m(e,t);if("Buffer"===t.type&&s(t.data))return m(e,t.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}function y(e){if(e>=i())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i().toString(16)+" bytes");return 0|e}function x(e){return+e!=e&&(e=0),u.alloc(+e)}function O(e,t){if(u.isBuffer(e))return e.length;if("undefined"!==typeof ArrayBuffer&&"function"===typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!==typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return Y(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return J(e).length;default:if(r)return Y(e).length;t=(""+t).toLowerCase(),r=!0}}function v(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if(n>>>=0,t>>>=0,n<=t)return"";e||(e="utf8");while(1)switch(e){case"hex":return M(this,t,n);case"utf8":case"utf-8":return A(this,t,n);case"ascii":return F(this,t,n);case"latin1":case"binary":return D(this,t,n);case"base64":return $(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return L(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function k(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function w(e,t,n,r,a){if(0===e.length)return-1;if("string"===typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=a?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(a)return-1;n=e.length-1}else if(n<0){if(!a)return-1;n=0}if("string"===typeof t&&(t=u.from(t,r)),u.isBuffer(t))return 0===t.length?-1:I(e,t,n,r,a);if("number"===typeof t)return t&=255,u.TYPED_ARRAY_SUPPORT&&"function"===typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):I(e,[t],n,r,a);throw new TypeError("val must be string, number or Buffer")}function I(e,t,n,r,a){var s,o=1,i=e.length,c=t.length;if(void 0!==r&&(r=String(r).toLowerCase(),"ucs2"===r||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;o=2,i/=2,c/=2,n/=2}function u(e,t){return 1===o?e[t]:e.readUInt16BE(t*o)}if(a){var l=-1;for(s=n;s<i;s++)if(u(e,s)===u(t,-1===l?0:s-l)){if(-1===l&&(l=s),s-l+1===c)return l*o}else-1!==l&&(s-=s-l),l=-1}else for(n+c>i&&(n=i-c),s=n;s>=0;s--){for(var d=!0,p=0;p<c;p++)if(u(e,s+p)!==u(t,p)){d=!1;break}if(d)return s}return-1}function N(e,t,n,r){n=Number(n)||0;var a=e.length-n;r?(r=Number(r),r>a&&(r=a)):r=a;var s=t.length;if(s%2!==0)throw new TypeError("Invalid hex string");r>s/2&&(r=s/2);for(var o=0;o<r;++o){var i=parseInt(t.substr(2*o,2),16);if(isNaN(i))return o;e[n+o]=i}return o}function j(e,t,n,r){return ee(Y(t,e.length-n),e,n,r)}function T(e,t,n,r){return ee(Q(t),e,n,r)}function S(e,t,n,r){return T(e,t,n,r)}function C(e,t,n,r){return ee(J(t),e,n,r)}function E(e,t,n,r){return ee(Z(t,e.length-n),e,n,r)}function $(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function A(e,t,n){n=Math.min(e.length,n);var r=[],a=t;while(a<n){var s,o,i,c,u=e[a],l=null,d=u>239?4:u>223?3:u>191?2:1;if(a+d<=n)switch(d){case 1:u<128&&(l=u);break;case 2:s=e[a+1],128===(192&s)&&(c=(31&u)<<6|63&s,c>127&&(l=c));break;case 3:s=e[a+1],o=e[a+2],128===(192&s)&&128===(192&o)&&(c=(15&u)<<12|(63&s)<<6|63&o,c>2047&&(c<55296||c>57343)&&(l=c));break;case 4:s=e[a+1],o=e[a+2],i=e[a+3],128===(192&s)&&128===(192&o)&&128===(192&i)&&(c=(15&u)<<18|(63&s)<<12|(63&o)<<6|63&i,c>65535&&c<1114112&&(l=c))}null===l?(l=65533,d=1):l>65535&&(l-=65536,r.push(l>>>10&1023|55296),l=56320|1023&l),r.push(l),a+=d}return _(r)}t.Buffer=u,t.SlowBuffer=x,t.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:o(),t.kMaxLength=i(),u.poolSize=8192,u._augment=function(e){return e.__proto__=u.prototype,e},u.from=function(e,t,n){return l(null,e,t,n)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,"undefined"!==typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(e,t,n){return p(null,e,t,n)},u.allocUnsafe=function(e){return f(null,e)},u.allocUnsafeSlow=function(e){return f(null,e)},u.isBuffer=function(e){return!(null==e||!e._isBuffer)},u.compare=function(e,t){if(!u.isBuffer(e)||!u.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,r=t.length,a=0,s=Math.min(n,r);a<s;++a)if(e[a]!==t[a]){n=e[a],r=t[a];break}return n<r?-1:r<n?1:0},u.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(e,t){if(!s(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return u.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=u.allocUnsafe(t),a=0;for(n=0;n<e.length;++n){var o=e[n];if(!u.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(r,a),a+=o.length}return r},u.byteLength=O,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var e=this.length;if(e%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)k(this,t,t+1);return this},u.prototype.swap32=function(){var e=this.length;if(e%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)k(this,t,t+3),k(this,t+1,t+2);return this},u.prototype.swap64=function(){var e=this.length;if(e%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)k(this,t,t+7),k(this,t+1,t+6),k(this,t+2,t+5),k(this,t+3,t+4);return this},u.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?A(this,0,e):v.apply(this,arguments)},u.prototype.equals=function(e){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===u.compare(this,e)},u.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},u.prototype.compare=function(e,t,n,r,a){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),t<0||n>e.length||r<0||a>this.length)throw new RangeError("out of range index");if(r>=a&&t>=n)return 0;if(r>=a)return-1;if(t>=n)return 1;if(t>>>=0,n>>>=0,r>>>=0,a>>>=0,this===e)return 0;for(var s=a-r,o=n-t,i=Math.min(s,o),c=this.slice(r,a),l=e.slice(t,n),d=0;d<i;++d)if(c[d]!==l[d]){s=c[d],o=l[d];break}return s<o?-1:o<s?1:0},u.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},u.prototype.indexOf=function(e,t,n){return w(this,e,t,n,!0)},u.prototype.lastIndexOf=function(e,t,n){return w(this,e,t,n,!1)},u.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"===typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var a=this.length-t;if((void 0===n||n>a)&&(n=a),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var s=!1;;)switch(r){case"hex":return N(this,e,t,n);case"utf8":case"utf-8":return j(this,e,t,n);case"ascii":return T(this,e,t,n);case"latin1":case"binary":return S(this,e,t,n);case"base64":return C(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return E(this,e,t,n);default:if(s)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),s=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var R=4096;function _(e){var t=e.length;if(t<=R)return String.fromCharCode.apply(String,e);var n="",r=0;while(r<t)n+=String.fromCharCode.apply(String,e.slice(r,r+=R));return n}function F(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(127&e[a]);return r}function D(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(e[a]);return r}function M(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var a="",s=t;s<n;++s)a+=X(e[s]);return a}function L(e,t,n){for(var r=e.slice(t,n),a="",s=0;s<r.length;s+=2)a+=String.fromCharCode(r[s]+256*r[s+1]);return a}function P(e,t,n){if(e%1!==0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function B(e,t,n,r,a,s){if(!u.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>a||t<s)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function z(e,t,n,r){t<0&&(t=65535+t+1);for(var a=0,s=Math.min(e.length-n,2);a<s;++a)e[n+a]=(t&255<<8*(r?a:1-a))>>>8*(r?a:1-a)}function V(e,t,n,r){t<0&&(t=4294967295+t+1);for(var a=0,s=Math.min(e.length-n,4);a<s;++a)e[n+a]=t>>>8*(r?a:3-a)&255}function W(e,t,n,r,a,s){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function U(e,t,n,r,s){return s||W(e,t,n,4,34028234663852886e22,-34028234663852886e22),a.write(e,t,n,r,23,4),n+4}function G(e,t,n,r,s){return s||W(e,t,n,8,17976931348623157e292,-17976931348623157e292),a.write(e,t,n,r,52,8),n+8}u.prototype.slice=function(e,t){var n,r=this.length;if(e=~~e,t=void 0===t?r:~~t,e<0?(e+=r,e<0&&(e=0)):e>r&&(e=r),t<0?(t+=r,t<0&&(t=0)):t>r&&(t=r),t<e&&(t=e),u.TYPED_ARRAY_SUPPORT)n=this.subarray(e,t),n.__proto__=u.prototype;else{var a=t-e;n=new u(a,void 0);for(var s=0;s<a;++s)n[s]=this[s+e]}return n},u.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||P(e,t,this.length);var r=this[e],a=1,s=0;while(++s<t&&(a*=256))r+=this[e+s]*a;return r},u.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||P(e,t,this.length);var r=this[e+--t],a=1;while(t>0&&(a*=256))r+=this[e+--t]*a;return r},u.prototype.readUInt8=function(e,t){return t||P(e,1,this.length),this[e]},u.prototype.readUInt16LE=function(e,t){return t||P(e,2,this.length),this[e]|this[e+1]<<8},u.prototype.readUInt16BE=function(e,t){return t||P(e,2,this.length),this[e]<<8|this[e+1]},u.prototype.readUInt32LE=function(e,t){return t||P(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},u.prototype.readUInt32BE=function(e,t){return t||P(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},u.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||P(e,t,this.length);var r=this[e],a=1,s=0;while(++s<t&&(a*=256))r+=this[e+s]*a;return a*=128,r>=a&&(r-=Math.pow(2,8*t)),r},u.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||P(e,t,this.length);var r=t,a=1,s=this[e+--r];while(r>0&&(a*=256))s+=this[e+--r]*a;return a*=128,s>=a&&(s-=Math.pow(2,8*t)),s},u.prototype.readInt8=function(e,t){return t||P(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},u.prototype.readInt16LE=function(e,t){t||P(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt16BE=function(e,t){t||P(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt32LE=function(e,t){return t||P(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},u.prototype.readInt32BE=function(e,t){return t||P(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},u.prototype.readFloatLE=function(e,t){return t||P(e,4,this.length),a.read(this,e,!0,23,4)},u.prototype.readFloatBE=function(e,t){return t||P(e,4,this.length),a.read(this,e,!1,23,4)},u.prototype.readDoubleLE=function(e,t){return t||P(e,8,this.length),a.read(this,e,!0,52,8)},u.prototype.readDoubleBE=function(e,t){return t||P(e,8,this.length),a.read(this,e,!1,52,8)},u.prototype.writeUIntLE=function(e,t,n,r){if(e=+e,t|=0,n|=0,!r){var a=Math.pow(2,8*n)-1;B(this,e,t,n,a,0)}var s=1,o=0;this[t]=255&e;while(++o<n&&(s*=256))this[t+o]=e/s&255;return t+n},u.prototype.writeUIntBE=function(e,t,n,r){if(e=+e,t|=0,n|=0,!r){var a=Math.pow(2,8*n)-1;B(this,e,t,n,a,0)}var s=n-1,o=1;this[t+s]=255&e;while(--s>=0&&(o*=256))this[t+s]=e/o&255;return t+n},u.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,1,255,0),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},u.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):z(this,e,t,!0),t+2},u.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):z(this,e,t,!1),t+2},u.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):V(this,e,t,!0),t+4},u.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):V(this,e,t,!1),t+4},u.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);B(this,e,t,n,a-1,-a)}var s=0,o=1,i=0;this[t]=255&e;while(++s<n&&(o*=256))e<0&&0===i&&0!==this[t+s-1]&&(i=1),this[t+s]=(e/o>>0)-i&255;return t+n},u.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);B(this,e,t,n,a-1,-a)}var s=n-1,o=1,i=0;this[t+s]=255&e;while(--s>=0&&(o*=256))e<0&&0===i&&0!==this[t+s+1]&&(i=1),this[t+s]=(e/o>>0)-i&255;return t+n},u.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,1,127,-128),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},u.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):z(this,e,t,!0),t+2},u.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):z(this,e,t,!1),t+2},u.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):V(this,e,t,!0),t+4},u.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):V(this,e,t,!1),t+4},u.prototype.writeFloatLE=function(e,t,n){return U(this,e,t,!0,n)},u.prototype.writeFloatBE=function(e,t,n){return U(this,e,t,!1,n)},u.prototype.writeDoubleLE=function(e,t,n){return G(this,e,t,!0,n)},u.prototype.writeDoubleBE=function(e,t,n){return G(this,e,t,!1,n)},u.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var a,s=r-n;if(this===e&&n<t&&t<r)for(a=s-1;a>=0;--a)e[a+t]=this[a+n];else if(s<1e3||!u.TYPED_ARRAY_SUPPORT)for(a=0;a<s;++a)e[a+t]=this[a+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+s),t);return s},u.prototype.fill=function(e,t,n,r){if("string"===typeof e){if("string"===typeof t?(r=t,t=0,n=this.length):"string"===typeof n&&(r=n,n=this.length),1===e.length){var a=e.charCodeAt(0);a<256&&(e=a)}if(void 0!==r&&"string"!==typeof r)throw new TypeError("encoding must be a string");if("string"===typeof r&&!u.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"===typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var s;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"===typeof e)for(s=t;s<n;++s)this[s]=e;else{var o=u.isBuffer(e)?e:Y(new u(e,r).toString()),i=o.length;for(s=0;s<n-t;++s)this[s+t]=o[s%i]}return this};var H=/[^+\/0-9A-Za-z-_]/g;function q(e){if(e=K(e).replace(H,""),e.length<2)return"";while(e.length%4!==0)e+="=";return e}function K(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}function X(e){return e<16?"0"+e.toString(16):e.toString(16)}function Y(e,t){var n;t=t||1/0;for(var r=e.length,a=null,s=[],o=0;o<r;++o){if(n=e.charCodeAt(o),n>55295&&n<57344){if(!a){if(n>56319){(t-=3)>-1&&s.push(239,191,189);continue}if(o+1===r){(t-=3)>-1&&s.push(239,191,189);continue}a=n;continue}if(n<56320){(t-=3)>-1&&s.push(239,191,189),a=n;continue}n=65536+(a-55296<<10|n-56320)}else a&&(t-=3)>-1&&s.push(239,191,189);if(a=null,n<128){if((t-=1)<0)break;s.push(n)}else if(n<2048){if((t-=2)<0)break;s.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;s.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;s.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return s}function Q(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}function Z(e,t){for(var n,r,a,s=[],o=0;o<e.length;++o){if((t-=2)<0)break;n=e.charCodeAt(o),r=n>>8,a=n%256,s.push(a),s.push(r)}return s}function J(e){return r.toByteArray(q(e))}function ee(e,t,n,r){for(var a=0;a<r;++a){if(a+n>=t.length||a>=e.length)break;t[a+n]=e[a]}return a}function te(e){return e!==e}}).call(this,n("c8ba"))},b6e0:function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return c}));var r=n("fa11"),a=n("cedd"),s=n("72c4");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t,n){const a=r["util"].createScalarValue(-1,n);return Object(s["c"])([],t,a,e,n)}function i(e){const{inputs:t,backend:n}=e,{x:r}=t;Object(a["a"])(r,"neg");const s=n.data.get(r.dataId).values,[i,c]=o(s,r.shape,r.dtype);return n.makeTensorInfo(c,r.dtype,i)}const c={kernelName:r["Neg"],backendName:"cpu",kernelFunc:i}},b818:function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e,t,n,r,a="NHWC",s){const i=e[3],c=[...t,i],u=x(a);return o(e,c,n,s,r,null,null,u)}function a(e,t,n,r,a,s,i="channelsLast"){const[c,u]=d(t);let l;if("channelsLast"===i)l=[c,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);l=[c,u,e[1],e[1]]}return o(e,l,n,r,a,s,!1,i)}function s(e,t,n,r,a,s,o="NDHWC"){const[c,u,l]=p(t);let d,f;if("NDHWC"===o)f="channelsLast",d=[c,u,l,e[4],e[4]];else{if("NCDHW"!==o)throw new Error("Unknown dataFormat "+o);f="channelsFirst",d=[c,u,l,e[1],e[1]]}return i(e,d,n,r,a,!1,f,s)}function o(e,t,n,r,a,s,o=!1,i="channelsLast"){let[c,u,l,p]=[-1,-1,-1,-1];if("channelsLast"===i)[c,u,l,p]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[c,p,u,l]=e}const[m,b,,g]=t,[y,x]=d(n),[O,v]=d(r),k=f(m,O),w=f(b,v),{padInfo:I,outHeight:N,outWidth:j}=h(a,u,l,y,x,k,w,s,i),T=o?g*p:g;let S;return"channelsFirst"===i?S=[c,T,N,j]:"channelsLast"===i&&(S=[c,N,j,T]),{batchSize:c,dataFormat:i,inHeight:u,inWidth:l,inChannels:p,outHeight:N,outWidth:j,outChannels:T,padInfo:I,strideHeight:y,strideWidth:x,filterHeight:m,filterWidth:b,effectiveFilterHeight:k,effectiveFilterWidth:w,dilationHeight:O,dilationWidth:v,inShape:e,outShape:S,filterShape:t}}function i(e,t,n,r,a,s=!1,o="channelsLast",i){let[c,u,l,d,h]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[c,u,l,d,h]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[c,h,u,l,d]=e}const[b,g,y,,x]=t,[O,v,k]=p(n),[w,I,N]=p(r),j=f(b,w),T=f(g,I),S=f(y,N),{padInfo:C,outDepth:E,outHeight:$,outWidth:A}=m(a,u,l,d,O,v,k,j,T,S,i),R=s?x*h:x;let _;return"channelsFirst"===o?_=[c,R,E,$,A]:"channelsLast"===o&&(_=[c,E,$,A,R]),{batchSize:c,dataFormat:o,inDepth:u,inHeight:l,inWidth:d,inChannels:h,outDepth:E,outHeight:$,outWidth:A,outChannels:R,padInfo:C,strideDepth:O,strideHeight:v,strideWidth:k,filterDepth:b,filterHeight:g,filterWidth:y,effectiveFilterDepth:j,effectiveFilterHeight:T,effectiveFilterWidth:S,dilationDepth:w,dilationHeight:I,dilationWidth:N,inShape:e,outShape:_,filterShape:t}}function c(e,t,n,r,a){null==r&&(r=l(e,t,n));const s=e[0],o=e[1],i=b((s-t+2*r)/n+1,a),c=b((o-t+2*r)/n+1,a);return[i,c]}function u(e,t,n,r,a,s){null==a&&(a=l(e,t,r));const o=e[0],i=e[1],c=e[2],u=b((o-t+2*a)/r+1,s),d=b((i-t+2*a)/r+1,s),p=b((c-t+2*a)/r+1,s);return[u,d,p,n]}function l(e,t,n,r=1){const a=f(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function d(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function p(e){return"number"===typeof e?[e,e,e]:e}function f(e,t){return t<=1?e:e+(e-1)*(t-1)}function h(e,t,n,r,a,s,o,i,u){let l,d,p;if("number"===typeof e){const a=0===e?"VALID":"NUMBER";l={top:e,bottom:e,left:e,right:e,type:a};const o=c([t,n],s,r,e,i);d=o[0],p=o[1]}else if("same"===e){d=Math.ceil(t/r),p=Math.ceil(n/a);const e=Math.max(0,(d-1)*r+s-t),i=Math.max(0,(p-1)*a+o-n),c=Math.floor(e/2),u=e-c,f=Math.floor(i/2),h=i-f;l={top:c,bottom:u,left:f,right:h,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),p=Math.ceil((n-o+1)/a);else{if("object"!==typeof e)throw Error("Unknown padding parameter: "+e);{const c="channelsLast"===u?e[1][0]:e[2][0],f="channelsLast"===u?e[1][1]:e[2][1],h="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1],g=0===c&&0===f&&0===h&&0===m?"VALID":"EXPLICIT";l={top:c,bottom:f,left:h,right:m,type:g},d=b((t-s+c+f)/r+1,i),p=b((n-o+h+m)/a+1,i)}}return{padInfo:l,outHeight:d,outWidth:p}}function m(e,t,n,r,a,s,o,i,c,l,d){let p,f,h,m;if("number"===typeof e){const s=0===e?"VALID":"NUMBER";p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:s};const o=u([t,n,r,1],i,1,a,e,d);f=o[0],h=o[1],m=o[2]}else if("same"===e){f=Math.ceil(t/a),h=Math.ceil(n/s),m=Math.ceil(r/o);const e=(f-1)*a+i-t,u=(h-1)*s+c-n,d=(m-1)*o+l-r,b=Math.floor(e/2),g=e-b,y=Math.floor(u/2),x=u-y,O=Math.floor(d/2),v=d-O;p={top:y,bottom:x,left:O,right:v,front:b,back:g,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((t-i+1)/a),h=Math.ceil((n-c+1)/s),m=Math.ceil((r-l+1)/o)}return{padInfo:p,outDepth:f,outHeight:h,outWidth:m}}function b(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function g(e){const[t,n,r]=d(e);return 1===t&&1===n&&1===r}function y(e,t){return g(e)||g(t)}function x(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}n.d(t,"d",(function(){return r})),n.d(t,"e",(function(){return a})),n.d(t,"f",(function(){return s})),n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return i})),n.d(t,"c",(function(){return l})),n.d(t,"i",(function(){return g})),n.d(t,"h",(function(){return y})),n.d(t,"g",(function(){return x}))},b838:function(e,t,n){(function(e){var r;(function(e,a,s){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function c(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n("07d6")&&n("3c35")?(r=function(){return c}.call(t,n,t,a),void 0===r||(a.exports=r)):this.xor128=c})(0,e,n("07d6"))}).call(this,n("62e4")(e))},b9b9:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("526f"),c=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){let n=Object(o["a"])(e,"a","equal"),c=Object(o["a"])(t,"b","equal");[n,c]=Object(s["makeTypesMatch"])(n,c),Object(i["a"])(n.shape,c.shape);const u={a:n,b:c};return r["a"].runKernel(a["Y"],u)}const l=Object(c["b"])({equal_:u})},ba40:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t){const n=Object(s["a"])(t,"indices","gatherND","int32"),o=Object(s["a"])(e,"x","gatherND"),i={params:o,indices:n};return r["a"].runKernel(a["mb"],i)}const c=Object(o["b"])({gatherND_:i})},ba53:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("deb3"),c=n("54ef"),u=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l(e,t,n,c,l,d="NDHWC"){const p=Object(s["a"])(e,"x","avgPool3d","float32");let f=p,h=!1;4===p.rank&&(h=!0,f=Object(u["a"])(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),o["b"](5===f.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${f.rank}.`),o["b"]("NDHWC"===d,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+d),null!=l&&o["b"](o["v"](c),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${l} but got pad ${c}.`);const m={x:f},b={filterSize:t,strides:n,pad:c,dimRoundingMode:l,dataFormat:d};let g=r["a"].runKernel(a["p"],m,b);return g=Object(i["a"])(g,f.dtype),h?Object(u["a"])(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const d=Object(c["b"])({avgPool3d_:l})},bb2d:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("526f"),c=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){let n=Object(o["a"])(e,"a","greaterEqual"),c=Object(o["a"])(t,"b","greaterEqual");[n,c]=Object(s["makeTypesMatch"])(n,c),Object(i["a"])(n.shape,c.shape);const u={a:n,b:c};return r["a"].runKernel(a["pb"],u)}const l=Object(c["b"])({greaterEqual_:u})},bc62:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b");function s(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}var o=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t,n,i=0){const c=Object(o["a"])(e,"sparseIndices","sparseToDense","int32"),u=Object(o["a"])(t,"sparseValues","sparseToDense"),l=Object(o["a"])(i,"defaultValue","sparseToDense",u.dtype);s(c,u,n,l);const d={sparseIndices:c,sparseValues:u,defaultValue:l},p={outputShape:n};return r["a"].runKernel(a["Lc"],d,p)}const u=Object(i["b"])({sparseToDense_:c})},bd61:function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return c}));var r=n("fa11"),a=n("cd4a"),s=n("892a");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a["a"])(e=>Math.expm1(e)),i=Object(s["b"])(r["Expm1"],o),c={kernelName:r["Expm1"],backendName:"cpu",kernelFunc:i}},bf1d:function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return c}));var r=n("fa11"),a=n("cedd"),s=n("fa0a"),o=n("9277");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a:o,b:i}=n,c=s;Object(a["a"])([o,i],e);const u=c.data.get(o.dataId).values,l=c.data.get(i.dataId).values,d=r||o.dtype,[p,f]=t(o.shape,i.shape,u,l,d);return c.makeTensorInfo(f,d,p)}:({inputs:e,backend:a})=>{const{a:i,b:c}=e,u=a;if("complex64"===i.dtype||"complex64"===c.dtype){const e=Object(s["a"])({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),t=u.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,l=u.data.get(r.dataId).values,d=u.data.get(a.dataId).values,p=Object(s["a"])({inputs:{x:c},backend:u,attrs:{dtype:"complex64"}}),f=u.data.get(p.dataId),h=f.complexTensorInfos.real,m=f.complexTensorInfos.imag,b=u.data.get(h.dataId).values,g=u.data.get(m.dataId).values,[y,x,O]=n(i.shape,c.shape,l,d,b,g),v=u.makeTensorInfo(O,"float32",y),k=u.makeTensorInfo(O,"float32",x),w=Object(o["a"])({inputs:{real:v,imag:k},backend:u});return u.disposeIntermediateTensorInfo(e),u.disposeIntermediateTensorInfo(p),u.disposeIntermediateTensorInfo(v),u.disposeIntermediateTensorInfo(k),w}{const e=u.data.get(i.dataId).values,n=u.data.get(c.dataId).values,a=r||i.dtype,[s,o]=t(i.shape,c.shape,e,n,a);return u.makeTensorInfo(o,a,s)}}}function c(e){return(t,n,a,s,o,i)=>{const c=r["backend_util"].assertAndGetBroadcastShape(t,n),u=r["util"].sizeFromShape(c),l=c.length,d=r["util"].computeStrides(c),p=r["util"].getTypedArrayFromDType("float32",u),f=r["util"].getTypedArrayFromDType("float32",u),h=r["backend_util"].getBroadcastDims(t,c),m=r["backend_util"].getBroadcastDims(n,c),b=r["backend_util"].mergeRealAndImagArrays(a,s),g=r["backend_util"].mergeRealAndImagArrays(o,i),y=t.length,x=r["util"].computeStrides(t),O=n.length,v=r["util"].computeStrides(n);if(h.length+m.length===0)for(let r=0;r<p.length;r++){const t=r%b.length,n=r%g.length,a=e(b[2*t],b[2*t+1],g[2*n],g[2*n+1]);p[r]=a.real,f[r]=a.imag}else for(let k=0;k<p.length;k++){const t=r["util"].indexToLoc(k,l,d),n=t.slice(-y);h.forEach(e=>n[e]=0);const a=r["util"].locToIndex(n,y,x),s=t.slice(-O);m.forEach(e=>s[e]=0);const o=r["util"].locToIndex(s,O,v),i=e(b[2*a],b[2*a+1],g[2*o],g[2*o+1]);p[k]=i.real,f[k]=i.imag}return[p,f,c]}}},c003:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("fa11");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){const s=r["util"].getArrayFromDType(n,r["util"].sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach(e=>{const n=r["util"].sizeFromShape(e.shape);s.set(e.vals,t),t+=n})}else{let a=0;e.forEach(e=>{const o="string"===n?r["backend_util"].fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const r=n*t[1]+a;for(let t=0;t<e.shape[1];++t)s[r+t]=o[i++]}a+=e.shape[1]})}return s}},c021:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=null,n=!1){const o=Object(s["a"])(e,"x","max"),i={x:o},c={reductionIndices:t,keepDims:n};return r["a"].runKernel(a["Ib"],i,c)}const c=Object(o["b"])({max_:i})},c04e4:function(e,t,n){"use strict";n.d(t,"g",(function(){return i})),n.d(t,"f",(function(){return c})),n.d(t,"c",(function(){return u})),n.d(t,"b",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"h",(function(){return p})),n.d(t,"m",(function(){return f})),n.d(t,"n",(function(){return h})),n.d(t,"t",(function(){return m})),n.d(t,"d",(function(){return b})),n.d(t,"l",(function(){return g})),n.d(t,"u",(function(){return y})),n.d(t,"r",(function(){return x})),n.d(t,"o",(function(){return O})),n.d(t,"k",(function(){return v})),n.d(t,"q",(function(){return k})),n.d(t,"i",(function(){return w})),n.d(t,"j",(function(){return I})),n.d(t,"p",(function(){return N})),n.d(t,"a",(function(){return j})),n.d(t,"s",(function(){return T}));var r=n("6ae2"),a=n("b333"),s=n("34d7"),o=n("76c2");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(){Object(a["c"])().set("PROD",!0)}function c(){Object(a["c"])().set("DEBUG",!0)}function u(){Object(a["c"])().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function l(e){Object(a["c"])().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){r["a"].disposeVariables()}function p(){return r["a"]}function f(){return r["a"].memory()}function h(e){return r["a"].profile(e)}function m(e,t){return r["a"].tidy(e,t)}function b(e){const t=Object(o["getTensorsInContainer"])(e);t.forEach(e=>e.dispose())}function g(e){return r["a"].keep(e)}function y(e){return r["a"].time(e)}function x(e){return r["a"].setBackend(e)}function O(){return r["a"].ready()}function v(){return r["a"].backendName}function k(e){r["a"].removeBackend(e)}function w(e){return r["a"].findBackend(e)}function I(e){return r["a"].findBackendFactory(e)}function N(e,t,n=1){return r["a"].registerBackend(e,t,n)}function j(){return r["a"].backend}function T(e,t){Object(a["c"])().setPlatform(e,t)}Object(s["d"])(l)},c05b:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return s})),n.d(t,"d",(function(){return o})),n.d(t,"e",(function(){return i})),n.d(t,"f",(function(){return c})),n.d(t,"g",(function(){return u})),n.d(t,"h",(function(){return l})),n.d(t,"i",(function(){return d})),n.d(t,"j",(function(){return p})),n.d(t,"k",(function(){return f})),n.d(t,"l",(function(){return h})),n.d(t,"n",(function(){return m})),n.d(t,"m",(function(){return b})),n.d(t,"o",(function(){return g})),n.d(t,"r",(function(){return y})),n.d(t,"p",(function(){return x})),n.d(t,"q",(function(){return O})),n.d(t,"s",(function(){return v})),n.d(t,"t",(function(){return k})),n.d(t,"u",(function(){return w})),n.d(t,"v",(function(){return I})),n.d(t,"w",(function(){return N})),n.d(t,"x",(function(){return j})),n.d(t,"y",(function(){return T})),n.d(t,"z",(function(){return S})),n.d(t,"A",(function(){return C})),n.d(t,"B",(function(){return E})),n.d(t,"C",(function(){return $})),n.d(t,"D",(function(){return A})),n.d(t,"E",(function(){return R})),n.d(t,"F",(function(){return _})),n.d(t,"G",(function(){return F})),n.d(t,"H",(function(){return D})),n.d(t,"I",(function(){return M})),n.d(t,"J",(function(){return L})),n.d(t,"L",(function(){return P})),n.d(t,"K",(function(){return B})),n.d(t,"M",(function(){return z})),n.d(t,"N",(function(){return V})),n.d(t,"O",(function(){return W})),n.d(t,"P",(function(){return U})),n.d(t,"Q",(function(){return G})),n.d(t,"R",(function(){return H})),n.d(t,"S",(function(){return q})),n.d(t,"U",(function(){return K})),n.d(t,"T",(function(){return X})),n.d(t,"lc",(function(){return Y})),n.d(t,"V",(function(){return Q})),n.d(t,"W",(function(){return Z})),n.d(t,"X",(function(){return J})),n.d(t,"Z",(function(){return ee})),n.d(t,"Y",(function(){return te})),n.d(t,"ab",(function(){return ne})),n.d(t,"bb",(function(){return re})),n.d(t,"cb",(function(){return ae})),n.d(t,"db",(function(){return se})),n.d(t,"eb",(function(){return oe})),n.d(t,"fb",(function(){return ie})),n.d(t,"gb",(function(){return ce})),n.d(t,"hb",(function(){return ue})),n.d(t,"jb",(function(){return le})),n.d(t,"nb",(function(){return de})),n.d(t,"mb",(function(){return pe})),n.d(t,"ob",(function(){return fe})),n.d(t,"pb",(function(){return he})),n.d(t,"rb",(function(){return me})),n.d(t,"qb",(function(){return be})),n.d(t,"sb",(function(){return ge})),n.d(t,"tb",(function(){return ye})),n.d(t,"ub",(function(){return xe})),n.d(t,"vb",(function(){return Oe})),n.d(t,"yb",(function(){return ve})),n.d(t,"zb",(function(){return ke})),n.d(t,"Ab",(function(){return we})),n.d(t,"Bb",(function(){return Ie})),n.d(t,"Cb",(function(){return Ne})),n.d(t,"Db",(function(){return je})),n.d(t,"Fb",(function(){return Te})),n.d(t,"Gb",(function(){return Se})),n.d(t,"Hb",(function(){return Ce})),n.d(t,"Eb",(function(){return Ee})),n.d(t,"wb",(function(){return $e})),n.d(t,"xb",(function(){return Ae})),n.d(t,"Ib",(function(){return Re})),n.d(t,"Ob",(function(){return _e})),n.d(t,"Jb",(function(){return Fe})),n.d(t,"Mb",(function(){return De})),n.d(t,"Kb",(function(){return Me})),n.d(t,"Lb",(function(){return Le})),n.d(t,"Nb",(function(){return Pe})),n.d(t,"Pb",(function(){return Be})),n.d(t,"Qb",(function(){return ze})),n.d(t,"Rb",(function(){return Ve})),n.d(t,"Sb",(function(){return We})),n.d(t,"Tb",(function(){return Ue})),n.d(t,"Ub",(function(){return Ge})),n.d(t,"Vb",(function(){return He})),n.d(t,"Wb",(function(){return qe})),n.d(t,"ac",(function(){return Ke})),n.d(t,"Xb",(function(){return Xe})),n.d(t,"Yb",(function(){return Ye})),n.d(t,"Zb",(function(){return Qe})),n.d(t,"cc",(function(){return Ze})),n.d(t,"bc",(function(){return Je})),n.d(t,"dc",(function(){return et})),n.d(t,"ec",(function(){return tt})),n.d(t,"fc",(function(){return nt})),n.d(t,"gc",(function(){return rt})),n.d(t,"hc",(function(){return at})),n.d(t,"ic",(function(){return st})),n.d(t,"jc",(function(){return ot})),n.d(t,"kc",(function(){return it})),n.d(t,"mc",(function(){return ct})),n.d(t,"nc",(function(){return ut})),n.d(t,"pc",(function(){return lt})),n.d(t,"sc",(function(){return dt})),n.d(t,"tc",(function(){return pt})),n.d(t,"qc",(function(){return ft})),n.d(t,"rc",(function(){return ht})),n.d(t,"oc",(function(){return mt})),n.d(t,"uc",(function(){return bt})),n.d(t,"wc",(function(){return gt})),n.d(t,"xc",(function(){return yt})),n.d(t,"yc",(function(){return xt})),n.d(t,"zc",(function(){return Ot})),n.d(t,"Ac",(function(){return vt})),n.d(t,"Fc",(function(){return kt})),n.d(t,"Dc",(function(){return wt})),n.d(t,"Ec",(function(){return It})),n.d(t,"Cc",(function(){return Nt})),n.d(t,"Bc",(function(){return jt})),n.d(t,"Hc",(function(){return Tt})),n.d(t,"Nc",(function(){return St})),n.d(t,"Tc",(function(){return Ct})),n.d(t,"Ic",(function(){return Et})),n.d(t,"Mc",(function(){return $t})),n.d(t,"Gc",(function(){return At})),n.d(t,"Jc",(function(){return Rt})),n.d(t,"Kc",(function(){return _t})),n.d(t,"Lc",(function(){return Ft})),n.d(t,"Pc",(function(){return Dt})),n.d(t,"Oc",(function(){return Mt})),n.d(t,"Rc",(function(){return Lt})),n.d(t,"Sc",(function(){return Pt})),n.d(t,"Uc",(function(){return Bt})),n.d(t,"Vc",(function(){return zt})),n.d(t,"Wc",(function(){return Vt})),n.d(t,"Xc",(function(){return Wt})),n.d(t,"Yc",(function(){return Ut})),n.d(t,"Zc",(function(){return Gt})),n.d(t,"ad",(function(){return Ht})),n.d(t,"bd",(function(){return qt})),n.d(t,"cd",(function(){return Kt})),n.d(t,"dd",(function(){return Xt})),n.d(t,"Qc",(function(){return Yt})),n.d(t,"ib",(function(){return Qt})),n.d(t,"vc",(function(){return Zt})),n.d(t,"ed",(function(){return Jt})),n.d(t,"kb",(function(){return en})),n.d(t,"lb",(function(){return tn}));const r="Abs",a="Acos",s="Acosh",o="Add",i="AddN",c="All",u="Any",l="ArgMax",d="ArgMin",p="Asin",f="Asinh",h="Atan",m="Atanh",b="Atan2",g="AvgPool",y="AvgPoolGrad",x="AvgPool3D",O="AvgPool3DGrad",v="BatchMatMul",k="BatchToSpaceND",w="Bincount",I="BroadcastTo",N="Cast",j="Ceil",T="ClipByValue",S="Complex",C="ComplexAbs",E="Concat",$="Conv2D",A="Conv2DBackpropFilter",R="Conv2DBackpropInput",_="Conv3D",F="Conv3DBackpropFilterV2",D="Conv3DBackpropInputV2",M="Cos",L="Cosh",P="Cumsum",B="CropAndResize",z="DenseBincount",V="DepthToSpace",W="DepthwiseConv2dNative",U="DepthwiseConv2dNativeBackpropFilter",G="DepthwiseConv2dNativeBackpropInput",H="Diag",q="Dilation2D",K="Dilation2DBackpropInput",X="Dilation2DBackpropFilter",Y="RealDiv",Q="Einsum",Z="Elu",J="EluGrad",ee="Erf",te="Equal",ne="Exp",re="ExpandDims",ae="Expm1",se="FFT",oe="Fill",ie="FlipLeftRight",ce="Floor",ue="FloorDiv",le="FusedBatchNorm",de="GatherV2",pe="GatherNd",fe="Greater",he="GreaterEqual",me="Identity",be="IFFT",ge="Imag",ye="IsFinite",xe="IsInf",Oe="IsNan",ve="LeakyRelu",ke="Less",we="LessEqual",Ie="LinSpace",Ne="Log",je="Log1p",Te="LogicalAnd",Se="LogicalNot",Ce="LogicalOr",Ee="LogSoftmax",$e="LRN",Ae="LRNGrad",Re="Max",_e="Maximum",Fe="MaxPool",De="MaxPoolGrad",Me="MaxPool3D",Le="MaxPool3DGrad",Pe="MaxPoolWithArgmax",Be="Mean",ze="Min",Ve="Minimum",We="MirrorPad",Ue="Mod",Ge="Multinomial",He="Multiply",qe="Neg",Ke="NotEqual",Xe="NonMaxSuppressionV3",Ye="NonMaxSuppressionV4",Qe="NonMaxSuppressionV5",Ze="OnesLike",Je="OneHot",et="Pack",tt="PadV2",nt="Pool",rt="Pow",at="Prelu",st="Prod",ot="Range",it="Real",ct="Reciprocal",ut="Relu",lt="Reshape",dt="ResizeNearestNeighbor",pt="ResizeNearestNeighborGrad",ft="ResizeBilinear",ht="ResizeBilinearGrad",mt="Relu6",bt="Reverse",gt="Round",yt="Rsqrt",xt="ScatterNd",Ot="Select",vt="Selu",kt="Slice",wt="Sin",It="Sinh",Nt="Sign",jt="Sigmoid",Tt="Softplus",St="Sqrt",Ct="Sum",Et="SpaceToBatchND",$t="SplitV",At="Softmax",Rt="SparseFillEmptyRows",_t="SparseReshape",Ft="SparseToDense",Dt="SquaredDifference",Mt="Square",Lt="StridedSlice",Pt="Sub",Bt="Tan",zt="Tanh",Vt="Tile",Wt="TopK",Ut="Transform",Gt="Transpose",Ht="Unique",qt="Unpack",Kt="UnsortedSegmentSum",Xt="ZerosLike",Yt="Step",Qt="FromPixels",Zt="RotateWithOffset",Jt="_FusedMatMul",en="FusedConv2D",tn="FusedDepthwiseConv2D"},c08f:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t,n){const i=Object(s["a"])(e,"x","clipByValue");o["b"](t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);const c={x:i},u={clipValueMin:t,clipValueMax:n};return r["a"].runKernel(a["y"],c,u)}const u=Object(i["b"])({clipByValue_:c})},c170:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef"),c=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t,n,i,u=[1,1],l="NHWC"){const d=Object(s["a"])(e,"x","dilation2d"),p=Object(s["a"])(t,"filter","dilation2d");o["b"](3===d.rank||4===d.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+d.rank+"."),o["b"](3===p.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+p.rank+"."),o["b"]("NHWC"===l,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+l);let f=d,h=!1;3===d.rank&&(f=Object(c["a"])(d,[1,d.shape[0],d.shape[1],d.shape[2]]),h=!0);const m={x:f,filter:p},b={strides:n,pad:i,dilations:u},g=r["a"].runKernel(a["S"],m,b);return h?Object(c["a"])(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const l=Object(i["b"])({dilation2d_:u})},c1a2:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","cosh"),n={x:t};return r["a"].runKernel(a["J"],n)}const c=Object(o["b"])({cosh_:i})},c22a:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("6ad5"),s=n("0777"),o=n("5a2c");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t="float32"){if("complex64"===t){const t=i(e,"float32"),n=Object(o["a"])(e,"float32");return Object(s["a"])(t,n)}const n=Object(a["D"])(Object(a["O"])(e),t);return r["a"].makeTensor(n,e,t)}},c4e2:function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return c}));var r=n("fa11"),a=n("cd4a"),s=n("892a");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a["a"])(e=>1/Math.sqrt(e)),i=Object(s["b"])(r["Rsqrt"],o),c={kernelName:r["Rsqrt"],backendName:"cpu",kernelFunc:i}},c77c:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("508f"),c=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){let n=Object(o["a"])(e,"a","div"),c=Object(o["a"])(t,"b","div");if([n,c]=Object(s["makeTypesMatch"])(n,c),"int32"===n.dtype&&"int32"===c.dtype)return Object(i["a"])(n,c);const u={a:n,b:c},l={};return r["a"].runKernel(a["lc"],u,l)}const l=Object(c["b"])({div_:u})},c8ad:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},c912:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t){const n=Object(s["a"])(e,"x","transpose");if(null==t&&(t=n.shape.map((e,t)=>t).reverse()),o["b"](n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(e=>{o["b"](e>=0&&e<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t)}),n.rank<=1)return n.clone();const i={x:n},c={perm:t};return r["a"].runKernel(a["Zc"],i,c)}const u=Object(i["b"])({transpose_:c})},c9f1:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t){let n=Object(o["a"])(e,"base","pow"),i=Object(o["a"])(t,"exp","pow");[n,i]=Object(s["makeTypesMatch"])(n,i);const c={a:n,b:i};return r["a"].runKernel(a["gc"],c)}const u=Object(i["b"])({pow_:c})},cae0:function(e,t,n){(function(e){var r;(function(e,a,s){function o(e){var t=this;function n(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;while(r.length<8)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],e^=e>>>7,n=e^e<<24,e=r[a+1&7],n^=e^e>>>10,e=r[a+3&7],n^=e^e>>>3,e=r[a+4&7],n^=e^e<<7,e=r[a+7&7],e^=e<<13,n^=e^e<<9,r[a]=n,t.i=a+1&7,n},n(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function c(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n("07d6")&&n("3c35")?(r=function(){return c}.call(t,n,t,a),void 0===r||(a.exports=r)):this.xorshift7=c})(0,e,n("07d6"))}).call(this,n("62e4")(e))},cd1f:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("a3f7"),a=n("73d3"),s=n("54ef");function o(e,t,n,s,o,i){const c=Object(r["a"])(e,"x","conv2dTranspose"),u=Object(r["a"])(t,"filter","conv2dTranspose");return Object(a["a"])(n,c,u,s,o,"NHWC",i)}const i=Object(s["b"])({conv2dTranspose_:o})},cd4a:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("fa11");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e){return(t,n,a)=>{const s=r["util"].getTypedArrayFromDType(n,t.length);for(let r=0;r<t.length;++r)s[r]=e(t[r],a);return s}}},cedd:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("fa11");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&r["util"].assert("complex64"!==e.dtype,()=>t+" does not support complex64 tensors in the CPU backend.")})}},cef0:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("526f"),c=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){let n=Object(o["a"])(e,"a","greater"),c=Object(o["a"])(t,"b","greater");[n,c]=Object(s["makeTypesMatch"])(n,c),Object(i["a"])(n.shape,c.shape);const u={a:n,b:c};return r["a"].runKernel(a["ob"],u)}const l=Object(c["b"])({greater_:u})},d08e:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t){const n=Object(s["a"])(e,"x","reverse"),o={x:n},i={dims:t};return r["a"].runKernel(a["uc"],o,i)}const c=Object(o["b"])({reverse_:i})},d1a8:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","atanh"),n={x:t};return r["a"].runKernel(a["n"],n)}const c=Object(o["b"])({atanh_:i})},d1e0:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("fa11"),a=n("9277");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t,n="float32"){if("complex64"===n){const n=s(e,t,"float32"),r=s(e,t,"float32");return Object(a["a"])({inputs:{real:n,imag:r},backend:e})}const o=r["util"].makeZerosTypedArray(r["util"].sizeFromShape(t),n);return e.makeTensorInfo(t,n,o)}},d1f4:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("a3f7"),a=n("6ad5"),s=n("54ef"),o=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t){const n=Object(r["a"])(e,"x","squeeze");return Object(o["a"])(n,Object(a["Q"])(n.shape,t).newShape)}const c=Object(s["b"])({squeeze_:i})},d303:function(e,t,n){"use strict";n.d(t,"c",(function(){return a})),n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return o}));
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r={};function a(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};r[e]=n}function s(e){return r[e]}function o(e){delete r[e]}},d30a:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","tan"),n={x:t};return r["a"].runKernel(a["Uc"],n)}const c=Object(o["b"])({tan_:i})},d356:function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return c}));var r=n("fa11"),a=n("cd4a"),s=n("892a");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a["a"])(e=>Math.floor(e)),i=Object(s["b"])(r["Floor"],o),c={kernelName:r["Floor"],backendName:"cpu",kernelFunc:i}},d369:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","floor"),n={x:t};return r["a"].runKernel(a["gb"],n)}const c=Object(o["b"])({floor_:i})},d4de:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("526f"),c=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){let n=Object(o["a"])(e,"a","notEqual"),c=Object(o["a"])(t,"b","notEqual");[n,c]=Object(s["makeTypesMatch"])(n,c),Object(i["a"])(n.shape,c.shape);const u={a:n,b:c};return r["a"].runKernel(a["ac"],u)}const l=Object(c["b"])({notEqual_:u})},d4e4:function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return s})),n.d(t,"c",(function(){return o}));var r=n("6125");n("d565");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class a{constructor(e,t,n,a,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const o=s||Math.random();this.random=r["alea"](o.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;while(!n){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*a*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class s{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;const o=s||Math.random();this.randu=r["alea"](o.toString()),this.randn=new a(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;while(1){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class o{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=r["alea"](a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},d54d:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t=0){const n=Object(s["b"])(e,"tensors","stack","string_or_numeric");o["b"](n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&o["b"](t<=n[0].rank,()=>"Axis must be <= rank of the tensor");const i=n,c={axis:t};return r["a"].runKernel(a["dc"],i,c)}const u=Object(i["b"])({stack_:c})},d556:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},d565:function(e,t,n){"use strict";n.r(t),n.d(t,"TEST_EPSILON_FLOAT16",(function(){return c})),n.d(t,"expectArraysClose",(function(){return u})),n.d(t,"testEpsilon",(function(){return l})),n.d(t,"expectPromiseToFail",(function(){return p})),n.d(t,"expectArraysEqual",(function(){return f})),n.d(t,"expectNumbersClose",(function(){return h})),n.d(t,"expectValuesInRange",(function(){return b})),n.d(t,"expectArrayBuffersEqual",(function(){return g})),n.d(t,"encodeStrings",(function(){return y}));var r=n("6ae2"),a=n("a3f7"),s=n("6ad5"),o=n("eb7e");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=.001,c=.1;function u(e,t,n){return null==n&&(n=l()),d(e,t,(e,t)=>m(e,t,n))}function l(){return 32===r["a"].backend.floatPrecision()?i:c}function d(e,t,n){let r=!0;if((Object(s["A"])(e)||Object(s["A"])(t))&&(r=!1),Object(s["A"])(e)&&Object(s["A"])(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: `+r)}if(Array.isArray(e)&&Array.isArray(t)){const n=Object(a["c"])(e),r=Object(a["c"])(t);if(!Object(s["a"])(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const o=Object(s["A"])(e)?e:Object(s["m"])(e),i=Object(s["A"])(t)?t:Object(s["m"])(t);if(o.length!==i.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${i.length}.\nActual:   ${o}.\nExpected: ${i}.`);for(let a=0;a<i.length;++a){const e=o[a],t=i[a];if(!n(e,t))throw new Error(`Arrays differ: actual[${a}] = ${e}, expected[${a}] = ${t}.\nActual:   ${o}.\nExpected: ${i}.`)}}function p(e,t){e().then(()=>t.fail(),()=>t())}function f(e,t){const n="string"===typeof t||"number"===typeof t||"boolean"===typeof t?[t]:t;return Object(s["z"])(e)||Object(s["z"])(e[0])||Object(s["z"])(t)||Object(s["z"])(t[0])?d(e,n,(e,t)=>e==t):d(e,t,(e,t)=>m(e,t,0))}function h(e,t,n){if(null==n&&(n=l()),!m(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function m(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function b(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function g(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function y(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?y(n):e[t]=Object(o["encodeString"])(n)}return e}},d7b0:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"input","real"),n={input:t};return r["a"].runKernel(a["kc"],n)}const c=Object(o["b"])({real_:i})},dae8:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t=0){const n=Object(s["a"])(e,"x","expandDims","string_or_numeric");o["b"](t<=n.rank,()=>"Axis must be <= rank of the tensor");const i={input:n},c={dim:t};return r["a"].runKernel(a["bb"],i,c)}const u=Object(i["b"])({expandDims_:c})},db49:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=0){const n=Object(s["a"])(e,"x","argMin"),o={x:n},i={axis:t};return r["a"].runKernel(a["i"],o,i)}const c=Object(o["b"])({argMin_:i})},dbf3:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]},dc59:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","asinh"),n={x:t};return r["a"].runKernel(a["k"],n)}const c=Object(o["b"])({asinh_:i})},dd7e:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("b818"),c=n("54ef"),u=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l(e,t,n,c,l="NHWC",d=[1,1],p){const f=Object(s["a"])(e,"x","conv2d"),h=Object(s["a"])(t,"filter","conv2d");let m=f,b=!1;3===f.rank&&(b=!0,m=Object(u["a"])(f,[1,f.shape[0],f.shape[1],f.shape[2]])),o["b"](4===m.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`),o["b"](4===h.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+h.rank+"."),null!=p&&o["b"](o["v"](c),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${p} but got pad ${c}.`);const g="NHWC"===l?m.shape[3]:m.shape[1];o["b"](g===h.shape[2],()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${h.shape[2]}.`),o["b"](i["h"](n,d),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`);const y={x:m,filter:h},x={strides:n,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p},O=r["a"].runKernel(a["C"],y,x);return b?Object(u["a"])(O,[O.shape[1],O.shape[2],O.shape[3]]):O}const d=Object(c["b"])({conv2d_:l})},de1a:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n,o,i=0,c=0,u=0,l=0,d=0){const p=Object(s["a"])(e,"x","stridedSlice"),f={x:p},h={begin:t,end:n,strides:o,beginMask:i,endMask:c,ellipsisMask:u,newAxisMask:l,shrinkAxisMask:d};return r["a"].runKernel(a["Rc"],f,h)}const c=Object(o["b"])({stridedSlice_:i})},deb3:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t){const n=Object(s["a"])(e,"x","cast");if(!o["B"](t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},c={dtype:t};return r["a"].runKernel(a["w"],i,c)}const u=Object(i["b"])({cast_:c})},df81:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=null,n=!1){const o=Object(s["a"])(e,"x","all","bool"),i={x:o},c={axis:t,keepDims:n};return r["a"].runKernel(a["f"],i,c)}const c=Object(o["b"])({all_:i})},e053:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("deb3"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t=null,n=!1){let i=Object(s["a"])(e,"x","sum");"bool"===i.dtype&&(i=Object(o["a"])(i,"int32"));const c={x:i},u={axis:t,keepDims:n};return r["a"].runKernel(a["Tc"],c,u)}const u=Object(i["b"])({sum_:c})},e101:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef"),c=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t=5,n=1,i=1,u=.5){const l=Object(s["a"])(e,"x","localResponseNormalization");o["b"](4===l.rank||3===l.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${l.rank}.`),o["b"](o["v"](t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let d=l,p=!1;3===l.rank&&(p=!0,d=Object(c["a"])(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const f={x:d},h={depthRadius:t,bias:n,alpha:i,beta:u},m=r["a"].runKernel(a["wb"],f,h);return p?Object(c["a"])(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const l=Object(i["b"])({localResponseNormalization_:u})},e1fd:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("526f"),c=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){let n=Object(o["a"])(e,"a","less"),c=Object(o["a"])(t,"b","less");[n,c]=Object(s["makeTypesMatch"])(n,c),Object(i["a"])(n.shape,c.shape);const u={a:n,b:c};return r["a"].runKernel(a["zb"],u)}const l=Object(c["b"])({less_:u})},e22c:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n=1,o=0){if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);const i=Object(s["a"])(e,"indices","oneHot","int32"),c={indices:i},u={depth:t,onValue:n,offValue:o};return r["a"].runKernel(a["bc"],c,u)}const c=Object(o["b"])({oneHot_:i})},e2d7:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("fa11");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){const s=Object(r["buffer"])(e,t.dtype);for(let r=0;r<s.size;r++){const e=s.indexToLoc(r),o=new Array(e.length);for(let t=0;t<o.length;t++)o[t]=e[t]*n[t]+a[t];s.set(t.get(...o),...e)}return s}},e333:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("526f"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t){const n=Object(s["a"])(e,"a","logicalAnd","bool"),i=Object(s["a"])(t,"b","logicalAnd","bool");Object(o["a"])(n.shape,i.shape);const c={a:n,b:i};return r["a"].runKernel(a["Fb"],c)}const u=Object(i["b"])({logicalAnd_:c})},e3db:function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},e89f:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=0){const n=Object(s["a"])(e,"x","argMax"),o={x:n},i={axis:t};return r["a"].runKernel(a["h"],o,i)}const c=Object(o["b"])({argMax_:i})},eb7e:function(e,t,n){"use strict";n.r(t),n.d(t,"createScalarValue",(function(){return s})),n.d(t,"toTypedArray",(function(){return i})),n.d(t,"now",(function(){return c})),n.d(t,"fetch",(function(){return u})),n.d(t,"encodeString",(function(){return l})),n.d(t,"decodeString",(function(){return d}));var r=n("b333"),a=n("6ad5");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t){return"string"===t?l(e):i([e],t)}function o(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}function i(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=a["m"](e)),Object(r["c"])().getBool("DEBUG")&&a["h"](e,t),o(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type "+t)}function c(){return Object(r["c"])().platform.now()}function u(e,t){return Object(r["c"])().platform.fetch(e,t)}function l(e,t="utf-8"){return t=t||"utf-8",Object(r["c"])().platform.encode(e,t)}function d(e,t="utf-8"){return t=t||"utf-8",Object(r["c"])().platform.decode(e,t)}n.d(t,"shuffle",(function(){return a["M"]})),n.d(t,"shuffleCombo",(function(){return a["N"]})),n.d(t,"clamp",(function(){return a["i"]})),n.d(t,"nearestLargerEven",(function(){return a["H"]})),n.d(t,"sum",(function(){return a["R"]})),n.d(t,"randUniform",(function(){return a["J"]})),n.d(t,"distSquared",(function(){return a["l"]})),n.d(t,"assert",(function(){return a["b"]})),n.d(t,"assertShapesMatch",(function(){return a["e"]})),n.d(t,"assertNonNull",(function(){return a["d"]})),n.d(t,"flatten",(function(){return a["m"]})),n.d(t,"sizeFromShape",(function(){return a["O"]})),n.d(t,"isScalarShape",(function(){return a["y"]})),n.d(t,"arraysEqual",(function(){return a["a"]})),n.d(t,"isInt",(function(){return a["v"]})),n.d(t,"tanh",(function(){return a["S"]})),n.d(t,"sizeToSquarishShape",(function(){return a["P"]})),n.d(t,"createShuffledIndices",(function(){return a["k"]})),n.d(t,"rightPad",(function(){return a["L"]})),n.d(t,"repeatedTry",(function(){return a["K"]})),n.d(t,"inferFromImplicitShape",(function(){return a["s"]})),n.d(t,"parseAxisParam",(function(){return a["I"]})),n.d(t,"squeezeShape",(function(){return a["Q"]})),n.d(t,"getTypedArrayFromDType",(function(){return a["o"]})),n.d(t,"getArrayFromDType",(function(){return a["n"]})),n.d(t,"checkConversionForErrors",(function(){return a["h"]})),n.d(t,"isValidDtype",(function(){return a["B"]})),n.d(t,"hasEncodingLoss",(function(){return a["p"]})),n.d(t,"isTypedArray",(function(){return a["A"]})),n.d(t,"bytesPerElement",(function(){return a["g"]})),n.d(t,"bytesFromStringArray",(function(){return a["f"]})),n.d(t,"isString",(function(){return a["z"]})),n.d(t,"isBoolean",(function(){return a["t"]})),n.d(t,"isNumber",(function(){return a["w"]})),n.d(t,"inferDtype",(function(){return a["r"]})),n.d(t,"isFunction",(function(){return a["u"]})),n.d(t,"nearestDivisor",(function(){return a["G"]})),n.d(t,"computeStrides",(function(){return a["j"]})),n.d(t,"toNestedArray",(function(){return a["T"]})),n.d(t,"makeOnesTypedArray",(function(){return a["D"]})),n.d(t,"makeZerosTypedArray",(function(){return a["F"]})),n.d(t,"makeZerosNestedTypedArray",(function(){return a["E"]})),n.d(t,"assertNonNegativeIntegerDimensions",(function(){return a["c"]})),n.d(t,"locToIndex",(function(){return a["C"]})),n.d(t,"indexToLoc",(function(){return a["q"]})),n.d(t,"isPromise",(function(){return a["x"]}))},ee7d:function(e,t,n){"use strict";n.r(t),n.d(t,"version_webgl",(function(){return xr})),n.d(t,"MathBackendWebGL",(function(){return gr})),n.d(t,"setWebGLContext",(function(){return c})),n.d(t,"GPGPUContext",(function(){return et})),n.d(t,"gpgpu_util",(function(){return a})),n.d(t,"webgl_util",(function(){return r})),n.d(t,"forceHalfFloat",(function(){return Or})),n.d(t,"webgl",(function(){return vr}));var r={};n.r(r),n.d(r,"callAndCheck",(function(){return v})),n.d(r,"canBeRepresented",(function(){return N})),n.d(r,"getWebGLErrorMessage",(function(){return j})),n.d(r,"getExtensionOrThrow",(function(){return T})),n.d(r,"createVertexShader",(function(){return S})),n.d(r,"createFragmentShader",(function(){return C})),n.d(r,"createProgram",(function(){return A})),n.d(r,"linkProgram",(function(){return R})),n.d(r,"validateProgram",(function(){return _})),n.d(r,"createStaticVertexBuffer",(function(){return F})),n.d(r,"createStaticIndexBuffer",(function(){return D})),n.d(r,"getNumChannels",(function(){return M})),n.d(r,"createTexture",(function(){return L})),n.d(r,"validateTextureSize",(function(){return P})),n.d(r,"createFramebuffer",(function(){return B})),n.d(r,"bindVertexBufferToProgramAttribute",(function(){return z})),n.d(r,"bindTextureUnit",(function(){return V})),n.d(r,"unbindTextureUnit",(function(){return W})),n.d(r,"getProgramUniformLocationOrThrow",(function(){return U})),n.d(r,"getProgramUniformLocation",(function(){return G})),n.d(r,"bindTextureToProgramUniformSampler",(function(){return H})),n.d(r,"bindCanvasToFramebuffer",(function(){return q})),n.d(r,"bindColorTextureToFramebuffer",(function(){return K})),n.d(r,"unbindColorTextureFromFramebuffer",(function(){return X})),n.d(r,"validateFramebuffer",(function(){return Y})),n.d(r,"getFramebufferErrorMessage",(function(){return Q})),n.d(r,"getBatchDim",(function(){return ee})),n.d(r,"getRowsCols",(function(){return te})),n.d(r,"getShapeAs3D",(function(){return ne})),n.d(r,"getTextureShapeFromLogicalShape",(function(){return re})),n.d(r,"isReshapeFree",(function(){return se})),n.d(r,"getWebGLMaxTextureSize",(function(){return ce})),n.d(r,"resetMaxTextureSize",(function(){return ue})),n.d(r,"resetMaxTexturesInShader",(function(){return le})),n.d(r,"getMaxTexturesInShader",(function(){return de})),n.d(r,"getWebGLDisjointQueryTimerVersion",(function(){return pe})),n.d(r,"hasExtension",(function(){return fe})),n.d(r,"isWebGLVersionEnabled",(function(){return he})),n.d(r,"isCapableOfRenderingToFloatTexture",(function(){return me})),n.d(r,"isDownloadFloatTextureEnabled",(function(){return be})),n.d(r,"isWebGLFenceEnabled",(function(){return xe})),n.d(r,"assertNotComplex",(function(){return Oe}));var a={};n.r(a),n.d(a,"createVertexShader",(function(){return Ae})),n.d(a,"createVertexBuffer",(function(){return Re})),n.d(a,"createIndexBuffer",(function(){return _e})),n.d(a,"getInternalFormatForFloat32MatrixTexture",(function(){return De})),n.d(a,"createFloat32MatrixTexture",(function(){return Me})),n.d(a,"getInternalFormatForFloat16MatrixTexture",(function(){return Le})),n.d(a,"createFloat16MatrixTexture",(function(){return Pe})),n.d(a,"getInternalFormatForUnsignedBytesMatrixTexture",(function(){return Be})),n.d(a,"createUnsignedBytesMatrixTexture",(function(){return ze})),n.d(a,"getInternalFormatForPackedMatrixTexture",(function(){return Ve})),n.d(a,"createPackedMatrixTexture",(function(){return We})),n.d(a,"getInternalFormatForFloat16PackedMatrixTexture",(function(){return Ue})),n.d(a,"createFloat16PackedMatrixTexture",(function(){return Ge})),n.d(a,"bindVertexProgramAttributeStreams",(function(){return He})),n.d(a,"uploadDenseMatrixToTexture",(function(){return qe})),n.d(a,"uploadPixelDataToTexture",(function(){return Ke})),n.d(a,"createBufferFromOutputTexture",(function(){return Xe})),n.d(a,"downloadFloat32MatrixFromBuffer",(function(){return Ye})),n.d(a,"downloadByteEncodedFloatMatrixFromOutputTexture",(function(){return Qe})),n.d(a,"downloadPackedMatrixFromBuffer",(function(){return Ze})),n.d(a,"downloadMatrixFromPackedOutputTexture",(function(){return Je}));var s=n("fa11");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o={},i={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function c(e,t){o[e]=t}function u(e){if(!(e in o)){const t=d(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;o[e]=t}const t=o[e];return t.isContextLost()?(delete o[e],u(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),o[e])}function l(e){if("undefined"!==typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function d(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=l(e);return t.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete o[e]},!1),1===e?t.getContext("webgl",i)||t.getContext("experimental-webgl",i):t.getContext("webgl2",i)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var p,f,h;function m(e,t){return[t,e]}function b(e,t){return e*t}function g(e){const t=s["util"].sizeFromShape(e),n=Math.ceil(t/4);return s["util"].sizeToSquarishShape(n)}function y(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function x(e,t){const[n,r]=y(e,t);return n*r*4}function O(e,t){const n=e;let r,a,o,i,c,u,l,d,p,f;return 2===Object(s["env"])().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,o=n.RGBA16F,i=n.RGBA32F,c=n.RED,l=4,d=1,p=n.HALF_FLOAT,f=n.FLOAT):(r=e.RGBA,a=e.RGBA,o=e.RGBA,i=n.RGBA,c=e.RGBA,l=4,d=4,p=null!=t?t.HALF_FLOAT_OES:null,f=e.FLOAT),u=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:c,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:d,textureTypeHalfFloat:p,textureTypeFloat:f}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v(e,t){const n=t();return Object(s["env"])().getBool("DEBUG")&&k(e),n}function k(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+j(e,t))}(function(e){e[e["DENSE"]=0]="DENSE",e[e["SHARED_BATCH"]=1]="SHARED_BATCH"})(p||(p={})),function(e){e[e["RENDER"]=0]="RENDER",e[e["UPLOAD"]=1]="UPLOAD",e[e["PIXELS"]=2]="PIXELS",e[e["DOWNLOAD"]=3]="DOWNLOAD"}(f||(f={})),function(e){e[e["UNPACKED_FLOAT16"]=0]="UNPACKED_FLOAT16",e[e["UNPACKED_FLOAT32"]=1]="UNPACKED_FLOAT32",e[e["PACKED_4X1_UNSIGNED_BYTE"]=2]="PACKED_4X1_UNSIGNED_BYTE",e[e["PACKED_2X2_FLOAT32"]=3]="PACKED_2X2_FLOAT32",e[e["PACKED_2X2_FLOAT16"]=4]="PACKED_2X2_FLOAT16"}(h||(h={}));const w=5.96e-8,I=65504;function N(e){return!!(Object(s["env"])().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||w<Math.abs(e)&&Math.abs(e)<I)}function j(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+t}}function T(e,t){return Z(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function S(e,t){const n=Z(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(v(e,()=>e.shaderSource(n,t)),v(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function C(e,t){const n=Z(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(v(e,()=>e.shaderSource(n,t)),v(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw $(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const E=/ERROR: [0-9]+:([0-9]+):/g;function $(e,t){const n=E.exec(t);if(null==n)return console.log("Couldn't parse line number in error: "+t),void console.log(e);const r=+n[1],a=e.split("\n"),o=a.length.toString().length+2,i=a.map((e,t)=>s["util"].rightPad((t+1).toString(),o)+e);let c=0;for(let s=0;s<i.length;s++)c=Math.max(i[s].length,c);const u=i.slice(0,r-1),l=i.slice(r-1,r),d=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log("%c "+s["util"].rightPad(l[0],c),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function A(e){return Z(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function R(e,t){if(v(e,()=>e.linkProgram(t)),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function _(e,t){if(v(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function F(e,t){const n=Z(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return v(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),v(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function D(e,t){const n=Z(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return v(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),v(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function M(){return 2===Object(s["env"])().getNumber("WEBGL_VERSION")?1:4}function L(e){return Z(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function P(e,t){const n=Object(s["env"])().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n=`[${e}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const r=`[${e}x${t}]`,a=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+a+".")}}function B(e){return Z(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function z(e,t,n,r,a,s,o){const i=e.getAttribLocation(t,n);return-1!==i&&(v(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),v(e,()=>e.vertexAttribPointer(i,a,e.FLOAT,!1,s,o)),v(e,()=>e.enableVertexAttribArray(i)),!0)}function V(e,t,n){J(e,n),v(e,()=>e.activeTexture(e.TEXTURE0+n)),v(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function W(e,t){J(e,t),v(e,()=>e.activeTexture(e.TEXTURE0+t)),v(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function U(e,t,n){return Z(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function G(e,t,n){return e.getUniformLocation(t,n)}function H(e,t,n,r){v(e,()=>V(e,t,r)),v(e,()=>e.uniform1i(n,r))}function q(e){v(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),v(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),v(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function K(e,t,n){v(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),v(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function X(e,t){v(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),v(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Y(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+Q(e,t))}function Q(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+t}}function Z(e,t,n){const r=v(e,()=>t());if(null==r)throw new Error(n);return r}function J(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){const e=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${e}.`)}}function ee(e,t=2){return s["util"].sizeFromShape(e.slice(0,e.length-t))}function te(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function ne(e){let t=[1,1,1];const n=0===e.length||1===e.length&&1===e[0];return n||(t=[ee(e),...te(e)]),t}function re(e,t=!1){let n=Object(s["env"])().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,e=e.map((t,n)=>n>=e.length-2?s["util"].nearestLargerEven(e[n]):e[n]),1===e.length&&(e=[2,e[0]])),2!==e.length){const t=s["util"].squeezeShape(e);e=t.newShape}let r=s["util"].sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=ee(e);let n=2,a=2;return e.length&&([n,a]=te(e)),r=t*(n/2)*(a/2),s["util"].sizeToSquarishShape(r).map(e=>2*e)}return s["util"].sizeToSquarishShape(r)}function ae(e){return e%2===0}function se(e,t){if(e=e.slice(-2),t=t.slice(-2),s["util"].arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(ae(n)&&ae(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&ae(e[0])&&ae(t[0])}let oe,ie;function ce(e){if(null==oe){const t=u(e);oe=t.getParameter(t.MAX_TEXTURE_SIZE)}return oe}function ue(){oe=null}function le(){ie=null}function de(e){if(null==ie){const t=u(e);ie=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,ie)}function pe(e){if(0===e)return 0;let t;const n=u(e);return t=fe(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:fe(n,"EXT_disjoint_timer_query")?1:0,t}function fe(e,t){const n=e.getExtension(t);return null!=n}function he(e){try{const t=u(e);if(null!=t)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function me(e){if(0===e)return!1;const t=u(e);if(1===e){if(!fe(t,"OES_texture_float"))return!1}else if(!fe(t,"EXT_color_buffer_float"))return!1;const n=ge(t);return n}function be(e){if(0===e)return!1;const t=u(e);if(1!==e){if(fe(t,"EXT_color_buffer_float"))return ge(t);const e="EXT_color_buffer_half_float";if(fe(t,e)){const n=t.getExtension(e);return ye(t,n)}return!1}if(!fe(t,"OES_texture_float"))return!1;if(!fe(t,"WEBGL_color_buffer_float"))return!1;const n=ge(t);return n}function ge(e){const t=O(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);const r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,r,a,0,t.textureFormatFloat,t.textureTypeFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),o}function ye(e,t){const n=O(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(o),i}function xe(e){if(2!==e)return!1;const t=u(e),n=null!=t.fenceSync;return n}function Oe(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&s["util"].assert("complex64"!==e.dtype,()=>t+" does not support complex64 tensors in the WebGL backend.")})}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ve=Object(s["env"])();
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ke(){let e,t,n,r,a,o,i,c,u,l;return 2===Object(s["env"])().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",o="outputColor",i="out vec4 outputColor;",c="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",o="gl_FragColor",i="",c="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:o,defineOutput:i,defineSpecialNaN:c,defineSpecialInf:u,defineRound:l}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function we(e,t,n="index"){const r=s["util"].computeStrides(t);return r.map((t,a)=>{const s=`int ${e[a]} = ${n} / ${t}`,o=a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`;return`${s}; ${o};`}).join("")}function Ie(e){const t=s["util"].computeStrides(e).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}ve.registerFlag("HAS_WEBGL",()=>ve.getNumber("WEBGL_VERSION")>0),ve.registerFlag("WEBGL_VERSION",()=>he(2)?2:he(1)?1:0),ve.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),ve.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===ve.get("WEBGL_VERSION")),ve.registerFlag("WEBGL_CPU_FORWARD",()=>!0),ve.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),ve.registerFlag("WEBGL_PACK",()=>ve.getBool("HAS_WEBGL")),ve.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ve.getBool("WEBGL_PACK")),ve.registerFlag("WEBGL_PACK_CLIP",()=>ve.getBool("WEBGL_PACK")),ve.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>ve.getBool("WEBGL_PACK")),ve.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ve.getBool("WEBGL_PACK")),ve.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ve.getBool("WEBGL_PACK")),ve.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ve.getBool("WEBGL_PACK")),ve.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ve.getBool("WEBGL_PACK")),ve.registerFlag("WEBGL_PACK_REDUCE",()=>ve.getBool("WEBGL_PACK")),ve.registerFlag("WEBGL_LAZILY_UNPACK",()=>ve.getBool("WEBGL_PACK")),ve.registerFlag("WEBGL_CONV_IM2COL",()=>ve.getBool("WEBGL_PACK")),ve.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>ce(ve.getNumber("WEBGL_VERSION"))),ve.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>de(ve.getNumber("WEBGL_VERSION"))),ve.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const e=ve.getNumber("WEBGL_VERSION");return 0===e?0:pe(e)}),ve.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ve.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!s["device_util"].isMobile()),ve.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>me(ve.getNumber("WEBGL_VERSION"))),ve.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!ve.getBool("WEBGL_FORCE_F16_TEXTURES")&&ve.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),ve.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>be(ve.getNumber("WEBGL_VERSION"))),ve.registerFlag("WEBGL_FENCE_API_ENABLED",()=>xe(ve.getNumber("WEBGL_VERSION"))),ve.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>{const e=ve.getBool("WEBGL_RENDER_FLOAT32_ENABLED");return e?4:0}),ve.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),ve.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>s["device_util"].isMobile()&&ve.getBool("IS_CHROME")?1:-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});const Ne="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class je{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=p.DENSE;const t=g(e),n=ke();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${we(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Te{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=p.DENSE;const t=g(e),n=ke();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${we(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Se{constructor(e){this.variableNames=["A"],this.outTexUsage=f.DOWNLOAD;const t=ke();this.outputShape=e,this.userCode=`\n      ${Ne}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ce{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=f.DOWNLOAD;const t=ke();this.outputShape=e,this.userCode=`\n      ${Ne}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ee{constructor(e,t,n=!1){this.variableNames=["A"];const r=ke(),[a,s]=t;this.outputShape=e;let o="result";n&&(o="floor(result * 255. + 0.5)"),this.userCode=`\n      ${Ie(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${s};\n        int c = imod(flatIndex, ${s});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${o}, 0., 0., 0.);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $e{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=ke(),[a,s]=t;this.outputShape=e;let o="",i="result";n&&(i="floor(result * 255. + 0.5)");for(let c=0;c<=1;c++)for(let t=0;t<=1;t++){const n=2*c+t;o+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${e[2]}) {\n            localCoords[2] += ${t};\n            if(localCoords[1] + ${c} < ${e[1]}) {\n              localCoords[1] += ${c};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${s};\n              c = imod(flatIndex, ${s});\n              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${n}] = values[0];\n              } else if(offset == 1) {\n                result[${n}] = values[1];\n              } else if(offset == 2) {\n                result[${n}] = values[2];\n              } else {\n                result[${n}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${Ie(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${o}\n\n        ${r.output} = ${i};\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ae(e){const t=ke(),n=`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`;return S(e,n)}function Re(e){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return F(e,t)}function _e(e){const t=new Uint16Array([0,1,2,2,1,3]);return D(e,t)}function Fe(e,t,n,r,a,s){P(t,n);const o=L(e),i=e.TEXTURE_2D;return v(e,()=>e.bindTexture(i,o)),v(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),v(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),v(e,()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST)),v(e,()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST)),v(e,()=>e.texImage2D(i,0,r,t,n,0,a,s,null)),v(e,()=>e.bindTexture(e.TEXTURE_2D,null)),o}function De(e){return e.internalFormatFloat}function Me(e,t,n,r){const[a,s]=m(t,n);return Fe(e,a,s,De(r),r.textureFormatFloat,e.FLOAT)}function Le(e){return e.internalFormatHalfFloat}function Pe(e,t,n,r){const[a,s]=m(t,n);return Fe(e,a,s,Le(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function Be(e){return e.downloadTextureFormat}function ze(e,t,n,r){const[a,s]=m(t,n);return Fe(e,a,s,Be(r),e.RGBA,e.UNSIGNED_BYTE)}function Ve(e){return e.internalFormatPackedFloat}function We(e,t,n,r){const[a,s]=y(t,n);return Fe(e,a,s,Ve(r),e.RGBA,e.FLOAT)}function Ue(e){return e.internalFormatPackedHalfFloat}function Ge(e,t,n,r){const[a,s]=y(t,n);return Fe(e,a,s,Ue(r),e.RGBA,r.textureTypeHalfFloat)}function He(e,t,n){const r=0,a=12,s=20;v(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n));const o=z(e,t,"clipSpacePos",n,3,s,r);return o&&z(e,t,"uv",n,2,s,a)}function qe(e,t,n,r,a,s){let o,i,c;v(e,()=>e.bindTexture(e.TEXTURE_2D,t)),a instanceof Uint8Array?(o=new Uint8Array(n*r*4),i=e.UNSIGNED_BYTE,c=e.RGBA):(o=new Float32Array(n*r*4),i=e.FLOAT,c=s.internalFormatPackedFloat),o.set(a),v(e,()=>e.texImage2D(e.TEXTURE_2D,0,c,n,r,0,e.RGBA,i,o)),v(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function Ke(e,t,n){v(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?v(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):v(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),v(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function Xe(e,t,n,r){const a=e.createBuffer();v(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));const s=4,o=4,i=s*o*t*n;return v(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ)),v(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),v(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}function Ye(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function Qe(e,t,n,r){const[a,s]=m(t,n),o=4,i=new Uint8Array(b(t*n,o));return v(e,()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function Ze(e,t,n,r,a,s,o,i){const c=e,u=new Float32Array(x(s,o));return c.bindBuffer(c.PIXEL_PACK_BUFFER,t),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,u),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),u}function Je(e,t,n){const r=new Float32Array(t*n*4);return v(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class et{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Object(s["env"])().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,c(t,e)):this.gl=u(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Object(s["env"])().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=T(this.gl,e),fe(this.gl,t))this.textureHalfFloatExtension=T(this.gl,t);else if(Object(s["env"])().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),fe(this.gl,r))this.colorBufferHalfFloatExtension=T(this.gl,r);else if(Object(s["env"])().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",fe(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!fe(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=Re(this.gl),this.indexBuffer=_e(this.gl),this.framebuffer=B(this.gl),this.textureConfig=O(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(s["env"])().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;v(e,()=>e.finish()),v(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),v(e,()=>e.deleteFramebuffer(this.framebuffer)),v(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),v(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),v(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),Me(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),Pe(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),ze(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),Ke(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),qe(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),Ge(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),We(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(X(this.gl,this.framebuffer),this.outputTexture=null),v(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>Qe(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return Ze(this.gl,e,t,n,r,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return Ye(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=Xe(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Object(s["env"])().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Object(s["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Object(s["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>Je(this.gl,t,n))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=C(t,e);null==this.vertexShader&&(this.vertexShader=Ae(t));const r=A(t);return v(t,()=>t.attachShader(r,this.vertexShader)),v(t,()=>t.attachShader(r,n)),R(t,r),this.debug&&_(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=He(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&v(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&_(this.gl,this.program),v(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?U(this.gl,e,t):G(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),v(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),H(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=y(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&_(this.gl,this.program),Y(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),v(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),v(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=T(this.gl,2===Object(s["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(s["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Object(s["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await s["util"].repeatedTry(()=>this.disposed||this.isQueryAvailable(e,Object(s["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Object(s["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl,n=t.getQueryParameter(e,t.QUERY_RESULT);return n/1e6}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT);return n/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=tt(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||s["util"].repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),K(this.gl,e,this.framebuffer),this.debug&&Y(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(K(this.gl,this.outputTexture,this.framebuffer),this.debug&&Y(this.gl)):X(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;K(r,e,this.framebuffer),this.debug&&Y(r),this.outputTexture=e,v(r,()=>r.viewport(0,0,t,n)),v(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),v(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function tt(e){let t=0;for(;t<e.length;++t){const n=e[t]();if(!n)break}return t-1}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:nt}=s["backend_util"];function rt(e,t,n,r){const a=[];e.forEach(e=>{const t=s["util"].sizeFromShape(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`))});const o=a.join("\n"),i=e.map(e=>ot(e,t,r)).join("\n"),c=t.texShape,u=ke(),l=ut(u);let d,p,f=pt(u);t.isPacked?(d=it(t.logicalShape,c),p=dt(u)):(d=ct(t.logicalShape,c),p=lt(u)),r&&(f+=bt);const h=[f,l,p,o,d,i,n].join("\n");return h}function at(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return Et(e);case 1:return At(e);case 2:return _t(e);case 3:return Dt(e);case 4:return Lt(e);case 5:return Pt(e);case 6:return Bt(e);default:throw new Error(t.length+"-D input sampling is not yet supported")}}function st(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return Ct(e);case 1:return $t(e);case 2:return Rt(e);case 3:return Ft(e);default:return Mt(e)}}function ot(e,t,n=!1){let r="";r+=n?st(e):at(e);const a=e.shapeInfo.logicalShape,s=t.logicalShape;return a.length<=s.length&&(r+=n?Vt(e,t):Wt(e,t)),r}function it(e,t){switch(e.length){case 0:return gt();case 1:return yt(e,t);case 2:return jt(e,t);case 3:return Ot(e,t);default:return kt(e,t)}}function ct(e,t){switch(e.length){case 0:return gt();case 1:return xt(e,t);case 2:return Tt(e,t);case 3:return vt(e,t);case 4:return wt(e,t);case 5:return It(e,t);case 6:return Nt(e,t);default:throw new Error(e.length+"-D output sampling is not yet supported")}}function ut(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}function lt(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}function dt(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}function pt(e){const t=`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${ft}\n    ${ht}\n    ${mt}\n  `;return t}const ft="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ht="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",mt="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",bt="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function gt(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function yt(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}function xt(e,t){return 1===t[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}function Ot(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}function vt(e,t){const n=we(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}function kt(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let s=a,o="",i="b, r, c";for(let c=2;c<e.length-1;c++)s*=e[e.length-c-1],o=`\n      int b${c} = index / ${s};\n      index -= b${c} * ${s};\n    `+o,i=`b${c}, `+i;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${i});\n    }\n  `}function wt(e,t){const n=we(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}function It(e,t){const n=we(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}function Nt(e,t){const n=we(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}function jt(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(s["util"].arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}function Tt(e,t){return s["util"].arraysEqual(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}function St(e){return"offset"+e}function Ct(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=ke();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}function Et(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[s,o]=e.shapeInfo.texShape,i=St(t);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${s}, ${o}, ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}function $t(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],s=ke();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${s.texture2D}(${t}, uv);\n    }\n  `}function At(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${zt(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],s=r[1];if(1===s&&1===a)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const o=St(t);return 1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${s}, index + ${o});\n      return sampleTexture(${t}, uv);\n    }\n  `}function Rt(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,o=a[0],i=a[1],c=ke();if(null!=a&&s["util"].arraysEqual(t,a))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);\n\n        return ${c.texture2D}(${n}, uv);\n      }\n    `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],l=Math.ceil(t[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${l}, ${u[0]}, ${u[1]}, row, col);\n      return ${c.texture2D}(${n}, uv);\n    }\n  `}function _t(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape;if(null!=a&&s["util"].arraysEqual(t,a)){const e=a[0],t=a[1];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${t}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:o,keptDims:i}=s["util"].squeezeShape(t),c=o;if(c.length<t.length){const t=Gt(e,c),n=["row","col"];return`\n      ${at(t)}\n      float ${r}(int row, int col) {\n        return ${r}(${Ht(n,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${zt(e)}\n      }\n    `;const u=a[0],l=a[1],d=St(n);return 1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${d};\n    vec2 uv = uvFromFlat(${u}, ${l}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}function Ft(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===t[0]){const n=t.slice(1),a=[1,2],s=Gt(e,n),o=["b","row","col"];return`\n        ${st(s)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${Ht(o,a)});\n        }\n      `}const o=s[0],i=s[1],c=Math.ceil(t[2]/2),u=c*Math.ceil(t[1]/2),l=ke();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${o}, ${i}, ${u}, ${c}, b, row, col);\n      return ${l.texture2D}(${n}, uv);\n    }\n  `}function Dt(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[1]*t[2],o=t[2],{newShape:i,keptDims:c}=s["util"].squeezeShape(t),u=i;if(u.length<t.length){const t=Gt(e,u),n=["row","col","depth"];return`\n        ${at(t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${Ht(n,c)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${o}, 1)));\n        ${zt(e)}\n      }\n    `;const l=e.shapeInfo.texShape,d=l[0],p=l[1],f=e.shapeInfo.flatOffset;if(p===a&&null==f)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${d}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(p===o&&null==f)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const h=St(n);return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${o} + depth + ${h};\n        vec2 uv = uvFromFlat(${d}, ${p}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}function Mt(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],i=o[0],c=o[1],u=Math.ceil(t[n-1]/2);let l=u*Math.ceil(t[n-2]/2),d="int b, int row, int col",p=`b * ${l} + (row / 2) * ${u} + (col / 2)`;for(let h=2;h<n-1;h++)d=`int b${h}, `+d,l*=t[n-h-1],p=`b${h} * ${l} + `+p;const f=ke();return`\n    vec4 ${a}(${d}) {\n      int index = ${p};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${i});\n      return ${f.texture2D}(${r}, uv);\n    }\n  `}function Lt(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[3],o=t[2]*a,i=t[1]*o,{newShape:c,keptDims:u}=s["util"].squeezeShape(t);if(c.length<t.length){const t=Gt(e,c),n=["row","col","depth","depth2"];return`\n      ${at(t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${Ht(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${o}, ${a}, 1)));\n        ${zt(e)}\n      }\n    `;const l=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===i&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const h=St(n);return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${o} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${f}, index + ${h});\n      return sampleTexture(${n}, uv);\n    }\n  `}function Pt(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],o=t[3]*a,i=t[2]*o,c=t[1]*i,{newShape:u,keptDims:l}=s["util"].squeezeShape(t);if(u.length<t.length){const t=Gt(e,u),n=["row","col","depth","depth2","depth3"];return`\n      ${at(t)}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${Ht(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${i}, ${o}, ${a})) +\n          depth3;\n        ${zt(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,f=p[0],h=p[1];if(h===c&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${o}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(h===a&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=St(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${i} + depth * ${o} +\n          depth2 * ${a} + depth3 + ${m};\n      vec2 uv = uvFromFlat(${f}, ${h}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function Bt(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:o}=s["util"].squeezeShape(t);if(a.length<t.length){const t=Gt(e,a),n=["row","col","depth","depth2","depth3","depth4"];return`\n      ${at(t)}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${Ht(n,o)});\n      }\n    `}const i=t[5],c=t[4]*i,u=t[3]*c,l=t[2]*u,d=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${l}, ${u}, ${c})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${zt(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,f=e.shapeInfo.texShape,h=f[0],m=f[1];if(m===d&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${c}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===i&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const b=St(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${l} + depth * ${u} +\n          depth2 * ${c} + depth3 * ${i} + depth4 + ${b};\n      vec2 uv = uvFromFlat(${h}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function zt(e){const t=e.name,n=s["util"].sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function Vt(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",o=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,c=nt(e.shapeInfo.logicalShape,t.logicalShape),u=Ut(i),l=i-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":i<2&&c.length>=1?"coords = 0;":c.map(e=>`coords.${p[e+l]} = 0;`).join("\n");let f="";f=i<2&&o>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+p[t+l]).join(", ");let h="return outputValue;";const m=s["util"].sizeFromShape(e.shapeInfo.logicalShape),b=1===m,g=s["util"].sizeFromShape(t.logicalShape),y=1===g;if(1!==o||b||y){if(b&&!y)h=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(c.length){const e=o-2,t=o-1;c.indexOf(e)>-1&&c.indexOf(t)>-1?h="return vec4(outputValue.x);":c.indexOf(e)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":c.indexOf(t)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}}else h="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      vec4 outputValue = get${r}(${f});\n      ${h}\n    }\n  `}function Wt(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",o=t.texShape,i=e.shapeInfo.texShape,c=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&c===u&&null==e.shapeInfo.flatOffset&&s["util"].arraysEqual(i,o))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=Ut(u),d=nt(e.shapeInfo.logicalShape,t.logicalShape),p=u-c;let f;const h=["x","y","z","w","u","v"];f=0===c?"":u<2&&d.length>=1?"coords = 0;":d.map(e=>`coords.${h[e+p]} = 0;`).join("\n");let m="";return m=u<2&&c>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+h[t+p]).join(", "),`\n    float ${a}() {\n      ${l} coords = getOutputCoords();\n      ${f}\n      return get${r}(${m});\n    }\n  `}function Ut(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Gt(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Ht(e,t){return t.map(t=>e[t]).join(", ")}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qt(e,t,n,r){const a=t.userCode,o=n.map((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}}),i=o.map(e=>e.shapeInfo),c={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=rt(o,c,a,t.packedInputs),l=e.createProgram(u);let d=null;const p=e.getUniformLocation(l,"NAN",!1);1===Object(s["env"])().getNumber("WEBGL_VERSION")&&(d=e.getUniformLocation(l,"INFINITY",!1));const f={};for(let s=0;s<t.variableNames.length;s++){const n=t.variableNames[s],r=!1;f[n]=e.getUniformLocation(l,n,r),f["offset"+n]=e.getUniformLocation(l,"offset"+n,r)}return{program:t,source:u,webGLProgram:l,uniformLocations:f,inShapeInfos:i,outShapeInfo:c,infLoc:d,nanLoc:p}}function Kt(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{const r=e.logicalShape,a=t[n],o=a.shape;if(!s["util"].arraysEqual(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,c=a.isUniform?null:a.texData.texShape;if(!s["util"].arraysEqual(i,c))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${c} must match`)})}function Xt(e,t,n,r,a){Kt(t.inShapeInfos,n),Kt([t.outShapeInfo],[r]);const o=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(o,i[0],i[1]):e.setOutputMatrixTexture(o,i[0],i[1]),e.setProgram(t.webGLProgram),1===Object(s["env"])().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((n,r)=>{const a=t.program.variableNames[r],o=t.uniformLocations[a],i=t.uniformLocations["offset"+a];if(null!=o)if(n.isUniform)if(s["util"].sizeFromShape(n.shape)<2)e.gl.uniform1f(o,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(o,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,o,r)}),null!=a&&a(e,t.webGLProgram),e.executeProgram()}function Yt(e,t,n){let r="";t.concat(n).forEach(e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`});const a=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+a,s}var Qt=n("ab98");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:Zt,bincountImpl:Jt,bincountReduceImpl:en,ceilImpl:tn,concatImpl:nn,expImpl:rn,expm1Impl:an,floorImpl:sn,gatherV2Impl:on,greaterImpl:cn,lessImpl:un,linSpaceImpl:ln,logImpl:dn,maxImpl:pn,maximumImpl:fn,minimumImpl:hn,multiplyImpl:mn,negImpl:bn,prodImpl:gn,rangeImpl:yn,rsqrtImpl:xn,simpleAbsImpl:On,sliceImpl:vn,sparseFillEmptyRowsImpl:kn,sparseReshapeImpl:wn,stridedSliceImpl:In,subImpl:Nn,tileImpl:jn,topKImpl:Tn,transposeImpl:Sn,uniqueImpl:Cn}=Qt;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function En(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function $n(e,t){return 1===t?[e]:En(e,t)}function An(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rn{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=$n("rc",t),r=Ut(t),a=Fn(t,e,n),s=Dn(t,e[e.length-1],e[e.length-2],n),o=Mn(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${o}));\n          }\n        }\n      `}}}function _n(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)s=t[t.length-1-n]+","+s;n.push(s)}return n}function Fn(e,t,n){if(1===e)return"rc > "+t[0];let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}function Dn(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}function Mn(e,t){const n=e.length,r=_n(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ln{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let r=0;r<4;r++){let e="thisRC = rc;";r%2===1&&(e+="thisRC.z += 1;"),r>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${r}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${r>0?"}":""}\n      `}this.userCode=`\n      ${Pn(t)}\n      ${Ie(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}function Pn(e){const t=we(["r","c","d"],e);return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t}\n      return ivec3(r, c, d);\n    }\n  `}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bn{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=Gn(t,n),a=Hn(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=Vn(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let o;return r===h.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===h.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===h.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===h.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===h.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=Gn(n,r),o=Hn(t,a,r);o in this.freeTextures||(this.freeTextures[o]=[]);const i=Vn(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),c=Object(s["env"])().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==c&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[o],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});for(const e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function zn(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error("Unknown internal format "+t)}function Vn(e,t,n,r,a){const s=Wn(t,r);let o;if(a){const[t,n]=y(e[0],e[1]);o=t*n}else{const[t,n]=m(e[0],e[1]);o=t*n}const i=zn(n,s);return o*i}function Wn(e,t){switch(e){case h.PACKED_2X2_FLOAT32:return Ve(t);case h.PACKED_2X2_FLOAT16:return Ue(t);case h.UNPACKED_FLOAT32:return De(t);case h.UNPACKED_FLOAT16:return Le(t);case h.PACKED_4X1_UNSIGNED_BYTE:return Be(t);default:throw new Error("Unknown physical texture type "+e)}}function Un(e){return Object(s["env"])().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?h.PACKED_2X2_FLOAT32:h.UNPACKED_FLOAT32:e?h.PACKED_2X2_FLOAT16:h.UNPACKED_FLOAT16}function Gn(e,t){if(e===f.UPLOAD)return h.PACKED_2X2_FLOAT32;if(e===f.RENDER||null==e)return Un(t);if(e===f.DOWNLOAD||e===f.PIXELS)return h.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+e)}function Hn(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qn{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Kn="if (isnan(x)) return x;",Xn="return x;",Yn="return abs(x);";const Qn="return (x >= 0.0) ? x : (exp(x) - 1.0);",Zn=Kn+"\n  return (x < 0.0) ? 0.0 : x;\n",Jn=Kn+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",er="return x;",tr="return 1.0 / (1.0 + exp(-1.0 * x));",nr="return x;",rr="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",ar="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",sr="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",or="return 1.0 / (1.0 + exp(-1.0 * x));";class ir{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cr{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=$n("rc",t),r=Ut(t),a=An(t,n),s=n.slice(-2),o=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${o}));\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ur=s["kernel_impls"].whereImpl,lr=1e-7,dr=1e-4,pr={};function fr(e){return e in pr||(pr[e]={}),pr[e]}const hr=128,mr=600;function br(){return null==Object(s["env"])().global.screen?1024:Object(s["env"])().global.screen.height*Object(s["env"])().global.screen.width*window.devicePixelRatio*mr/1024/1024}class gr extends s["KernelBackend"]{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Object(s["env"])().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=u(Object(s["env"])().getNumber("WEBGL_VERSION"));this.binaryCache=fr(Object(s["env"])().getNumber("WEBGL_VERSION")),this.gpgpu=new et(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new Bn(this.gpgpu),this.numMBBeforeWarning=br(),this.texData=new s["DataStorage"](this,Object(s["engine"])())}nextDataId(){return gr.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Object(s["env"])().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(s["env"])().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:f.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){const t=this.texData.get(e);return t.refCount}return 0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,n,r,a){if(Object(s["env"])().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:f.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:o,shape:i,isPacked:c}=t;if(null!=o){let t;t=c?new ir(i,er):new qn(i,er);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,d;if(u&&(l=s["util"].now()),"complex64"===r){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);d=s["backend_util"].mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=s["util"].now()-l),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:o,complexTensorInfos:i,isPacked:c}=t;if(null!=a){let t;t=c?new ir(r,er):new qn(r,er);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:o}],o),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(!Object(s["env"])().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(s["env"])().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,d=null;if("complex64"!==o&&Object(s["env"])().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);d=this.gpgpu.createBufferFromTexture(t.texture,...g(r))}if(this.pendingRead.set(e,[]),"complex64"!==o&&await this.gpgpu.createAndWaitForFence(),"complex64"===o){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];l=s["backend_util"].mergeRealAndImagArrays(t,n)}else if(null==d)l=this.getValuesFromTexture(e);else{const e=s["util"].sizeFromShape(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}null!=u&&this.disposeIntermediateTensorInfo(u);const p=this.convertAndCacheOnCPU(e,l),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(e=>e(p)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Object(s["engine"])().removeDataId(e,this),this.pendingDeletes--),p}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>s["util"].decodeString(e))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(s["buffer"])(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!N(n)){if(Object(s["env"])().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=s["util"].sizeFromShape(t);if(Object(s["env"])().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...g(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const o=Object(s["env"])().getBool("WEBGL_PACK")&&!0===r,i=o?ne(t):t,c=o?new Ce(i):new Se(i),u=this.runWebGLProgram(c,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),d}timerAvailable(){return Object(s["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=s["util"].flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),o=s["util"].flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Object(s["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);i["kernelMs"]=s["util"].sum(e),i["getExtraProfileInfo"]=()=>e.map((e,t)=>({name:o[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else i["kernelMs"]={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(s["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:s["util"].now(),endMs:null}}endTimer(e){return Object(s["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=s["util"].now(),e)}async getQueryTime(e){if(Object(s["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=hr){return Object(s["env"])().getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&s["util"].sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){s["backend_util"].warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return ur(e.shape,t)}packedUnaryOp(e,t,n){const r=new ir(e.shape,t),a=this.compileAndRun(r,[e],n);return Object(s["engine"])().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=On(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Object(s["env"])().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Yn,e.dtype);const t=new qn(e.shape,Yn),n=this.compileAndRun(t,[e]);return Object(s["engine"])().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&s["util"].isString(n[0])){const a=n.map(e=>s["util"].encodeString(e));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Object(s["engine"])().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new cr(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Rn(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){const n=[ee(e.shape),...te(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[ee(t),...te(t)],s=new Ln(a,n),o=!0,i=this.runWebGLProgram(s,[r],e.dtype,null,o);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,s=ne(r);let o;o=n?new Te(s):new je(s);const i=!0,c=this.runWebGLProgram(o,[{shape:s,dtype:a,dataId:e}],a,null,i);return{dtype:a,shape:r,dataId:c.dataId}}runWebGLProgram(e,t,n,r,a=!1){const o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===p.DENSE){const t=g(e.outputShape);i.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===s["util"].sizeFromShape(o.shape))return i.values=s["util"].getTypedArrayFromDType(o.dtype,0),o;const c=[],u=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&s["util"].sizeFromShape(t.shape)<=Object(s["env"])().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),c.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!se(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),c.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(o.dataId);const l={shape:o.shape,texData:i,isUniform:!1},d=Yt(e,u,l),f=this.getAndSaveBinary(d,()=>qt(this.gpgpu,e,u,l)),h=null!=this.activeTimers;let m;h&&(m=this.startTimer()),Xt(this.gpgpu,f,u,l,r),c.forEach(e=>this.disposeIntermediateTensorInfo(e)),h&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const b=Object(s["env"])().get("WEBGL_FLUSH_THRESHOLD");if(b>0){const e=s["util"].now();e-this.lastGlFlushTime>b&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Object(s["env"])().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,r,a=!1){n=n||t[0].dtype;const s=this.runWebGLProgram(e,t,n,r,a);return s}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(s["env"])().getBool("IS_TEST")){const e=Object.keys(this.binaryCache);e.forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(s["tidy"])(()=>{if(!Object(s["env"])().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Object(s["env"])().getBool("DEBUG");Object(s["env"])().set("DEBUG",!1);const t=this.abs(Object(s["scalar"])(1e-8)).dataSync()[0];if(Object(s["env"])().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?lr:dr}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:o,usage:i,isPacked:c}=t;if(null!=o)return;const u=null!=this.activeTimers;let l;u&&(l=s["util"].now());let d=t.texShape;if(null==d&&(d=re(n,c),t.texShape=d),null!=a){const e=ne(n);let o,i=d[1],p=d[0];const h=a instanceof Uint8Array;c?([i,p]=y(d[0],d[1]),o=new $e(e,[p,i],h)):o=new Ee(e,[p,i],h);const m=this.makeTensorInfo([p,i],r);this.texData.get(m.dataId).usage=h?f.PIXELS:f.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(m.dataId),i,p,a);const b=!0,g=this.runWebGLProgram(o,[m],r,null,b),x=this.texData.get(g.dataId);t.texture=x.texture,t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,this.disposeIntermediateTensorInfo(m),this.texData.delete(g.dataId),t.values=null,u&&(this.uploadWaitMs+=s["util"].now()-l)}else{const e=this.acquireTexture(d,i,r,c);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=yr(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*s["util"].bytesPerElement(t)}}function yr(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype "+t)}
/** @license See the LICENSE file. */gr.nextDataId=0;const xr="3.6.0";
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Or(){Object(s["env"])().set("WEBGL_FORCE_F16_TEXTURES",!0)}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */s["device_util"].isBrowser()&&Object(s["registerBackend"])("webgl",()=>new gr,2);const vr={forceHalfFloat:Or},kr="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wr{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=s["backend_util"].assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ir="\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n";class Nr{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s["backend_util"].assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;let o="";if(r)if(0===a||1===s["util"].sizeFromShape(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=Ut(a);if(o=`\n          ${e} coords = getOutputCoords();\n        `,1===a)o+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=$n("coords",a);o+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${o}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jr(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Tr={kernelName:s["Identity"],backendName:"webgl",kernelFunc:jr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sr(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(s.dataId),i=jr({inputs:{x:r},backend:n}),c=jr({inputs:{x:a},backend:n});return o.complexTensorInfos={real:i,imag:c},s}const Cr={kernelName:s["Complex"],backendName:"webgl",kernelFunc:Sr},Er="return (a < 0.) ? b * a : a;",$r="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ar(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:o}=r,i=n.makeTensorInfo([],"float32",s["util"].createScalarValue(o,"float32")),c=Object(s["env"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Nr($r,a.shape,i.shape):new wr(Er,a.shape,i.shape),u=n.runWebGLProgram(c,[a,i],a.dtype);return n.disposeIntermediateTensorInfo(i),u}const Rr={kernelName:s["LeakyRelu"],backendName:"webgl",kernelFunc:Ar},_r="return (a < 0.) ? b * a : a;",Fr="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dr(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,o=Object(s["env"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Nr(Fr,r.shape,a.shape):new wr(_r,r.shape,a.shape);return n.runWebGLProgram(o,[r,a],r.dtype)}const Mr={kernelName:s["Prelu"],backendName:"webgl",kernelFunc:Dr},Lr="if (isnan(x)) return x;",Pr="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n",Br="\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zr({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:o})=>{const{x:i}=a,c=o,u=r||i.dtype;if(c.shouldExecuteOnCPU([i])&&null!=n){const e=c.texData.get(i.dataId),t=n(e.values,u);return c.makeTensorInfo(i.shape,u,t)}const l=Object(s["env"])().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t;let d;return d=l?new ir(i.shape,t):new qn(i.shape,e),c.runWebGLProgram(d,[i],u)}}function Vr({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:o}){return({inputs:i,backend:c})=>{const{a:u,b:l}=i,d=c;if(r&&"complex64"===u.dtype){const t=d.texData.get(u.dataId),n=d.texData.get(l.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},o={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new wr(e,u.shape,l.shape);return d.runWebGLProgram(i,[a,o],Object(s["upcastType"])(n.dtype,r.dtype))}),o=Sr({inputs:{real:r,imag:a},backend:d});return d.disposeIntermediateTensorInfo(r),d.disposeIntermediateTensorInfo(a),o}const p=o||Object(s["upcastType"])(u.dtype,l.dtype);if(d.shouldExecuteOnCPU([u,l])&&null!=a){const e=d.texData.get(u.dataId),t=d.texData.get(l.dataId),[n,r]=a(u.shape,l.shape,e.values,t.values,p),s=d.makeTensorInfo(r,p),o=d.texData.get(s.dataId);return o.values=n,s}const f=Object(s["env"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t;let h;return h=f?new Nr(t,u.shape,l.shape,n):new wr(e,u.shape,l.shape),d.runWebGLProgram(h,[u,l],p)}}function Wr(e,t=!1){if("linear"===e)return t?nr:Xn;if("relu"===e)return t?ar:Zn;if("elu"===e)return t?rr:Qn;if("relu6"===e)return t?sr:Jn;if("prelu"===e)return t?Fr:_r;if("leakyrelu"===e)return t?$r:Er;if("sigmoid"===e)return t?or:tr;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ur{constructor(e,t,n,r=!1,a=!1,s=!1,o=null,i=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?e[1]:e[2],l=Math.ceil(u/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",b="";o&&(m=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${o}\n        }`:c?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${o}\n        }`:`vec4 activation(vec4 x) {\n          ${o}\n        }`,b="result = activation(result);");const g=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${y};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${f[0]} * ${h[0]});\n          result += (${f[1]} * ${h[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${b}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gr={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class Hr{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=s["backend_util"].assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qr="return a * b;";function Kr(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,o=s["backend_util"].upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new Hr(Gr.REAL,r.shape,a.shape),o=new Hr(Gr.IMAG,r.shape,a.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],c=n.runWebGLProgram(s,i,"float32"),u=n.runWebGLProgram(o,i,"float32"),l=Sr({inputs:{real:c,imag:u},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),l}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[s,i]=mn(r.shape,a.shape,e.values,t.values,o),c=n.makeTensorInfo(i,o),u=n.texData.get(c.dataId);return u.values=s,c}let i;return i=Object(s["env"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Nr(qr,r.shape,a.shape):new wr(qr,r.shape,a.shape),n.runWebGLProgram(i,[r,a],o)}const Xr={kernelName:s["Multiply"],backendName:"webgl",kernelFunc:Kr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yr(e,t,n){const r=[ee(e.shape),...te(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[ee(t),...te(t)],o=new Ln(s,r),i=!0,c=n.runWebGLProgram(o,[a],e.dtype,null,i);return{dataId:c.dataId,shape:t,dtype:c.dtype}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qr(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:o}=r,i=n,c=s["util"].sizeFromShape(a.shape),u=s["util"].inferFromImplicitShape(o,c),l=s["util"].sizeFromShape(u);s["util"].assert(c===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${a.shape}) has ${c} elements. The new shape and old shape must have the same number of elements.`);const d=i.texData.get(a.dataId);return!d.isPacked||se(a.shape,u)||null!==d.texture&&se(d.shape,u)?(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):Yr(a,u,i)}const Zr={kernelName:s["Reshape"],backendName:"webgl",kernelFunc:Qr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jr{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:o}=e;this.outputShape=[r,o];const i=4*Math.floor(n/4),c=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${s["util"].isInt(e)?e.toPrecision(2):e}, ones);`}let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===c}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ea{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let c=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?c="sumValue":"prod"===t?c="prodValue":"all"===t?c="allValue":"any"===t&&(c="anyValue");const u=4*Math.floor(n/4),l=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n      }\n    `,p="vec4";"all"===t?(o="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(o="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let f="";a%n>0&&(f=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${f}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${o});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${c});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ta(e){const t=[];while(0===t.length||1!==t[t.length-1].outSize){const n=t.length?t[t.length-1].outSize:e[1],r=s["backend_util"].computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}function na(e,t,n,r){const a=ta(e.shape);let s=e;for(let o=0;o<a.length;o++){const{inSize:i,windowSize:c,outSize:u}=a[o];let l,d;l="mean"===n?0===o?new Jr({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:u},i):new Jr({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:u}):new ea({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:u},n),d=s,s=r.runWebGLProgram(l,[s],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return s}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ra{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const r=Ut(this.rank),a=aa(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}function aa(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sa{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Ut(this.rank),a=En("rc",this.rank),s=new Array(this.rank);for(let u=0;u<t.length;u++)s[t[u]]=a[u];const o=`vec2(${s.slice(-2).join()})`,i=`++${a[this.rank-1]} < ${n[this.rank-1]}`,c=`getChannel(getA(${s.join()}), ${o})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${c};\n      if(${i}) {\n        result[1] = ${c};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${c};\n        if(${i}) {\n          result[3] = ${c};\n        }\n      }\n      setOutput(result);\n    }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oa(e,t,n){const r=Object(s["env"])().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sa(e.shape,t):new ra(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ia(e,t,n,r){const a=t,o=e.shape.length,i=s["util"].parseAxisParam(a,e.shape);let c=i;const u=s["backend_util"].getAxesPermutation(c,o),l=null!=u;let d=e;l&&(d=oa(e,u,r),c=s["backend_util"].getInnerMostAxes(c.length,o)),s["backend_util"].assertAxesAreInnerMostDims("sum",c,o);const[p,f]=s["backend_util"].computeOutAndReduceShapes(d.shape,c);let h=p;n&&(h=s["backend_util"].expandShapeToKeepDim(p,i));const m=s["util"].sizeFromShape(f),b=s["util"].sizeFromShape(e.shape),g=b/m,y=Qr({inputs:{x:d},attrs:{shape:[g,m]},backend:r}),x=Object(s["sumOutType"])(e.dtype),O=na(y,x,"sum",r),v=Qr({inputs:{x:O},attrs:{shape:h},backend:r});return r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(O),l&&r.disposeIntermediateTensorInfo(d),v}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ca(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r;return ia(a,s,o,n)}const ua={kernelName:s["Sum"],backendName:"webgl",kernelFunc:ca};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function la(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,o=n,i=a.shape.length,c=new Array(i);for(let l=0;l<c.length;l++)c[l]=a.shape[s[l]];let u;if(o.shouldExecuteOnCPU([a])){const e=o.texData.get(a.dataId),t=e.values,n=Sn(t,a.shape,a.dtype,s,c);u=o.makeTensorInfo(c,a.dtype);const r=o.texData.get(u.dataId);r.values=n}else u=oa(a,s,o);return u}const da={kernelName:s["Transpose"],backendName:"webgl",kernelFunc:la},pa=1e3;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fa({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:u=null}){const l=e.shape.length,d=t.shape.length,p=n?e.shape[l-2]:e.shape[l-1],f=r?t.shape[d-1]:t.shape[d-2],h=n?e.shape[l-1]:e.shape[l-2],m=r?t.shape[d-2]:t.shape[d-1],b=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=s["util"].sizeFromShape(b),x=s["util"].sizeFromShape(g),O=y===x||1===y||1===x;s["util"].assert(l>=2&&d>=2&&O,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${b}) and (${g}).`);const v=y>x?e.shape.slice(0,-2):t.shape.slice(0,-2),k=v.concat([h,m]);s["util"].assert(p===f,()=>`Error in matMul: inner shapes (${p}) and (${f}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);const w=n?[y,p,h]:[y,h,p],I=r?[x,m,f]:[x,f,m],N=Qr({inputs:{x:e},backend:a,attrs:{shape:w}}),j=Qr({inputs:{x:t},backend:a,attrs:{shape:I}}),T=[N,j],S=Math.max(y,x),C=n?N.shape[1]:N.shape[2],E=null!=o,$=null!=i,A="leakyrelu"===u,R=null!=u?Wr(u,!0):null,_=E||$||A||null!=R;let F;if((1===h||1===m)&&C>pa&&!1===_){let e=N,t=j;n&&(e=la({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),T.push(e)),r&&(t=la({inputs:{x:j},backend:a,attrs:{perm:[0,2,1]}}),T.push(t));const s=1!==m,o=1===m;let i=e;s&&(i=Qr({inputs:{x:e},backend:a,attrs:{shape:[S,C,1]}}),T.push(i));const c=1===m?2:1;let u=t;o&&(u=Qr({inputs:{x:t},backend:a,attrs:{shape:[S,1,C]}}),T.push(u));const l=Kr({inputs:{a:i,b:u},backend:a});F=ca({inputs:{x:l},backend:a,attrs:{axis:c,keepDims:!0}}),T.push(l)}else{const u=Object(s["upcastType"])(e.dtype,t.dtype),l=new Ur(w,I,[S,h,m],n,r,E,R,$,A),d=[N,j];if(null!=o&&d.push(o),$&&d.push(i),A){const e=a.makeTensorInfo([],"float32",s["util"].createScalarValue(c,"float32"));d.push(e),T.push(e)}F=a.runWebGLProgram(l,d,u)}const D=Qr({inputs:{x:F},backend:a,attrs:{shape:k}});T.push(F);for(const s of T)a.disposeIntermediateTensorInfo(s);return D}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ha(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=r;return fa({a:a,b:s,transposeA:c,transposeB:u,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:l})}const ma={kernelName:s["_FusedMatMul"],backendName:"webgl",kernelFunc:ha},ba="return abs(x);";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ga(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=On(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=Object(s["env"])().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new ir(r.shape,ba):new qn(r.shape,ba),n.runWebGLProgram(a,[r],r.dtype)}const ya={kernelName:s["Abs"],backendName:"webgl",kernelFunc:ga},xa=Kn+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n",Oa=zr({opSnippet:xa}),va={kernelName:s["Acos"],backendName:"webgl",kernelFunc:Oa},ka=Kn+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));",wa=zr({opSnippet:ka}),Ia={kernelName:s["Acosh"],backendName:"webgl",kernelFunc:wa},Na="return a + b;",ja=Vr({opSnippet:Na,packedOpSnippet:Na,supportsComplex:!0,cpuKernelImpl:Zt}),Ta={kernelName:s["Add"],backendName:"webgl",kernelFunc:ja};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Sa{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);const n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ca{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);const n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ea(e){const{inputs:t,backend:n}=e,r=t;if(1===r.length)return jr({inputs:{x:r[0]},backend:n});if(r.length>Object(s["env"])().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(r.length/2),t=Ea({inputs:r.slice(0,e),backend:n}),a=Ea({inputs:r.slice(e),backend:n});return Ea({inputs:[t,a],backend:n})}const a=r.map(e=>e.dtype).reduce((e,t)=>Object(s["upcastType"])(e,t)),o=r.map(e=>e.shape),i=Object(s["env"])().getBool("WEBGL_PACK"),c=i?new Ca(r[0].shape,o):new Sa(r[0].shape,o);return n.runWebGLProgram(c,r,a)}const $a={kernelName:s["AddN"],backendName:"webgl",kernelFunc:Ea};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aa(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r,c=a.shape.length,u=s["util"].parseAxisParam(o,a.shape);let l=u;const d=s["backend_util"].getAxesPermutation(l,c);let p=a;null!=d&&(p=la({inputs:{x:a},backend:n,attrs:{perm:d}}),l=s["backend_util"].getInnerMostAxes(l.length,c)),s["backend_util"].assertAxesAreInnerMostDims("all",l,c);const[f,h]=s["backend_util"].computeOutAndReduceShapes(p.shape,l),m=s["util"].sizeFromShape(h),b=Qr({inputs:{x:p},backend:n,attrs:{shape:[-1,m]}}),g=na(b,b.dtype,"all",n);let y;if(i){const e=s["backend_util"].expandShapeToKeepDim(f,u);y=Qr({inputs:{x:g},backend:n,attrs:{shape:e}})}else y=Qr({inputs:{x:g},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),y}const Ra={kernelName:s["All"],backendName:"webgl",kernelFunc:Aa};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _a(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r,c=a.shape.length,u=s["util"].parseAxisParam(o,a.shape);let l=u;const d=s["backend_util"].getAxesPermutation(l,c);let p=a;null!=d&&(p=la({inputs:{x:a},backend:n,attrs:{perm:d}}),l=s["backend_util"].getInnerMostAxes(l.length,c)),s["backend_util"].assertAxesAreInnerMostDims("any",l,c);const[f,h]=s["backend_util"].computeOutAndReduceShapes(p.shape,l),m=s["util"].sizeFromShape(h),b=Qr({inputs:{x:p},backend:n,attrs:{shape:[-1,m]}}),g=na(b,b.dtype,"any",n);let y;if(i){const e=s["backend_util"].expandShapeToKeepDim(f,u);y=Qr({inputs:{x:g},backend:n,attrs:{shape:e}})}else y=Qr({inputs:{x:g},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),y}const Fa={kernelName:s["Any"],backendName:"webgl",kernelFunc:_a};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Da{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${i};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ma{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,s["util"].assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const a=e[e.length-1],o=Math.ceil(a/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,c=i.length,u=Ut(c),l=$n("coords",c);let d,p;if(1===o){p=c+1;const e=Ut(p);d=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[c-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[c-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[c-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[c-2]};`}else p=c,d=`\n        ${u} sourceLocR = coords;\n        ++${l[c-1]};\n        ${u} sourceLocG = coords;\n        ++${l[c-2]};\n        ${u} sourceLocA = coords;\n        --${l[c-1]};\n        ${u} sourceLocB = coords;\n        --${l[c-2]};`;const f=["x","y","z","w","u","v"].slice(0,p),h="."+f[p-1],m=f.map(e=>"int "+e),b=$n("sourceLocR",p-1).concat("inIdx.r"),g=$n("sourceLocG",p-1).concat("inIdx.g"),y=$n("sourceLocB",p-1).concat("inIdx.b"),x=$n("sourceLocA",p-1).concat("inIdx.a"),O="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(\n            getAChannel(${b.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,w=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${f.join()}),\n                                          vec2(${f.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${f.join()}),\n                               vec2(${f.slice(-2).join()}));\n      }\n      ${w}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[c-1]} < ${i[c-1]-1};\n        bool hasNextRow = ${l[c-2]} < ${i[c-2]-1};\n        ${d}\n        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},\n          sourceLocB${h}, sourceLocA${h}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${O}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function La(e,t,n,r=null){let a=t.shape[0],o=t.shape[1];null!=r&&(a=r.shape[0],o=r.shape[1]);const i=s["backend_util"].computeOptimalWindowSize(o),c={windowSize:i,inSize:o,batchSize:a,outSize:Math.ceil(o/i)},u=new Da(c,n,null==r),l=[t];null!=r&&l.push(r);const d=e.runWebGLProgram(u,l,"int32");if(1===d.shape[1])return d;const p=La(e,t,n,d);return e.disposeIntermediateTensorInfo(d),p}function Pa(e,t,n,r=null){const a=null!=r?r.shape:t.shape,o=a[a.length-1],i=s["backend_util"].computeOptimalWindowSize(o),c=new Ma(a,i,n,null==r),u=null==r?[t]:[t,r],l=e.runWebGLProgram(c,u,"int32");if(l.shape.length===t.shape.length){const r=Pa(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function Ba(e,t,n,r){const a=[n];if(s["backend_util"].assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Object(s["env"])().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[o,i]=s["backend_util"].computeOutAndReduceShapes(t.shape,a),c=s["util"].sizeFromShape(i),u=Qr({inputs:{x:t},backend:e,attrs:{shape:[-1,c]}});n.push(u);const l=La(e,u,r);n.push(l);const d=Qr({inputs:{x:l},backend:e,attrs:{shape:o}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),d}return Pa(e,t,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function za(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o}=r;let i=s["util"].parseAxisParam(o,a.shape);const c=s["backend_util"].getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=c&&(u=la({inputs:{x:a},backend:n,attrs:{perm:c}}),l.push(u),i=s["backend_util"].getInnerMostAxes(i.length,u.shape.length)),s["backend_util"].assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);const d=Ba(n,u,i[0],"max");return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}const Va={kernelName:s["ArgMax"],backendName:"webgl",kernelFunc:za};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wa(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o}=r;let i=s["util"].parseAxisParam(o,a.shape);const c=s["backend_util"].getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=c&&(u=la({inputs:{x:a},backend:n,attrs:{perm:c}}),l.push(u),i=s["backend_util"].getInnerMostAxes(i.length,u.shape.length)),s["backend_util"].assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);const d=Ba(n,u,i[0],"min");return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}const Ua={kernelName:s["ArgMin"],backendName:"webgl",kernelFunc:Wa},Ga=Kn+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n",Ha=zr({opSnippet:Ga}),qa={kernelName:s["Asin"],backendName:"webgl",kernelFunc:Ha},Ka=Kn+"return log(x + sqrt(x * x + 1.0));",Xa=zr({opSnippet:Ka}),Ya={kernelName:s["Asinh"],backendName:"webgl",kernelFunc:Xa},Qa=Kn+"\n  return atan(x);\n",Za=zr({opSnippet:Qa}),Ja={kernelName:s["Atan"],backendName:"webgl",kernelFunc:Za},es=Pr+"\n  return atan(a, b);\n",ts="\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+Br+"\n  return result;\n",ns=Vr({opSnippet:es,packedOpSnippet:ts}),rs={kernelName:s["Atan2"],backendName:"webgl",kernelFunc:ns},as=Kn+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;",ss=zr({opSnippet:as}),os={kernelName:s["Atanh"],backendName:"webgl",kernelFunc:ss};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class is{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,c=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const h="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,b=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let g="0.0";if(h||(g="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${o}, ${i});\n        const ivec2 pads = ivec2(${p}, ${f});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${l};\n              wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:b:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}const y="max";let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");const O=4*Math.floor(s/4),v=s%4,k=`\n      if (${h}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${y}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${i});\n      const ivec2 pads = ivec2(${p}, ${f});\n      const float initializationValue = ${g};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${g});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${l};\n            wR += ${c}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${O}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${k}\n          }\n\n          int xC = xCCorner + ${O};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${k}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class cs{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,c=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,h=e.effectiveFilterWidth,m=e.padInfo.front,b=e.padInfo.top,g=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${o}, ${i}, ${c});\n        const ivec3 pads = ivec3(${m}, ${b}, ${g});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${f};\n                wR += ${l}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${h};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${h} +\n                      wR * ${h} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}const O="max";let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const k=4*Math.floor(s/4),w=s%4,I=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${O}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${o}, ${i}, ${c});\n      const ivec3 pads = ivec3(${m}, ${b}, ${g});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${f};\n            wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${k}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${k};\n            if (${1===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function us(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Oe(a,"avgPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:u}=r,l=1;s["util"].assert(s["backend_util"].eitherStridesOrDilationsAreOne(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const d=s["backend_util"].computePool2DInfo(a.shape,o,i,l,c,u);if(1===d.filterWidth&&1===d.filterHeight&&s["util"].arraysEqual(d.inShape,d.outShape))return jr({inputs:{x:a},backend:n});const p=new is(d,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}const ls={kernelName:s["AvgPool"],backendName:"webgl",kernelFunc:us};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ds(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:u,dataFormat:l}=r,d=[1,1,1],p=s["backend_util"].computePool3DInfo(a.shape,o,i,d,c,u,l),f=new cs(p,"avg",!1);return n.runWebGLProgram(f,[a],"float32")}const ps={kernelName:s["AvgPool3D"],backendName:"webgl",kernelFunc:ds};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fs{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,c=e.effectiveFilterWidth,u=i-1-e.padInfo.top,l=c-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${l});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${c};\n            wC+= ${o}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class hs{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=l-1-e.padInfo.front,h=d-1-e.padInfo.top,m=p-1-e.padInfo.left,b=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${f}, ${h}, ${m});\n      const float avgMultiplier = float(${b});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n            wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${c}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ms(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o}=t,i=o,{filterSize:c,strides:u,pad:l,dimRoundingMode:d}=r,p=[1,1,1],f=s["backend_util"].computePool3DInfo(i.shape,c,u,p,l,d),h=new hs(f);return n.runWebGLProgram(h,[a],i.dtype)}const bs={kernelName:s["AvgPool3DGrad"],backendName:"webgl",kernelFunc:ms};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gs(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o}=t,i=o;Oe([a,o],"avgPoolGrad");const{filterSize:c,strides:u,pad:l}=r,d=s["backend_util"].computePool2DInfo(i.shape,c,u,1,l),p=new fs(d);return n.runWebGLProgram(p,[a],i.dtype)}const ys={kernelName:s["AvgPoolGrad"],backendName:"webgl",kernelFunc:gs};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xs(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:o,transposeB:i}=r;return fa({a:a,b:s,transposeA:o,transposeB:i,backend:n})}const Os={kernelName:s["BatchMatMul"],backendName:"webgl",kernelFunc:xs};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vs{constructor(e,t,n,r,a,o){this.outputShape=[],this.variableNames=["x","mean","variance"],s["backend_util"].assertAndGetBroadcastShape(e,t),s["backend_util"].assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(s["backend_util"].assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="1.0";null!=a&&(s["backend_util"].assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${c};\n        float inv = scale * inversesqrt(variance + float(${o}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ks{constructor(e,t,n,r,a,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],s["backend_util"].assertAndGetBroadcastShape(e,t),s["backend_util"].assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(s["backend_util"].assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="vec4(1.0)";null!=a&&(s["backend_util"].assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${c};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${o}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ws=({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:o,offset:i,scale:c}=e;s["util"].assert(a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),s["util"].assert(null==i||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),s["util"].assert(null==c||a.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,a,o];let d=null;null!=i&&(d=i.shape,l.push(i));let p=null;null!=c&&(p=c.shape,l.push(c));const f=Object(s["env"])().getBool("WEBGL_PACK_NORMALIZATION")?new ks(r.shape,a.shape,o.shape,d,p,u):new vs(r.shape,a.shape,o.shape,d,p,u),h=t.runWebGLProgram(f,l,l[0].dtype);return h},Is={kernelName:s["FusedBatchNorm"],backendName:"webgl",kernelFunc:ws};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ns{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Ut(this.rank),n=`uniform int start[${this.rank}];`,r=Ts(this.rank);let a;const s=e.map((e,t)=>`sourceLoc.${js[t]} = start[${t}] + coords.${js[t]};`);a=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${s.join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${a}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const js=["x","y","z","w","u","v"];function Ts(e){if(1===e)return"sourceLoc";if(e<=6)return js.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ss{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=Ut(this.rank),n=$n("coords",this.rank),r=$n("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,o=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,c=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${c}\n        vec4 result = vec4(0.);\n        ${o}\n        ${i}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cs(e,t,n,r){const a=r.texData.get(e.dataId),o=r.makeTensorInfo(n,e.dtype),i=r.texData.get(o.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let c=s["slice_util"].computeFlatOffset(t,s["util"].computeStrides(e.shape));a.slice&&(c+=a.slice.flatOffset),i.slice={flatOffset:c,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),o}function Es(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:o,size:i}=r,[c,u]=s["slice_util"].parseSliceParams(a,o,i);if(s["slice_util"].assertParamsValid(a,c,u),0===s["util"].sizeFromShape(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=vn(e.values,c,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:l}=n.texData.get(a.dataId),d=s["slice_util"].isSliceContinous(a.shape,c,u);if(l||!d){const e=Object(s["env"])().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ss(u):new Ns(u),t=e.getCustomSetupFunc(c);return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),Cs(a,c,u,n)}const $s={kernelName:s["Slice"],backendName:"webgl",kernelFunc:Es},As=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:o,crops:i}=r;s["util"].assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const c=o.reduce((e,t)=>e*t),u=s["backend_util"].getReshaped(a.shape,o,c),l=s["backend_util"].getPermuted(u.length,o.length),d=s["backend_util"].getReshapedPermuted(a.shape,o,c),p=s["backend_util"].getSliceBeginCoords(i,o.length),f=s["backend_util"].getSliceSize(d,i,o.length),h=[],m=Qr({inputs:{x:a},backend:n,attrs:{shape:u}}),b=la({inputs:{x:m},backend:n,attrs:{perm:l}}),g=Qr({inputs:{x:b},backend:n,attrs:{shape:d}}),y=Es({inputs:{x:g},backend:n,attrs:{begin:p,size:f}});return h.push(m),h.push(b),h.push(g),h.forEach(e=>n.disposeIntermediateTensorInfo(e)),y},Rs={kernelName:s["BatchToSpaceND"],backendName:"webgl",kernelFunc:As};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _s(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o}=r,i=n.readSync(a.dataId),c=n.readSync(s.dataId),u=Jt(i,c,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,u)}const Fs={kernelName:s["Bincount"],backendName:"webgl",kernelFunc:_s},Ds="return float(a != b);",Ms=Vr({opSnippet:Ds,dtype:"bool"}),Ls={kernelName:s["NotEqual"],backendName:"webgl",kernelFunc:Ms};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ps(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return jr({inputs:{x:a.complexTensorInfos.real},backend:n})}const Bs={kernelName:s["Real"],backendName:"webgl",kernelFunc:Ps},zs="return float(int(x));";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vs(e,t){const n=new qn(e.shape,zs),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ws(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:o}=r;if("complex64"===o){if("complex64"===a.dtype)return jr({inputs:{x:a},backend:n});const e=s["zeros"](a.shape),t=Ws({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=Sr({inputs:{real:t,imag:e},backend:n});return e.dispose(),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=Ps({inputs:{input:a},backend:n}),t=Ws({inputs:{x:e},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(e),t}if(!s["util"].hasEncodingLoss(a.dtype,o)){const e=jr({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o)return Vs(a,n);if("bool"===o){const e=n.makeTensorInfo([],"bool",s["util"].getTypedArrayFromDType("bool",1)),t={a:a,b:e},r=Ms({inputs:t,backend:n});return n.disposeIntermediateTensorInfo(e),r}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${o}`)}const Us={kernelName:s["Cast"],backendName:"webgl",kernelFunc:Ws},Gs="return ceil(x);",Hs=zr({opSnippet:Gs,packedOpSnippet:Gs,cpuKernelImpl:tn}),qs={kernelName:s["Ceil"],backendName:"webgl",kernelFunc:Hs};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ks{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xs{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ys(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:o,clipValueMax:i}=r;let c;c=Object(s["env"])().getBool("WEBGL_PACK_CLIP")?new Xs(a.shape):new Ks(a.shape);const u=c.getCustomSetupFunc(o,i);return n.runWebGLProgram(c,[a],a.dtype,u)}const Qs={kernelName:s["ClipByValue"],backendName:"webgl",kernelFunc:Ys};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zs{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Js(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function eo(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new Zs(r.shape),o=[Js(r,a.complexTensorInfos.real),Js(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,o,o[0].dtype)}const to={kernelName:s["ComplexAbs"],backendName:"webgl",kernelFunc:eo};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class no{constructor(e){this.outputShape=[],this.outputShape=s["backend_util"].computeOutShape(e,1),this.variableNames=e.map((e,t)=>"T"+t);const t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){const e=t[s-1];n.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${e}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ro{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=s["backend_util"].computeOutShape(e,t);const n=this.outputShape,r=n.length,a=Ut(r),o=$n("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((e,t)=>"T"+t);const c=new Array(e.length-1);c[0]=e[0][t];for(let s=1;s<c.length;s++)c[s]=c[s-1]+e[s][t];const u=i[t],l=i.slice(-2),d=i.join();let p=`if (${u} < ${c[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${l.join()}));\n        }`;for(let s=1;s<c.length;s++){const e=c[s-1];p+=`\n        if (${u} < ${c[s]}  && ${u} >= ${c[s-1]}) {\n          return getChannel(\n            getT${s}(${ao(i,u,e)}),\n            vec2(${ao(l,u,e)}));\n        }`}const f=c.length,h=c[c.length-1];p+=`\n        return getChannel(\n          getT${f}(${ao(i,u,h)}),\n          vec2(${ao(l,u,h)}));`,this.userCode=`\n      float getValue(${i.map(e=>"int "+e)}) {\n        ${p}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${o}), 0., 0., 0.);\n\n        ${o[r-1]} = ${o[r-1]} + 1;\n        if (${o[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${o});\n        }\n\n        ${o[r-2]} = ${o[r-2]} + 1;\n        if (${o[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${o});\n        }\n\n        ${o[r-1]} = ${o[r-1]} - 1;\n        if (${o[r-2]} < ${n[r-2]} &&\n            ${o[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${o});\n        }\n        setOutput(result);\n      }\n    `}}function ao(e,t,n){const r=e.indexOf(t),a=e.map((e,t)=>t===r?`${e} - ${n}`:e);return a.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function so(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return jr({inputs:{x:a.complexTensorInfos.imag},backend:n})}const oo={kernelName:s["Imag"],backendName:"webgl",kernelFunc:so};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function io(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map(e=>Ps({inputs:{input:e},backend:n})),a=e.map(e=>so({inputs:{input:e},backend:n})),s=io(r,t,n),o=io(a,t,n),i=Sr({inputs:{real:s,imag:o},backend:n});return r.forEach(e=>n.disposeIntermediateTensorInfo(e)),a.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),i}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map(e=>{const r=s["util"].sizeFromShape(e.shape.slice(t)),a=[-1,r];return Qr({inputs:{x:e},backend:n,attrs:{shape:a}})}),o=a.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),i=s["backend_util"].computeOutShape(a.map(e=>e.shape),1),c=1===a[0].shape[0],u=nn(o,i,r,c),l=s["backend_util"].computeOutShape(e.map(e=>e.shape),t),d=n.makeTensorInfo(l,r,u);return a.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}if(e.length>Object(s["env"])().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=io(e.slice(0,r),t,n),s=io(e.slice(r),t,n),o=io([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}if(Object(s["env"])().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new ro(e.map(e=>e.shape),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:o,outShape:i}=co(e,t,n),c=new no(o.map(e=>e.shape)),u=n.runWebGLProgram(c,o,r);o.forEach(e=>n.disposeIntermediateTensorInfo(e));const l=Qr({inputs:{x:u},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(u),l}function co(e,t,n){const r=s["backend_util"].computeOutShape(e.map(e=>e.shape),t),a=e.map(e=>Qr({inputs:{x:e},attrs:{shape:[-1,s["util"].sizeFromShape(e.shape.slice(t))]},backend:n}));return{tensors2D:a,outShape:r}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uo(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,o=s["util"].parseAxisParam(a,t[0].shape)[0],i=s["backend_util"].computeOutShape(t.map(e=>e.shape),o);if(0===s["util"].sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const c=t.filter(e=>s["util"].sizeFromShape(e.shape)>0);if(1===c.length)return jr({inputs:{x:c[0]},backend:n});const u=c.map(e=>e.shape);return s["backend_util"].assertParamsConsistent(u,o),io(c,o,n)}const lo={kernelName:s["Concat"],backendName:"webgl",kernelFunc:uo};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class po{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,c=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=4*Math.floor(e.inChannels/4),h=e.inChannels%4,m="channelsLast"===e.dataFormat,b=m?1:2,g=m?2:3,y=m?3:1;let x="",O="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,O="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${i}, ${c});\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${b}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${f}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===h}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${f}) *\n                    getW(wR, wC, ${f}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${f}, xR, xC) *\n                    getW(wR, wC, ${f}, d2);\n              }\n\n            } else if (${2===h}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${f}, d2),\n                getW(wR, wC, ${f} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${f}),\n                  getX(batch, xR, xC, ${f} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${f}, xR, xC),\n                  getX(batch, ${f} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===h}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${f}, d2),\n                getW(wR, wC, ${f} + 1, d2),\n                getW(wR, wC, ${f} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${f}),\n                  getX(batch, xR, xC, ${f} + 1),\n                  getX(batch, xR, xC, ${f} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${f}, xR, xC),\n                  getX(batch, ${f} + 1, xR, xC),\n                  getX(batch, ${f} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${O}\n        setOutput(result);\n      }\n    `}}class fo{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,l=e.filterDepth,d=e.filterHeight,p=e.filterWidth,f=4*Math.floor(e.inChannels/4),h=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${o});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${l}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${c};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${f}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===h}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${f}) *\n                  getW(wF, wR, wC, ${f}, d2);\n              } else if (${2===h}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${f}),\n                  getX(batch, xF, xR, xC, ${f} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${f}, d2),\n                  getW(wF, wR, wC, ${f} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===h}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${f}),\n                  getX(batch, xF, xR, xC, ${f} + 1),\n                  getX(batch, xF, xR, xC, ${f} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${f}, d2),\n                  getW(wF, wR, wC, ${f} + 1, d2),\n                  getW(wF, wR, wC, ${f} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ho{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:a,strideWidth:s,strideHeight:o,padInfo:i,outWidth:c,dilationWidth:u,dilationHeight:l,dataFormat:d}=n,{left:p,top:f}=i,h=a*r,m=ke(),b="channelsLast"===d,g=b?0:1,y=b?1:2;let x="";for(let O=0;O<=1;O++)for(let n=0;n<=1;n++)x+=`\n          blockIndex = rc.y + ${n};\n          pos = rc.x + ${O};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${c})) * ${o} - ${f};\n            d0 = offsetY + ${l} * (pos / ${h});\n\n            if(d0 < ${t[g]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${c}.) * ${s}. - ${p}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${h}.) / ${a}.));\n\n              if(d1 < ${t[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${b}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*O+n}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*O+n}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mo({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}){const u=e.shape,l=r.texData.get(e.dataId),d=n.inChannels,p=u[0]*u[1]*u[2],f=n.outChannels,h="channelsLast"===n.dataFormat,m=!1,b=!1;let g;const y=[],x=(1===p||1===f)&&d>pa,O=u[2]%2!==0&&!!l.isPacked;if(!x&&Object(s["env"])().getBool("WEBGL_LAZILY_UNPACK")&&Object(s["env"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&O){const d=h?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),p={dataId:e.dataId,shape:[1,d,n.inChannels],dtype:e.dtype},f=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,s["util"].assert(se(l.shape,p.shape),()=>`packed reshape ${l.shape} to ${p.shape} isn't free`);const x=Qr({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(x);const O=fa({a:p,b:x,backend:r,transposeA:m,transposeB:b,bias:a,activation:c,preluActivationWeights:o,leakyreluAlpha:i}),v=r.texData.get(O.dataId);s["util"].assert(v.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=f,v.shape=n.outShape,g=jr({inputs:{x:O},backend:r}),g.shape=n.outShape,y.push(O)}else{const s=h?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],l=Qr({inputs:{x:e},backend:r,attrs:{shape:[1,s,n.inChannels]}}),d=Qr({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),p=fa({a:l,b:d,transposeA:m,transposeB:b,backend:r,bias:a,activation:c,preluActivationWeights:o,leakyreluAlpha:i});g=Qr({inputs:{x:p},backend:r,attrs:{shape:n.outShape}}),y.push(l),y.push(d),y.push(p)}for(const s of y)r.disposeIntermediateTensorInfo(s);return g}function bo({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}){const{filterWidth:u,filterHeight:l,inChannels:d,outWidth:p,outHeight:f,dataFormat:h}=n,m="channelsLast"===h,b=u*l*d,g=f*p,y=[b,g],x=!0,O=!1,v=[],k=Qr({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),w=Qr({inputs:{x:t},backend:r,attrs:{shape:[1,b,s["util"].sizeFromShape(t.shape)/b]}});v.push(k),v.push(w);const I=new ho(y,k.shape,n),N=r.runWebGLProgram(I,[k],"float32"),j=Qr({inputs:{x:N},backend:r,attrs:{shape:[1,y[0],y[1]]}});v.push(N),v.push(j);const T=null!=a,S=null!=o,C="leakyrelu"===c,E=c?Wr(c,!0):null,$=new Ur(j.shape,w.shape,[1,g,n.outChannels],x,O,T,E,S,C),A=[j,w];if(a&&A.push(a),S&&A.push(o),C){const e=r.makeTensorInfo([],"float32",s["util"].createScalarValue(i,"float32"));A.push(e),v.push(e)}const R=r.runWebGLProgram($,A,"float32"),_=m?[1,f,p,n.outChannels]:[1,n.outChannels,f,p],F=Qr({inputs:{x:R},backend:r,attrs:{shape:_}});v.push(R);for(const s of v)r.disposeIntermediateTensorInfo(s);return F}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function go(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:i,pad:c,dataFormat:u,dilations:l,dimRoundingMode:d}=r,p=s["backend_util"].convertConv2DDataFormat(u),f=s["backend_util"].computeConv2DInfo(a.shape,o.shape,i,l,c,d,!1,p);let h;if(1!==f.filterHeight||1!==f.filterWidth||1!==f.dilationHeight||1!==f.dilationWidth||1!==f.strideHeight||1!==f.strideWidth||"SAME"!==f.padInfo.type&&"VALID"!==f.padInfo.type)if(Object(s["env"])().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])h=bo({x:a,filter:o,convInfo:f,backend:n});else{const e=new po(f);h=n.runWebGLProgram(e,[a,o],"float32")}else h=mo({x:a,filter:o,convInfo:f,backend:n});const m=Qr({inputs:{x:h},backend:n,attrs:{shape:f.outShape}});return n.disposeIntermediateTensorInfo(h),m}const yo={kernelName:s["Conv2D"],backendName:"webgl",kernelFunc:go};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xo{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Oo{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,c=s?1:2,u=s?2:3,l=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${l}];\n\n        ivec2 dyCorner = ivec2(coords[${c}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class vo{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${o};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ko{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,c=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${i}, ${c}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wo(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:o}=t,{strides:i,pad:c,dataFormat:u,dimRoundingMode:l,filterShape:d}=r,p=s["backend_util"].convertConv2DDataFormat(u),f=s["backend_util"].computeConv2DInfo(a.shape,d,i,1,c,l,!1,p),h=new xo(f);return n.runWebGLProgram(h,[a,o],"float32")}const Io={kernelName:s["Conv2DBackpropFilter"],backendName:"webgl",kernelFunc:wo};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function No(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:o}=t,{inputShape:i,strides:c,pad:u,dataFormat:l,dimRoundingMode:d}=r,p=s["backend_util"].convertConv2DDataFormat(l),f=s["backend_util"].computeConv2DInfo(i,o.shape,c,1,u,d,!1,p),h=new Oo(f);return n.runWebGLProgram(h,[a,o],"float32")}const jo={kernelName:s["Conv2DBackpropInput"],backendName:"webgl",kernelFunc:No};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function To(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:i,pad:c,dilations:u}=r,l=s["backend_util"].computeConv3DInfo(a.shape,o.shape,i,u,c),d=new fo(l);return n.runWebGLProgram(d,[a,o],"float32")}const So={kernelName:s["Conv3D"],backendName:"webgl",kernelFunc:To};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Co(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:o}=t,{strides:i,pad:c,filterShape:u}=r,l=s["backend_util"].computeConv3DInfo(a.shape,u,i,1,c),d=new vo(l);return n.runWebGLProgram(d,[a,o],"float32")}const Eo={kernelName:s["Conv3DBackpropFilterV2"],backendName:"webgl",kernelFunc:Co};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $o(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:o}=t,{pad:i,strides:c,inputShape:u}=r,l=s["backend_util"].computeConv3DInfo(u,o.shape,c,1,i),d=new ko(l);return n.runWebGLProgram(d,[a,o],"float32")}const Ao={kernelName:s["Conv3DBackpropInputV2"],backendName:"webgl",kernelFunc:$o},Ro=Lr+"\n  return cos(x);\n",_o=zr({opSnippet:Ro}),Fo={kernelName:s["Cos"],backendName:"webgl",kernelFunc:_o},Do="\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n",Mo=zr({opSnippet:Do}),Lo={kernelName:s["Cosh"],backendName:"webgl",kernelFunc:Mo};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Po{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,c]=e,[u]=t,[l,d]=n;this.outputShape=[u,l,d,c];const p="bilinear"===r?1:0,[f,h]=[o-1+".0",i-1+".0"],[m,b,g]=l>1?[""+(o-1)/(l-1),"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+f],[y,x,O]=d>1?[""+(i-1)/(d-1),"(x2-x1) * width_ratio",`x1*${h} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+h];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${b};\n        float width_scale = ${x};\n\n        float in_y = ${g};\n        if( in_y < 0.0 || in_y > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${O};\n        if( in_x < 0.0 || in_x > ${h} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bo=e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:o}=t,{cropSize:i,method:c,extrapolationValue:u}=r,l=new Po(a.shape,s.shape,i,c,u);return n.runWebGLProgram(l,[a,s,o],"float32")},zo={kernelName:s["CropAndResize"],backendName:"webgl",kernelFunc:Bo};class Vo{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${Wo(r,"coords")})`,s=e[e.length-1];let o="",i="";t?(o=n?"end != "+(s-1):"end != 0",i=n?"end + 1":"end - 1"):(o=n?"end + pow2 < "+s:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${Ut(r)} coords = getOutputCoords();\n        int end = ${Uo(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${o}) {\n          int idx = ${i};\n          ${Uo(r,"coords")} = idx;\n          val += getX(${Wo(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function Wo(e,t){if(1===e)return""+t;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function Uo(e,t){if(1===e)return""+t;if(2===e)return t+".y";if(3===e)return t+".z";if(4===e)return t+".w";throw Error(`Cumulative sum for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Go(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,exclusive:i,reverse:c}=r,u=a.shape.length,l=s["backend_util"].getAxesPermutation([o],u);let d=a;null!=l&&(d=la({inputs:{x:a},backend:n,attrs:{perm:l}}));const p=s["backend_util"].getInnerMostAxes(1,u)[0];if(p!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=`+o);const f=d.shape[p];let h=jr({inputs:{x:d},backend:n});for(let s=0;s<=Math.ceil(Math.log2(f))-1;s++){const e=new Vo(d.shape,!1,c),t=e.getCustomSetupFunc(s),r=h;h=n.runWebGLProgram(e,[h],h.dtype,t),n.disposeIntermediateTensorInfo(r)}if(i){const e=new Vo(d.shape,i,c),t=h;h=n.runWebGLProgram(e,[h],h.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=s["backend_util"].getUndoAxesPermutation(l),t=la({inputs:{x:h},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),t}return h}const Ho={kernelName:s["Cumsum"],backendName:"webgl",kernelFunc:Go};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qo(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o,binaryOutput:i}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=Jt(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=en(e,t,o,i);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+a.shape.length+".")}const Ko={kernelName:s["DenseBincount"],backendName:"webgl",kernelFunc:qo};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xo{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yo(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:o,dataFormat:i}=r;s["util"].assert(o>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+o);const c=a.shape[0],u="NHWC"===i?a.shape[1]:a.shape[2],l="NHWC"===i?a.shape[2]:a.shape[3],d="NHWC"===i?a.shape[3]:a.shape[1],p=u*o,f=l*o,h=d/(o*o),m="NHWC"===i?[c,p,f,h]:[c,h,p,f],b=new Xo(m,o,i);return n.runWebGLProgram(b,[a],a.dtype)}const Qo={kernelName:s["DepthToSpace"],backendName:"webgl",kernelFunc:Yo};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zo{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.inHeight,o=e.inWidth,i=e.padInfo.top,c=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,d=e.dilationHeight,p=e.dilationWidth,f=e.filterHeight,h=e.filterWidth,m=e.outChannels/e.inChannels;let b="",g="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,g="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${u}, ${l});\n      const ivec2 pads = ivec2(${i}, ${c});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${f}; wR++) {\n          int xR = xRCorner + wR * ${d};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${p};\n\n            if (xC < 0 || xC >= ${o}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${g}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jo{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const o=e.outChannels/e.inChannels,i=e.inHeight,c=e.inWidth,u=e.padInfo.top,l=e.padInfo.left,d=e.strideHeight,p=e.strideWidth,f=e.dilationHeight,h=e.dilationWidth,m=e.filterHeight,b=e.filterWidth,g=b;let y="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let s=0;s<b;s++)y+=`\n          vec4 xTexelC${2*s};\n          int xTexelC${2*s}Ready;\n          vec4 xC${s};`;for(let k=0;k<m;k++){for(let e=0;e<b;e++)y+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xC${e} = vec4(0.0);`;y+=`\n        xR = xRCorner + ${k*f};\n        if (xR >=0 && xR < ${i}) {\n      `;for(let e=0;e<(g+1)/2;e++){const t=2*e,n=t*h;if(y+=`\n          xC = xCCorner + ${n};\n          `,1===p){if(t<b&&(l%2===1?(y+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < ${c} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${c}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n              `,y+=1===h&&n>0?`\n                xC${t} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < ${c}) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${c}) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${n}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                  }\n                  `):y+=`\n                if (xC >= 0 && xC < ${c} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${c}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xC${t} = xTexelC${n};\n                `,n+1<b)){const e=l%2===0?s["util"].nearestLargerEven(h):h;h%2===0&&l%2===1||h%2!==0&&l%2!==1?(y+=`\n                  xCOffset = xC + ${l%2} + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < ${c} && xTexelC${n+2}Ready == 0) {\n                    xTexelC${n+2} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${c}) {\n                      xTexelC${n+2}.zw = vec2(0.0);\n                    }\n                    xTexelC${n+2}Ready = 1;\n                  }\n                  `,h>1&&(y+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < ${c} && xTexelC${n}Ready == 0) {\n                      xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${n}Ready = 1;\n                    }\n                    `),y+=`\n                  xC${t+1} = vec4(xTexelC${n}.zw, xTexelC${n+2}.xy);\n                  `):y+=1===e?`\n                    xC${t+1} = xTexelC${n};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < ${c} && xTexelC${n+2}Ready == 0) {\n                      xTexelC${n+2} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= ${c}) {\n                        xTexelC${n+2}.zw = vec2(0.0);\n                      }\n                      xTexelC${n+2}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${n+2};\n                    `}}else n<b&&(l%2===1?(y+=`\n                xCOffset = xC + 1 - ${p};\n                if(xCOffset >= 0 && xCOffset < ${c} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${c}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${c} && xTexelC${n+2}Ready == 0) {\n                  xTexelC${n+2} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= ${c}) {\n                    xTexelC${n+2}.zw = vec2(0.0);\n                  }\n                  xTexelC${n+2}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${n}.zw, xTexelC${n+2}.zw);\n              `,n+1<b&&(y+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + ${p};\n                  if(xCOffset >= 0 && xCOffset < ${c}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${n+2}.xy, final.xy);\n                `)):(y+=`\n                if(xC >= 0 && xC < ${c} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${c}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xCOffset = xC + ${p};\n                if(xCOffset >= 0 && xCOffset < ${c} && xTexelC${n+2}Ready == 0) {\n                  xTexelC${n+2} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= ${c}) {\n                    xTexelC${n+2}.zw = vec2(0.);\n                  }\n                  xTexelC${n+2}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${n}.xy, xTexelC${n+2}.xy);\n              `,n+1<b&&(y+=`\n                  xC${t+1} = vec4(xTexelC${n}.zw, xTexelC${n+2}.zw);\n                `)));t<b&&(y+=`\n            wTexel = getW(${k}, ${n}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,n+1<b&&(y+=`\n              wTexel = getW(${k}, ${n+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}y+="\n        }\n      "}let x="",O="";n&&(x=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,O="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${d}, ${p});\n      const ivec2 pads = ivec2(${u}, ${l});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${y}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${v}\n        ${O}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ei(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:i,pad:c,dilations:u,dimRoundingMode:l}=r;let d=u;null==d&&(d=[1,1]),s["util"].assert(s["backend_util"].eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);const p=s["backend_util"].computeConv2DInfo(a.shape,o.shape,i,d,c,l,!0);let f;return f=Object(s["env"])().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?new Jo(p):new Zo(p),n.runWebGLProgram(f,[a,o],"float32")}const ti={kernelName:s["DepthwiseConv2dNative"],backendName:"webgl",kernelFunc:ei};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ni{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ri{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${i}; dm++) {\n              int d2 = d1 * ${i} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ai(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:o}=t,{strides:i,dilations:c,pad:u,dimRoundingMode:l,filterShape:d}=r,p=s["backend_util"].computeConv2DInfo(a.shape,d,i,c,u,l,!0),f=new ni(p);return n.runWebGLProgram(f,[a,o],"float32")}const si={kernelName:s["DepthwiseConv2dNativeBackpropFilter"],backendName:"webgl",kernelFunc:ai};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oi(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:o}=t,{strides:i,dilations:c,pad:u,dimRoundingMode:l,inputShape:d}=r,p=s["backend_util"].computeConv2DInfo(d,o.shape,i,c,u,l,!0),f=new ri(p);return n.runWebGLProgram(f,[a,o],"float32")}const ii={kernelName:s["DepthwiseConv2dNativeBackpropInput"],backendName:"webgl",kernelFunc:oi};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ci{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ui(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],o=s["util"].sizeFromShape(r.shape),i=Qr({inputs:{x:r},backend:n,attrs:{shape:[o]}}),c=new ci(o),u=n.runWebGLProgram(c,[i],i.dtype),l=Qr({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}const li={kernelName:s["Diag"],backendName:"webgl",kernelFunc:ui};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class di{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:c,dilationWidth:u}=e,{top:l,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${l}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${o}; h++) {\n          int hIn = hBeg + h * ${c};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${i}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pi(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:i,pad:c,dilations:u}=r,l=s["backend_util"].computeDilation2DInfo(a.shape,o.shape,i,c,"NHWC",u);let d;const p=new di(l);d=n.runWebGLProgram(p,[a,o],"float32");const f=Qr({inputs:{x:d},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(d),f}const fi={kernelName:s["Dilation2D"],backendName:"webgl",kernelFunc:pi};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hi(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,o=t,{allDims:i,summedDims:c,idDims:u}=s["backend_util"].decodeEinsumEquation(a,o.length);s["backend_util"].checkEinsumDimSizes(i.length,u,o);const{path:l,steps:d}=s["backend_util"].getEinsumComputePath(c,u),p=d.length;let f=null,h=i.length;const m=[];for(let b=0;b<p;++b){for(const e of d[b]){const{permutationIndices:t,expandDims:r}=s["backend_util"].getEinsumPermutation(h,u[e]);let a;s["backend_util"].isIdentityPermutation(t)?a=o[e]:(a=la({inputs:{x:o[e]},backend:n,attrs:{perm:t}}),m.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);s["util"].arraysEqual(a.shape,i)||(a=Qr({inputs:{x:a},backend:n,attrs:{shape:i}}),m.push(a)),null===f?f=a:(f=Kr({inputs:{a:a,b:f},backend:n}),m.push(f))}b<p-1&&(l[b]>=0&&(f=ca({inputs:{x:f},backend:n,attrs:{axis:l[b]-(i.length-h),keepDims:!1}}),m.push(f)),h--)}for(const s of m)s!==f&&n.disposeIntermediateTensorInfo(s);return f}const mi={kernelName:s["Einsum"],backendName:"webgl",kernelFunc:hi},bi="return (x >= 0.0) ? x : (exp(x) - 1.0);",gi="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",yi=zr({opSnippet:bi,packedOpSnippet:gi}),xi={kernelName:s["Elu"],backendName:"webgl",kernelFunc:yi},Oi="return (b >= 1.0) ? a : a * (b + 1.0);",vi="\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",ki=e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,o=Object(s["env"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Nr(vi,r.shape,a.shape):new wr(Oi,r.shape,a.shape);return n.runWebGLProgram(o,[r,a],r.dtype)},wi={kernelName:s["EluGrad"],backendName:"webgl",kernelFunc:ki},Ii="\n  return vec4(equal(a, b));\n",Ni="return float(a == b);",ji=Vr({opSnippet:Ni,packedOpSnippet:Ii,dtype:"bool"}),Ti={kernelName:s["Equal"],backendName:"webgl",kernelFunc:ji},Si=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${s["backend_util"].ERF_P};\n  float a1 = ${s["backend_util"].ERF_A1};\n  float a2 = ${s["backend_util"].ERF_A2};\n  float a3 = ${s["backend_util"].ERF_A3};\n  float a4 = ${s["backend_util"].ERF_A4};\n  float a5 = ${s["backend_util"].ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,Ci=zr({opSnippet:Si}),Ei={kernelName:s["Erf"],backendName:"webgl",kernelFunc:Ci},$i="return exp(x);",Ai=zr({opSnippet:$i,packedOpSnippet:$i,cpuKernelImpl:rn}),Ri={kernelName:s["Exp"],backendName:"webgl",kernelFunc:Ai};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _i(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:o}=t,i=o.shape.length,c=o.shape.slice();let u=a;return a<0&&(s["util"].assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+a+1),c.splice(u,0,1),Qr({inputs:{x:o},backend:r,attrs:{shape:c}})}const Fi={kernelName:s["ExpandDims"],backendName:"webgl",kernelFunc:_i},Di="return exp(x) - 1.0;",Mi=zr({opSnippet:Di,packedOpSnippet:Di,cpuKernelImpl:an}),Li={kernelName:s["Expm1"],backendName:"webgl",kernelFunc:Mi};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Pi{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,s=n?r+".0":"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);o="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${o}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bi(e,t,n){const r=n.texData.get(e.dataId),a=s["util"].sizeFromShape(e.shape),o=e.shape[e.shape.length-1],i=a/o,c=Qr({inputs:{x:e},backend:n,attrs:{shape:[i,o]}}),u=c.shape,l=new Pi("real",u,t),d=new Pi("imag",u,t),p=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],f=n.runWebGLProgram(l,p,"float32"),h=n.runWebGLProgram(d,p,"float32"),m=Sr({inputs:{real:f,imag:h},backend:n});n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(h);const b=Qr({inputs:{x:m},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),b}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zi(e){const{inputs:t,backend:n}=e,{input:r}=t;return Bi(r,!1,n)}const Vi={kernelName:s["FFT"],backendName:"webgl",kernelFunc:zi};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wi{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ui(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:o}=n;if(o=o||s["util"].inferDtype(a),"string"===o){const e=s["util"].getArrayFromDType(o,s["util"].sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,o,e)}{const e=new Wi(r,a),n=e.getCustomSetupFunc(a);return t.runWebGLProgram(e,[],o,n)}}const Gi={kernelName:s["Fill"],backendName:"webgl",kernelFunc:Ui};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hi{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qi={kernelName:s["FlipLeftRight"],backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new Hi(n.shape),s=r.runWebGLProgram(a,[n],n.dtype);return s}},Ki="return floor(x);",Xi=zr({opSnippet:Ki,packedOpSnippet:Ki,cpuKernelImpl:sn}),Yi={kernelName:s["Floor"],backendName:"webgl",kernelFunc:Xi},Qi="\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",Zi="\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",Ji=Vr({opSnippet:Qi,packedOpSnippet:Zi,dtype:"int32"}),ec={kernelName:s["FloorDiv"],backendName:"webgl",kernelFunc:Ji};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class tc{constructor(e){this.variableNames=["A"];const t=ke(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nc{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=ke(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rc={kernelName:s["FromPixels"],backendName:"webgl",kernelFunc:sc};let ac;function sc(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:o}=r,i="undefined"!==typeof HTMLVideoElement&&a instanceof HTMLVideoElement,c="undefined"!==typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,l]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],d=[l,u],p=[l,u,o];(c||i)&&(null==ac&&(ac=document.createElement("canvas").getContext("2d")),ac.canvas.width=u,ac.canvas.height=l,ac.drawImage(a,0,0,u,l),a=ac.canvas);const h=n.makeTensorInfo(d,"int32");n.texData.get(h.dataId).usage=f.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),a);const m=Object(s["env"])().getBool("WEBGL_PACK")?new nc(p):new tc(p),b=n.runWebGLProgram(m,[h],"int32");return n.disposeData(h.dataId),b}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oc(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o,bias:i,preluActivationWeights:c}=t,{strides:u,pad:l,dataFormat:d,dilations:p,dimRoundingMode:f,activation:h,leakyreluAlpha:m}=r,b=s["backend_util"].convertConv2DDataFormat(d),g=s["backend_util"].computeConv2DInfo(a.shape,o.shape,u,p,l,f,!1,b);let y;const x=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Object(s["env"])().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])y=bo({x:a,filter:o,convInfo:g,backend:n,bias:i,activation:h,preluActivationWeights:c,leakyreluAlpha:m});else{const e=null!=i,t=null!=c,r="leakyrelu"===h,u=h?Wr(h,!1):null,l=new po(g,e,u,t,r),d=[a,o];if(i&&d.push(i),c&&d.push(c),r){const e=n.makeTensorInfo([],"float32",s["util"].createScalarValue(m,"float32"));d.push(e),x.push(e)}y=n.runWebGLProgram(l,d,"float32")}else y=mo({x:a,filter:o,convInfo:g,backend:n,bias:i,activation:h,preluActivationWeights:c,leakyreluAlpha:m});const O=Qr({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return x.push(y),x.forEach(e=>n.disposeIntermediateTensorInfo(e)),O}const ic={kernelName:s["FusedConv2D"],backendName:"webgl",kernelFunc:oc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cc(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o,bias:i,preluActivationWeights:c}=t,{strides:u,pad:l,dilations:d,dimRoundingMode:p,activation:f,leakyreluAlpha:h}=r,m=[];let b=d;null==b&&(b=[1,1]),s["util"].assert(s["backend_util"].eitherStridesOrDilationsAreOne(u,b),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${b}'`);const g=s["backend_util"].computeConv2DInfo(a.shape,o.shape,u,b,l,p,!0),y=Object(s["env"])().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,x=f?Wr(f,y):null,O=[a,o],v=null!=i,k=null!=c,w="leakyrelu"===f;if(v&&O.push(i),k&&O.push(c),w){const e=n.makeTensorInfo([],"float32",s["util"].createScalarValue(h,"float32"));O.push(e),m.push(e)}let I;I=y?new Jo(g,v,x,k,w):new Zo(g,v,x,k,w);const N=n.runWebGLProgram(I,O,"float32");return m.forEach(e=>n.disposeIntermediateTensorInfo(e)),N}const uc={kernelName:s["FusedDepthwiseConv2D"],backendName:"webgl",kernelFunc:cc};class lc{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=Ut(t.length),a=Ut(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dc(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,o=a.shape,i=o[o.length-1],[c,u,l,d]=s["backend_util"].prepareAndValidate(r,a),p=Qr({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),f=Qr({inputs:{x:r},backend:n,attrs:{shape:[s["util"].sizeFromShape(r.shape)/l,l]}}),h=new lc(i,d,[u,l]),m=n.runWebGLProgram(h,[f,p],f.dtype),b=Qr({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}const pc={kernelName:s["GatherNd"],backendName:"webgl",kernelFunc:dc};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fc{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=Ut(this.rank),r=hc(e,2);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function hc(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e.length;a++)2===a?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(""+n[a]);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mc(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:o}=t,{axis:i,batchDims:c}=r,u=s["util"].parseAxisParam(i,a.shape)[0],l=s["backend_util"].segment_util.collectGatherOpShapeInfo(a,o,u,c),d=s["util"].sizeFromShape(o.shape),p=[],f=Qr({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),h=Qr({inputs:{x:o},backend:n,attrs:{shape:[l.batchSize,d/l.batchSize]}});p.push(f),p.push(h);const m=[l.batchSize,l.outerSize,d/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([a,o])||"string"===a.dtype){const e=n.bufferSync(h),t=n.bufferSync(f),r=on(t,e,m);return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const b=new fc(f.shape,m),g=n.runWebGLProgram(b,[f,h],f.dtype);p.push(g);const y=Qr({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}const bc={kernelName:s["GatherV2"],backendName:"webgl",kernelFunc:mc},gc="return float(a > b);",yc="\n  return vec4(greaterThan(a, b));\n",xc=Vr({opSnippet:gc,packedOpSnippet:yc,cpuKernelImpl:cn,dtype:"bool"}),Oc={kernelName:s["Greater"],backendName:"webgl",kernelFunc:xc},vc="return float(a >= b);",kc="\n  return vec4(greaterThanEqual(a, b));\n",wc=Vr({opSnippet:vc,packedOpSnippet:kc,dtype:"bool"}),Ic={kernelName:s["GreaterEqual"],backendName:"webgl",kernelFunc:wc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Nc(e){const{inputs:t,backend:n}=e,{input:r}=t;return Bi(r,!0,n)}const jc={kernelName:s["IFFT"],backendName:"webgl",kernelFunc:Nc},Tc="return float(!isnan(x) && !isinf(x));",Sc=zr({opSnippet:Tc,dtype:"bool"}),Cc={kernelName:s["IsFinite"],backendName:"webgl",kernelFunc:Sc},Ec="return float(isinf(x));",$c=zr({opSnippet:Ec,dtype:"bool"}),Ac={kernelName:s["IsInf"],backendName:"webgl",kernelFunc:$c},Rc="return float(isnan(x));",_c=zr({opSnippet:Rc,dtype:"bool"}),Fc={kernelName:s["IsNan"],backendName:"webgl",kernelFunc:_c},Dc="return float(a < b);",Mc="\n  return vec4(lessThan(a, b));\n",Lc=Vr({opSnippet:Dc,packedOpSnippet:Mc,cpuKernelImpl:un,dtype:"bool"}),Pc={kernelName:s["Less"],backendName:"webgl",kernelFunc:Lc},Bc="return float(a <= b);",zc="\n  return vec4(lessThanEqual(a, b));\n",Vc=Vr({opSnippet:Bc,packedOpSnippet:zc,dtype:"bool"}),Wc={kernelName:s["LessEqual"],backendName:"webgl",kernelFunc:Vc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Uc(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,o=ln(r,a,s);return t.makeTensorInfo([o.length],"float32",o)}const Gc={kernelName:s["LinSpace"],backendName:"webgl",kernelFunc:Uc},Hc="if (x < 0.0) return NAN;\n  return log(x);",qc="\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",Kc=zr({opSnippet:Hc,packedOpSnippet:qc,cpuKernelImpl:dn}),Xc={kernelName:s["Log"],backendName:"webgl",kernelFunc:Kc},Yc="return log(1.0 + x);",Qc=zr({opSnippet:Yc}),Zc={kernelName:s["Log1p"],backendName:"webgl",kernelFunc:Qc},Jc="return float(a >= 1.0 && b >= 1.0);",eu="\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",tu=Vr({opSnippet:Jc,packedOpSnippet:eu,dtype:"bool"}),nu={kernelName:s["LogicalAnd"],backendName:"webgl",kernelFunc:tu},ru="return float(!(x >= 1.0));",au=zr({opSnippet:ru}),su={kernelName:s["LogicalNot"],backendName:"webgl",kernelFunc:au},ou="return float(a >= 1.0 || b >= 1.0);",iu="\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",cu=Vr({opSnippet:ou,packedOpSnippet:iu,dtype:"bool"}),uu={kernelName:s["LogicalOr"],backendName:"webgl",kernelFunc:cu};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class lu{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,o=e[3]-1;let i;this.outputShape=e;const c=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${c})`:1===a?`1.0/(${c})`:`exp(log(${c}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${o}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class du{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,o=e[3]-1;let i;this.outputShape=e;const c=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${c})`:1===a?`1.0/(${c})`:`exp(log(${c}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pu=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:o,bias:i,alpha:c,beta:u}=r,l=Object(s["env"])().getBool("WEBGL_PACK_NORMALIZATION")?new du(a.shape,o,i,c,u):new lu(a.shape,o,i,c,u);return n.runWebGLProgram(l,[a],a.dtype)},fu={kernelName:s["LRN"],backendName:"webgl",kernelFunc:pu};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class hu{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mu=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:o}=t,{depthRadius:i,bias:c,alpha:u,beta:l}=r,d=new hu(a.shape,i,c,u,l);return n.runWebGLProgram(d,[a,s,o],a.dtype)},bu={kernelName:s["LRNGrad"],backendName:"webgl",kernelFunc:mu};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gu(e,t,n,r){const a=s["util"].sizeFromShape(t),o=s["util"].sizeFromShape(e.shape),i=o/a,c=Qr({inputs:{x:e},attrs:{shape:[i,a]},backend:r}),u=na(c,e.dtype,"max",r),l=Qr({inputs:{x:u},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(u),l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yu(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:o,keepDims:i}=r,c=a.shape.length,u=s["util"].parseAxisParam(o,a.shape);let l=u;const d=s["backend_util"].getAxesPermutation(l,c),p=null!=d,f=n.shouldExecuteOnCPU([a]);let h=a;if(p){if(f){const e=n.texData.get(h.dataId),t=e.values,r=new Array(c);for(let n=0;n<r.length;n++)r[n]=a.shape[d[n]];const s=Sn(t,a.shape,a.dtype,d,r);h=n.makeTensorInfo(r,a.dtype);const o=n.texData.get(h.dataId);o.values=s}else h=oa(a,d,n);l=s["backend_util"].getInnerMostAxes(l.length,c)}s["backend_util"].assertAxesAreInnerMostDims("max",l,c);const[m,b]=s["backend_util"].computeOutAndReduceShapes(h.shape,l);let g,y=m;if(i&&(y=s["backend_util"].expandShapeToKeepDim(m,u)),f){const e=n.texData.get(h.dataId),t=e.values,r=pn(t,s["util"].sizeFromShape(b),y,a.dtype);g=n.makeTensorInfo(y,a.dtype);const o=n.texData.get(g.dataId);o.values=r}else g=gu(h,b,y,n);return p&&n.disposeIntermediateTensorInfo(h),g}const xu={kernelName:s["Max"],backendName:"webgl",kernelFunc:yu},Ou=kr+"\n  return max(a, b);\n",vu="\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+Ir+"\n  return result;\n",ku=Vr({opSnippet:Ou,packedOpSnippet:vu,cpuKernelImpl:fn}),wu={kernelName:s["Maximum"],backendName:"webgl",kernelFunc:ku};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Iu(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Oe(a,"maxPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:u}=r,l=1;s["util"].assert(s["backend_util"].eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const d=s["backend_util"].computePool2DInfo(a.shape,o,i,l,c,u);if(1===d.filterWidth&&1===d.filterHeight&&s["util"].arraysEqual(d.inShape,d.outShape))return jr({inputs:{x:a},backend:n});const p=new is(d,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}const Nu={kernelName:s["MaxPool"],backendName:"webgl",kernelFunc:Iu};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ju(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:o,strides:i,pad:c,dataFormat:u,dimRoundingMode:l}=r,d=[1,1,1],p=s["backend_util"].computePool3DInfo(a.shape,o,i,d,c,l,u),f=new cs(p,"max",!1);return n.runWebGLProgram(f,[a],a.dtype)}const Tu={kernelName:s["MaxPool3D"],backendName:"webgl",kernelFunc:ju};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Su{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,o=a-1-e.padInfo.top,i=s-1-e.padInfo.left,c=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Cu{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,c=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=i-1-e.padInfo.front,d=c-1-e.padInfo.top,p=u-1-e.padInfo.left,f=i*c*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${l}, ${d}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${i};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${c};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${o}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${f} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${c} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eu(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o}=t,i=o,{filterSize:c,strides:u,pad:l,dimRoundingMode:d}=r,p=[1,1,1],f=s["backend_util"].computePool3DInfo(i.shape,c,u,p,l,d),h=new cs(f,"max",!0),m=n.runWebGLProgram(h,[i],i.dtype),b=new Cu(f),g=n.runWebGLProgram(b,[a,m],i.dtype);return n.disposeIntermediateTensorInfo(m),g}const $u={kernelName:s["MaxPool3DGrad"],backendName:"webgl",kernelFunc:Eu};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Au(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o,output:i}=t,c=o;Oe([o,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:d,dimRoundingMode:p}=r,f=s["backend_util"].computePool2DInfo(c.shape,u,l,1,d,p),h=!0,m=new is(f,"max",h),b=n.runWebGLProgram(m,[c],c.dtype),g=new Su(f),y=n.runWebGLProgram(g,[a,b],c.dtype);return n.disposeIntermediateTensorInfo(b),y}const Ru={kernelName:s["MaxPoolGrad"],backendName:"webgl",kernelFunc:Au};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _u(e,t,n,r){let a=new is(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");a=new is(n,"max",!0,!0,t);const o=r.runWebGLProgram(a,[e],"float32");return[s,o]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fu={kernelName:s["MaxPoolWithArgmax"],backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:o,pad:i,includeBatchInIndex:c}=t,u=n;s["util"].assert(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const l=[1,1];s["util"].assert(s["backend_util"].eitherStridesOrDilationsAreOne(o,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);const d=s["backend_util"].computePool2DInfo(r.shape,a,o,l,i),[p,f]=_u(r,c,d,u);return[p,f]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Du(e,t,n,r){const a=s["util"].sizeFromShape(t),o=s["util"].sizeFromShape(e.shape),i=o/a,c=Qr({inputs:{x:e},attrs:{shape:[i,a]},backend:r}),u=na(c,"float32","mean",r),l=Qr({inputs:{x:u},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(u),l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mu={kernelName:s["Mean"],backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:o}=t,i=n,c=r.shape.length,u=s["util"].parseAxisParam(o,r.shape);let l=u;const d=s["backend_util"].getAxesPermutation(l,c),p=null!=d,f=i.shouldExecuteOnCPU([r]),h=[];let m=r;if(p){if(f){const e=i.texData.get(m.dataId),t=e.values,n=new Array(c);for(let o=0;o<n.length;o++)n[o]=r.shape[d[o]];const a=Sn(t,r.shape,r.dtype,d,n);m=i.makeTensorInfo(n,r.dtype);const s=i.texData.get(m.dataId);s.values=a}else m=oa(r,d,i);h.push(m),l=s["backend_util"].getInnerMostAxes(l.length,c)}s["backend_util"].assertAxesAreInnerMostDims("sum",l,c);const[b,g]=s["backend_util"].computeOutAndReduceShapes(m.shape,l);let y=b;a&&(y=s["backend_util"].expandShapeToKeepDim(b,u));const x=Du(m,g,y,i);for(const s of h)i.disposeIntermediateTensorInfo(s);return x}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lu(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r,c=a.shape.length,u=s["util"].parseAxisParam(o,a.shape);let l=u;const d=s["backend_util"].getAxesPermutation(l,c);let p=a;null!=d&&(p=la({inputs:{x:a},backend:n,attrs:{perm:d}}),l=s["backend_util"].getInnerMostAxes(l.length,a.shape.length)),s["backend_util"].assertAxesAreInnerMostDims("min",l,c);const[f,h]=s["backend_util"].computeOutAndReduceShapes(p.shape,l),m=s["util"].sizeFromShape(h),b=Qr({inputs:{x:p},backend:n,attrs:{shape:[-1,m]}}),g=na(b,b.dtype,"min",n);let y;if(i){const e=s["backend_util"].expandShapeToKeepDim(f,u);y=Qr({inputs:{x:g},backend:n,attrs:{shape:e}})}else y=Qr({inputs:{x:g},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),y}const Pu={kernelName:s["Min"],backendName:"webgl",kernelFunc:Lu},Bu=kr+"\n  return min(a, b);\n",zu="\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+Ir+"\n  return result;\n",Vu=Vr({opSnippet:Bu,packedOpSnippet:zu,cpuKernelImpl:hn}),Wu={kernelName:s["Minimum"],backendName:"webgl",kernelFunc:Vu};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Uu{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=Ut(r),s=t.map(e=>e[0]).join(","),o=t.map((t,n)=>t[0]+e[n]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),c="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${c};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${c};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${c};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gu{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=Ut(r),s=t.map(e=>e[0]).join(","),o=t.map((t,n)=>t[0]+e[n]).join(","),i=$n("rc",r),c=$n("source",r),u=`${i[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${c.slice(-2).join()})`,d="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${c.join()}), ${l});\n        ${i[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${c.join()}), ${l});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${c.join()}), ${l});\n        ${i[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${c.join()}), ${l});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${c.join()}), ${l});\n          ${i[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${c.join()}), ${l});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hu=({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:o}=n,i=Object(s["env"])().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Gu(r.shape,a,o):new Uu(r.shape,a,o),c=t.runWebGLProgram(i,[r],r.dtype);return c},qu={kernelName:s["MirrorPad"],backendName:"webgl",kernelFunc:Hu},Ku="if (b == 0.0) return NAN;\n  return mod(a, b);",Xu="\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  "+Ir+"\n  return result;\n",Yu=Vr({opSnippet:Ku,packedOpSnippet:Xu}),Qu={kernelName:s["Mod"],backendName:"webgl",kernelFunc:Yu};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Zu{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ju="\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",el="\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",tl=Vr({opSnippet:Ju,packedOpSnippet:el,checkOutOfBounds:!0}),nl={kernelName:s["RealDiv"],backendName:"webgl",kernelFunc:tl},rl="return a - b;",al=Vr({opSnippet:rl,packedOpSnippet:rl,supportsComplex:!0,cpuKernelImpl:Nn}),sl={kernelName:s["Sub"],backendName:"webgl",kernelFunc:al};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ol(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:o}=r,i=s["util"].parseAxisParam([o],a.shape),c=yu({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=s["backend_util"].expandShapeToKeepDim(c.shape,i),l=Qr({inputs:{x:c},backend:n,attrs:{shape:u}}),d=al({inputs:{a:a,b:l},backend:n}),p=Ai({inputs:{x:d},backend:n}),f=ca({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),h=Qr({inputs:{x:f},backend:n,attrs:{shape:u}}),m=tl({inputs:{a:p,b:h},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(h),m}const il={kernelName:s["Softmax"],backendName:"webgl",kernelFunc:ol};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cl(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:o,normalized:i}=r,c=i?a:ol({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=c.shape[0],l=c.shape[1],d=new Zu(u,l,s),p=d.getCustomSetupFunc(o),f=n.runWebGLProgram(d,[c],"int32",p);return i||n.disposeIntermediateTensorInfo(c),f}const ul={kernelName:s["Multinomial"],backendName:"webgl",kernelFunc:cl},ll="return -x;";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dl(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=bn(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=Object(s["env"])().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new ir(r.shape,ll):new qn(r.shape,ll),n.runWebGLProgram(a,[r],r.dtype)}const pl={kernelName:s["Neg"],backendName:"webgl",kernelFunc:dl},fl=s["kernel_impls"].nonMaxSuppressionV3Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hl(e){s["backend_util"].warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:o}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:u}=r,l=n.readSync(a.dataId),d=n.readSync(o.dataId),{selectedIndices:p}=fl(l,d,i,c,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}const ml={kernelName:s["NonMaxSuppressionV3"],backendName:"webgl",kernelFunc:hl},bl=s["kernel_impls"].nonMaxSuppressionV4Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gl(e){s["backend_util"].warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:o}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:u,padToMaxOutputSize:l}=r,d=n.readSync(a.dataId),p=n.readSync(o.dataId),{selectedIndices:f,validOutputs:h}=bl(d,p,i,c,u,l);return[n.makeTensorInfo([f.length],"int32",new Int32Array(f)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}const yl={kernelName:s["NonMaxSuppressionV4"],backendName:"webgl",kernelFunc:gl},xl=s["kernel_impls"].nonMaxSuppressionV5Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ol(e){s["backend_util"].warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:o}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:u,softNmsSigma:l}=r,d=n.readSync(a.dataId),p=n.readSync(o.dataId),f=i,h=c,m=u,b=l,{selectedIndices:g,selectedScores:y}=xl(d,p,f,h,m,b);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const vl={kernelName:s["NonMaxSuppressionV5"],backendName:"webgl",kernelFunc:Ol};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kl{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wl=e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:o,onValue:i,offValue:c}=r,u=s["util"].sizeFromShape(a.shape),l=new kl(u,o,i,c),d=Qr({inputs:{x:a},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(l,[d],a.dtype);n.disposeIntermediateTensorInfo(d);const f=[...a.shape,o],h=Qr({inputs:{x:p},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(p),h},Il={kernelName:s["OneHot"],backendName:"webgl",kernelFunc:wl};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Nl(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Ps({inputs:{input:r},backend:n}),t=Nl({inputs:{x:e},backend:n}),a=so({inputs:{input:r},backend:n}),s=Nl({inputs:{x:a},backend:n}),o=Sr({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}return Ui({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const jl={kernelName:s["ZerosLike"],backendName:"webgl",kernelFunc:Nl};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tl(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const e=Ps({inputs:{input:r},backend:n}),t=Tl({inputs:{x:e},backend:n}),a=so({inputs:{input:r},backend:n}),s=Nl({inputs:{x:a},backend:n}),o=Sr({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}return Ui({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}const Sl={kernelName:s["OnesLike"],backendName:"webgl",kernelFunc:Tl};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cl(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return _i({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const o=t[0].shape,i=t[0].dtype;t.forEach(e=>{s["util"].assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),s["util"].assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=[],u=t.map(e=>{const t=_i({inputs:{input:e},backend:n,attrs:{dim:a}});return c.push(t),t}),l=uo({inputs:u,backend:n,attrs:{axis:a}});return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}const El={kernelName:s["Pack"],backendName:"webgl",kernelFunc:Cl};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $l{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=Ut(r),s=t.map(e=>e[0]).join(","),o=t.map((t,n)=>t[0]+e[n]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${o});\n      uniform float value;\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${o};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Al{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=Ut(r),s=t.map(e=>e[0]).join(","),o=t.map((t,n)=>t[0]+e[n]).join(","),i=$n("rc",r),c=$n("source",r),u=`${i[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${c.slice(-2).join()})`,d=[a+" rc = outputLoc;",`${i[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${u}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let h=0,m=1===r?2:4;h<m;h++)f+=`\n        ${d[h]}\n        if (${p}) {\n          result[${h}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${h}] = getChannel(getX(${c.join()}), ${l});\n        }\n      `;f+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${o});\n      uniform float value;\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${f}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rl=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:o,constantValue:i}=r,c=Object(s["env"])().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Al(a.shape,o,i):new $l(a.shape,o,i),u=c.getCustomSetupFunc(i);return n.runWebGLProgram(c,[a],a.dtype,u)},_l={kernelName:s["PadV2"],backendName:"webgl",kernelFunc:Rl},Fl="\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",Dl="\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  "+Ir+"\n  return result;\n",Ml=Vr({opSnippet:Fl,packedOpSnippet:Dl}),Ll={kernelName:s["Pow"],backendName:"webgl",kernelFunc:Ml};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Pl(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r,c=a.shape.length,u=[],l=s["util"].parseAxisParam(o,a.shape);let d=l;const p=s["backend_util"].getAxesPermutation(d,c);let f,h=a;if(null!=p&&(h=la({inputs:{x:a},backend:n,attrs:{perm:p}}),d=s["backend_util"].getInnerMostAxes(d.length,c),u.push(h)),s["backend_util"].assertAxesAreInnerMostDims("prod",d,c),n.shouldExecuteOnCPU([h])){const e=n.texData.get(h.dataId).values,{outVals:t,outShape:r,outDtype:a}=gn(h.shape,h.dtype,e,d);f=n.makeTensorInfo(r,a,t)}else{const[e,t]=s["backend_util"].computeOutAndReduceShapes(h.shape,d),r=s["util"].sizeFromShape(t),o=Qr({inputs:{x:h},backend:n,attrs:{shape:[-1,r]}}),i=Object(s["sumOutType"])(a.dtype),c=na(o,i,"prod",n);f=Qr({inputs:{x:c},backend:n,attrs:{shape:e}}),u.push(o),u.push(c)}if(i){u.push(f);const e=s["backend_util"].expandShapeToKeepDim(f.shape,l);f=Qr({inputs:{x:f},backend:n,attrs:{shape:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}const Bl={kernelName:s["Prod"],backendName:"webgl",kernelFunc:Pl},zl=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:o}=n,i=yn(r,a,s,o);return t.makeTensorInfo([i.length],o,i)},Vl={kernelName:s["Range"],backendName:"webgl",kernelFunc:zl},Wl="return 1.0 / x;",Ul=zr({opSnippet:Wl}),Gl={kernelName:s["Reciprocal"],backendName:"webgl",kernelFunc:Ul},Hl=Kn+"\n  return (x < 0.0) ? 0.0 : x;\n",ql="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Kl=zr({opSnippet:Hl,packedOpSnippet:ql}),Xl={kernelName:s["Relu"],backendName:"webgl",kernelFunc:Kl},Yl=Kn+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Ql="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Zl=zr({opSnippet:Yl,packedOpSnippet:Ql}),Jl={kernelName:s["Relu6"],backendName:"webgl",kernelFunc:Zl};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ed{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const u=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class td{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const u=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]},\n          ${u[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${c-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nd(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:o,halfPixelCenters:i,size:c}=r,[u,l]=c,d=Object(s["env"])().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new td(a.shape,u,l,o,i):new ed(a.shape,u,l,o,i);return n.runWebGLProgram(d,[a],"float32")}const rd={kernelName:s["ResizeBilinear"],backendName:"webgl",kernelFunc:nd};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ad{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,o]=e,i=[n&&s>1?r-1:r,n&&o>1?a-1:a],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],u=i[0]/c[0],l=i[1]/c[1],d=1/u,p=1/l,f=2*Math.ceil(d)+2,h=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${f});\n        const int winWidth = int(${h});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sd(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:o}=r,i=new ad(s.shape,a.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}const od={kernelName:s["ResizeBilinearGrad"],backendName:"webgl",kernelFunc:sd};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class id{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const u=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cd{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const u=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]},\n          ${u[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${c-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ud(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:o,halfPixelCenters:i,size:c}=r,[u,l]=c,d=Object(s["env"])().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new cd(a.shape,u,l,o,i):new id(a.shape,u,l,o,i);return n.runWebGLProgram(d,[a],a.dtype)}const ld={kernelName:s["ResizeNearestNeighbor"],backendName:"webgl",kernelFunc:ud};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dd{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,o]=e,i=[n&&s>1?r-1:r,n&&o>1?a-1:a],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],u=i[0]/c[0],l=i[1]/c[1],d=1/u,p=1/l,f=2*Math.ceil(d)+2,h=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${f});\n        const int winWidth = int(${h});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${c[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${c[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pd(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:o}=r,i=new dd(s.shape,a.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}const fd={kernelName:s["ResizeNearestNeighborGrad"],backendName:"webgl",kernelFunc:pd};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hd{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`,a=e.map((e,t)=>r(t)).join(","),s=Ut(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class md{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=$n("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,o=Ut(n);function i(e){return d(e)}function c(e){return e[n-1]="("+e[n-1]+" + 1)",d(e)}function u(e){return e[n-2]="("+e[n-2]+" + 1)",d(e)}function l(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",d(e)}function d(t){const n=e.map((e,n)=>p(n,t)),r=n.join(","),a=n.slice(-2).join(",");return`getChannel(getX(${r}), vec2(${a}))`}function p(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:""+r[n]}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${o} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${i(r.slice())};\n          if(${a}){\n            result.g = ${c(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${u(r.slice())};\n            if(${a}) {\n              result.a = ${l(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bd(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:o}=r,i=a.shape.length,c=s["util"].parseAxisParam(o,a.shape);if(0===i)return jr({inputs:{x:a},backend:n});const u=Object(s["env"])().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new md(a.shape,c):new hd(a.shape,c);return n.runWebGLProgram(u,[a],a.dtype)}const gd={kernelName:s["Reverse"],backendName:"webgl",kernelFunc:bd};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yd{constructor(e,t){this.variableNames=["Image"],this.outputShape=[];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"===typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(e,t,n,r){return(a,s)=>{null==this.paramsLoc&&(this.paramsLoc=a.getUniformLocationNoThrow(s,"params")),a.gl.uniform4f(this.paramsLoc,e,t,n,r)}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xd={kernelName:s["RotateWithOffset"],backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:o,center:i}=t,c=n,u=new yd(r.shape,o),[l,d]=s["backend_util"].getImageCenter(i,r.shape[1],r.shape[2]),p=u.getCustomSetupFunc(l,d,Math.sin(a),Math.cos(a)),f=c.runWebGLProgram(u,[r],r.dtype,p);return f}},Od="\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n",vd=zr({opSnippet:Od}),kd={kernelName:s["Round"],backendName:"webgl",kernelFunc:vd},wd="return inversesqrt(x);",Id=zr({opSnippet:wd,cpuKernelImpl:xn}),Nd={kernelName:s["Rsqrt"],backendName:"webgl",kernelFunc:Id};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class jd{constructor(e,t,n,r,a,s,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=Ut(a.length),c=Ut(s.length);let u="";1===n?u="i":2===n&&(u="i, j");const l=`getIndices(${u})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`,f=t>1?"strides[j]":"strides";this.userCode=`\n        ${i} strides = ${i}(${a});\n\n        void main() {\n          ${c} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${l});\n              flattenedIndex += index * ${f};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Td(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:o}=t,{shape:i}=r,{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:p}=s["backend_util"].calculateShapes(o,a,i),f=[p/l,l];if(0===p)return n.makeTensorInfo(i,a.dtype);const h=Qr({inputs:{x:a},backend:n,attrs:{shape:[u,c]}}),m=Qr({inputs:{x:o},backend:n,attrs:{shape:[u,l]}}),b=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new jd(u,c,h.shape.length,m.shape.length,d,f),y=n.runWebGLProgram(g,[m,h,b],m.dtype),x=Qr({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),x}const Sd={kernelName:s["ScatterNd"],backendName:"webgl",kernelFunc:Td};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cd{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let r=0;r<t.length;r++)o.push(""+n[r]),r<e&&s.push(""+n[r]);r=s.join(),a=o.join()}const s=Ut(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ed(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:o}=t,i=new Cd(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,o],Object(s["upcastType"])(a.dtype,o.dtype))}const $d={kernelName:s["Select"],backendName:"webgl",kernelFunc:Ed},Ad=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${s["backend_util"].SELU_SCALEALPHA};\n  float scale = ${s["backend_util"].SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,Rd=zr({opSnippet:Ad}),_d={kernelName:s["Selu"],backendName:"webgl",kernelFunc:Rd},Fd="return 1.0 / (1.0 + exp(-1.0 * x));",Dd=zr({opSnippet:Fd}),Md={kernelName:s["Sigmoid"],backendName:"webgl",kernelFunc:Dd},Ld="\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n",Pd=zr({opSnippet:Ld}),Bd={kernelName:s["Sign"],backendName:"webgl",kernelFunc:Pd},zd=Lr+"\n  return sin(x);\n",Vd=zr({opSnippet:zd}),Wd={kernelName:s["Sin"],backendName:"webgl",kernelFunc:Vd},Ud="\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n",Gd=zr({opSnippet:Ud}),Hd={kernelName:s["Sinh"],backendName:"webgl",kernelFunc:Gd},qd="\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n",Kd=zr({opSnippet:qd}),Xd={kernelName:s["Softplus"],backendName:"webgl",kernelFunc:Kd},Yd=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:o,paddings:i}=r;s["util"].assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const c=o.reduce((e,t)=>e*t),u=[[0,0]];u.push(...i);for(let s=1+o.length;s<a.shape.length;++s)u.push([0,0]);const l=[],d=Rl({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),p=s["backend_util"].getReshaped(d.shape,o,c,!1),f=s["backend_util"].getPermuted(p.length,o.length,!1),h=s["backend_util"].getReshapedPermuted(d.shape,o,c,!1),m=Qr({inputs:{x:d},backend:n,attrs:{shape:p}}),b=la({inputs:{x:m},backend:n,attrs:{perm:f}}),g=Qr({inputs:{x:b},backend:n,attrs:{shape:h}});return l.push(d),l.push(m),l.push(b),l.forEach(e=>n.disposeIntermediateTensorInfo(e)),g},Qd={kernelName:s["SpaceToBatchND"],backendName:"webgl",kernelFunc:Yd};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zd(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n         "+s.shape);if(2!==r.shape.length)throw new Error("Indices must be a matrix, saw:\n         "+r.shape);if(1!==a.shape.length)throw new Error("Values must be a vector, saw:\n         "+a.shape);if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        "+o.shape);const i=n.readSync(r.dataId),c=n.readSync(a.dataId),u=n.readSync(s.dataId),l=n.readSync(o.dataId)[0],[d,p,f,h,m]=kn(i,r.shape,r.dtype,c,a.dtype,u,l);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],a.dtype,f),n.makeTensorInfo([h.length],"bool",new Uint8Array(h.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}const Jd={kernelName:s["SparseFillEmptyRows"],backendName:"webgl",kernelFunc:Zd};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ep(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error("Input indices should be a matrix but received shape "+r.shape);if(1!==a.shape.length)throw new Error("Input shape should be a vector but received shape "+a.shape);if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape "+s.shape);const o=Array.from(n.readSync(a.dataId)),i=n.readSync(r.dataId),c=Array.from(n.readSync(s.dataId)),[u,l,d]=wn(i,r.shape,r.dtype,o,c);return[n.makeTensorInfo(l,r.dtype,u),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}const tp={kernelName:s["SparseReshape"],backendName:"webgl",kernelFunc:ep};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function np(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:o,defaultValue:i}=t,{outputShape:c}=r,{sliceRank:u,numUpdates:l,strides:d,outputSize:p}=s["backend_util"].calculateShapes(o,a,c),f=!1,h=new jd(l,u,a.shape.length,o.shape.length,d,[p,1],f),m=n.runWebGLProgram(h,[o,a,i],o.dtype),b=Qr({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),b}const rp={kernelName:s["SparseToDense"],backendName:"webgl",kernelFunc:np};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ap(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:o,axis:i}=r,c=s["util"].parseAxisParam(i,a.shape)[0],u=s["backend_util"].prepareSplitSize(a,o,c),l=a.shape.length,d=new Array(l).fill(0),p=a.shape.slice();return u.map(e=>{const t=[...p];t[c]=e;const r=Es({inputs:{x:a},backend:n,attrs:{begin:d,size:t}});return d[c]+=e,r})}const sp={kernelName:s["SplitV"],backendName:"webgl",kernelFunc:ap},op="return sqrt(x);",ip=zr({opSnippet:op}),cp={kernelName:s["Sqrt"],backendName:"webgl",kernelFunc:ip},up="return x * x;",lp=zr({opSnippet:up}),dp={kernelName:s["Square"],backendName:"webgl",kernelFunc:lp},pp="return (a - b) * (a - b);",fp=Vr({opSnippet:pp,packedOpSnippet:pp}),hp={kernelName:s["SquaredDifference"],backendName:"webgl",kernelFunc:fp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mp({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=Kn+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new qn(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}const bp={kernelName:s["Step"],backendName:"webgl",kernelFunc:mp};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gp{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=Ut(n.length),s=Ut(n.length);let o="";if(1===r)o="coords * strides + begin";else{let e=0;o=n.map((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yp(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:o,end:i,strides:c,beginMask:u,endMask:l,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:f}=r,{nonStrided:h,$begin:m,$strides:b,size:g,newShape:y,outShape:x}=s["slice_util"].sliceInfo(a.shape,o,i,c,u,l,d,p,f),O=Qr({inputs:{x:a},backend:n,attrs:{shape:y}});let v;if(h){const e=Es({inputs:{x:O},backend:n,attrs:{begin:m,size:g}});v=Qr({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some(e=>0===e))v=n.makeTensorInfo(x,a.dtype,[]);else{const e=n.shouldExecuteOnCPU([O]);if(e){const e=n.texData.get(O.dataId),t=e.values,r=Object(s["buffer"])(O.shape,O.dtype,t),a=In(x,r,b,m);v=n.makeTensorInfo(x,O.dtype,a.values)}else{const e=new gp(m,b,x);v=n.runWebGLProgram(e,[O],O.dtype)}}const k=Qr({inputs:{x:v},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(v),k}const xp={kernelName:s["StridedSlice"],backendName:"webgl",kernelFunc:yp},Op="return tan(x);",vp=zr({opSnippet:Op}),kp={kernelName:s["Tan"],backendName:"webgl",kernelFunc:vp},wp="\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n",Ip=zr({opSnippet:wp}),Np={kernelName:s["Tanh"],backendName:"webgl",kernelFunc:Ip};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class jp{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const r=Ut(this.rank),a=Tp(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function Tp(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<e.length;a++)r.push(`imod(${n[a]}, ${e[a]})`);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sp(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:o}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map(e=>s["util"].decodeString(e)):e,r=Object(s["buffer"])(a.shape,a.dtype,t),i=jn(r,o);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new jp(a.shape,o),c=n.runWebGLProgram(i,[a],a.dtype);return c}const Cp={kernelName:s["Tile"],backendName:"webgl",kernelFunc:Sp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ep(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:o}=r,i=n.readSync(a.dataId),[c,u]=Tn(i,a.shape,a.dtype,s,o);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}const $p={kernelName:s["TopK"],backendName:"webgl",kernelFunc:Ep};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ap{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const o="nearest"===n?1:2;let i;switch(r){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1;break}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rp(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:c,outputShape:u}=r,[l,d,p,f]=a.shape,[h,m]=null!=u?u:[d,p],b=[l,h,m,f],g=new Ap(d,p,o,i,c,b);return n.runWebGLProgram(g,[a,s],"float32")}const _p={kernelName:s["Transform"],backendName:"webgl",kernelFunc:Rp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fp(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;Oe(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=r.readSync(s.dataId),{outputValues:i,outputShape:c,indices:u}=Cn(o,a,s.shape,s.dtype);return[r.makeTensorInfo(c,s.dtype,i),r.makeTensorInfo([u.length],"int32",u)]}const Dp={kernelName:s["Unique"],backendName:"webgl",kernelFunc:Fp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mp(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const o=a,i=o.shape.length,c=a.shape[s],u=new Array(i-1);let l=0;for(let m=0;m<i;m++)m!==s&&(u[l++]=o.shape[m]);const d=[],p=new Array(i).fill(0),f=o.shape.slice();f[s]=1;const h=new Array(c);for(let m=0;m<h.length;m++){p[s]=m;const e=Es({inputs:{x:o},backend:n,attrs:{begin:p,size:f}}),t=Qr({inputs:{x:e},backend:n,attrs:{shape:u}});h[m]=t,d.push(e)}return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}const Lp={kernelName:s["Unpack"],backendName:"webgl",kernelFunc:Mp};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pp{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,o=s*Math.ceil(a/n);this.outputShape=[r,o];const i="0.0",c="sumValue",u=4*Math.floor(n/4),l=n%4,d="\n        sumValue += dot(values, segFilter);\n    ";let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let f="";a%n>0&&(f=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${f}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${d}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${d}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${d}\n        }\n        setOutput(${c});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bp(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:o}=t,{numSegments:i}=r,c=a.shape.length,u=[];let l=0;const d=s["backend_util"].getAxesPermutation([l],c);let p=a;null!=d&&(p=la({inputs:{x:a},backend:n,attrs:{perm:d}}),u.push(p),l=s["backend_util"].getInnerMostAxes(1,c)[0]);const f=s["backend_util"].segment_util.computeOutShape(p.shape,l,i),h=s["util"].sizeFromShape([p.shape[l]]),m=Qr({inputs:{x:p},backend:n,attrs:{shape:[-1,h]}});u.push(m);const b=Object(s["sumOutType"])(a.dtype),g=(e,t,r,a,o)=>{const i=e.shape[0],c=e.shape[1],l=s["backend_util"].segment_util.segOpComputeOptimalWindowSize(c,o),d={windowSize:l,inSize:c,batchSize:i,numSegments:o},p=new Pp(d,t),f=n.compileAndRun(p,[e,r],a);if(u.push(f),f.shape[1]===o)return f;const h=zl({backend:n,attrs:{start:0,stop:o,step:1,dtype:"float32"}}),m=Sp({inputs:{x:h},backend:n,attrs:{reps:[c/l]}});u.push(h),u.push(m);const b=g(f,t,m,a,o);return b},y=g(m,"unsortedSegmentSum",o,b,i),x=Qr({inputs:{x:y},backend:n,attrs:{shape:f}});let O=x;if(null!=d){u.push(x);const e=s["backend_util"].getUndoAxesPermutation(d);O=la({inputs:{x:O},backend:n,attrs:{perm:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),O}const zp={kernelName:s["UnsortedSegmentSum"],backendName:"webgl",kernelFunc:Bp},Vp=[fu,bu,ma,ya,va,Ia,Ta,$a,Ra,Fa,Va,Ua,qa,Ya,rs,Ja,os,ps,ls,bs,ys,Os,Is,Rs,Fs,Us,qs,Qs,to,Cr,lo,Io,jo,yo,Eo,Ao,So,Fo,Lo,zo,Ho,Ko,Qo,si,ii,ti,li,fi,mi,xi,wi,Ti,Ei,Ri,Fi,Li,Vi,Gi,qi,Yi,ec,rc,ic,uc,pc,bc,Oc,Ic,Tr,jc,oo,Cc,Ac,Fc,Rr,Pc,Wc,Gc,Zc,Xc,nu,su,uu,xu,Tu,Nu,$u,Ru,Fu,wu,Mu,Pu,Wu,qu,Qu,ul,Xr,pl,ml,yl,vl,Ls,Il,Sl,El,_l,Ll,Mr,Bl,Vl,Bs,nl,Gl,Jl,Xl,Zr,rd,od,ld,fd,gd,xd,kd,Nd,Sd,$d,_d,Md,Bd,Wd,Hd,$s,il,Xd,Qd,Jd,tp,rp,sp,cp,dp,hp,bp,xp,sl,ua,kp,Np,Cp,$p,_p,da,Dp,Lp,zp,jl];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const Wp of Vp)Object(s["registerKernel"])(Wp);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},ef00:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","logicalNot","bool"),n={x:t};return r["a"].runKernel(a["Gb"],n)}const c=Object(o["b"])({logicalNot_:i})},ef86:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("fa11");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n){const a=(t-e)/(n-1),s=r["util"].makeZerosTypedArray(n,"float32");s[0]=e;for(let r=1;r<s.length;r++)s[r]=s[r-1]+a;return s}},eff7:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","cos"),n={x:t};return r["a"].runKernel(a["I"],n)}const c=Object(o["b"])({cos_:i})},f011:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},f0a9:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","clone","string_or_numeric"),n={x:t};return r["a"].runKernel(a["rb"],n)}const c=Object(o["b"])({clone_:i})},f0e5:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("526f"),c=n("deb3"),u=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l(e,t){let n=Object(o["a"])(e,"a","minimum"),u=Object(o["a"])(t,"b","minimum");[n,u]=Object(s["makeTypesMatch"])(n,u),"bool"===n.dtype&&(n=Object(c["a"])(n,"int32"),u=Object(c["a"])(u,"int32")),Object(i["a"])(n.shape,u.shape);const l={a:n,b:u};return r["a"].runKernel(a["Rb"],l)}const d=Object(u["b"])({minimum_:l})},f11d:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("fa11");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,s){const o=t[t.length-1],[i,c]=[e.length/o,o],u=r["util"].getTypedArrayFromDType(n,i*a),l=r["util"].getTypedArrayFromDType("int32",i*a);for(let r=0;r<i;r++){const t=r*c,n=e.subarray(t,t+c),s=[];for(let e=0;e<n.length;e++)s.push({value:n[e],index:e});s.sort((e,t)=>t.value-e.value);const o=r*a,i=u.subarray(o,o+a),d=l.subarray(o,o+a);for(let e=0;e<a;e++)i[e]=s[e].value,d[e]=s[e].index}const d=t.slice();return d[d.length-1]=a,[Object(r["buffer"])(d,n,u),Object(r["buffer"])(d,"int32",l)]}},f183:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("526f"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t){const n=Object(s["a"])(e,"a","logicalOr","bool"),i=Object(s["a"])(t,"b","logicalOr","bool");Object(o["a"])(n.shape,i.shape);const c={a:n,b:i};return r["a"].runKernel(a["Hb"],c)}const u=Object(i["b"])({logicalOr_:c})},f3ae:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("deb3"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t=null,n=!1){let i=Object(s["a"])(e,"x","prod");"bool"===i.dtype&&(i=Object(o["a"])(i,"int32"));const c={x:i},u={axis:t,keepDims:n};return r["a"].runKernel(a["ic"],c,u)}const u=Object(i["b"])({prod_:c})},f490:function(e,t,n){"use strict";(function(e,r){
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let a;function s(){if(null==a){let t;if("undefined"!==typeof window)t=window;else if("undefined"!==typeof e)t=e;else if("undefined"!==typeof r)t=r;else{if("undefined"===typeof self)throw new Error("Could not find a global object");t=self}a=t}return a}function o(){const e=s();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}function i(e,t){const n=o();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return i}))}).call(this,n("c8ba"),n("4362"))},f74c:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("34d7"),a=n("a3f7"),s=n("6ad5");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function o(e,t){const n=Object(a["a"])(e,"x","setdiff1d"),o=Object(a["a"])(t,"y","setdiff1d");s["b"](n.dtype===o.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${o.dtype}).`),s["b"](1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),s["b"](1===o.rank,()=>`y should be 1D tensor, but got y (${o.shape}).`);const i=await n.data(),c=await o.data(),u=new Set(c);let l=0;for(let r=0;r<i.length;r++)u.has(i[r])||l++;const d=new r["b"]([l],n.dtype),p=new r["b"]([l],"int32");for(let r=0,a=0;r<i.length;r++)u.has(i[r])||(d.values[a]=i[r],p.values[a]=r,a++);return[d.toTensor(),p.toTensor()]}const i=o},f8bb:function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return I})),n.d(t,"i",(function(){return T})),n.d(t,"c",(function(){return S})),n.d(t,"f",(function(){return C})),n.d(t,"e",(function(){return A})),n.d(t,"d",(function(){return R})),n.d(t,"k",(function(){return F})),n.d(t,"g",(function(){return D})),n.d(t,"h",(function(){return M})),n.d(t,"j",(function(){return L})),n.d(t,"b",(function(){return P}));var r=n("fa11"),a=n("46cc"),s=n("d303"),o=n("526c"),i=n("aeab"),c=n("c8ad"),u=n("5874"),l=n("9489"),d=n("04b8"),p=n("f011"),f=n("d556"),h=n("3d50"),m=n("6e83"),b=n("29d8"),g=n("a80f"),y=n("673d"),x=n("3bfc"),O=n("31bb"),v=n("dbf3"),k=n("113e"),w=n("9e7b");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class I{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[i,c,u,l,d,p,f,g,b,h,y,x,O,v,k,w,m],t=[].concat(...e.map(e=>e.json));this.opMappers=t.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],i=n.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e),{});let c=[];const u=[];let l={},d={};null!=t&&(l=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));const p=Object.keys(i);p.forEach(e=>{const t=i[e];t.inputNames.forEach(e=>{const[n]=Object(o["b"])(e);t.inputs.push(i[n]),i[n].children.push(t)})}),0===Object.keys(d).length?p.forEach(e=>{const t=i[e];0===t.children.length&&u.push(t)}):Object.keys(d).forEach(e=>{const[t]=Object(o["b"])(e),n=i[t];null!=n&&(n.signatureKey=d[e],u.push(n))}),Object.keys(l).length>0?Object.keys(l).forEach(e=>{const[t]=Object(o["b"])(e),n=i[t];n&&(n.signatureKey=l[e],c.push(n))}):c=r;let f={};null!=e.library&&null!=e.library.function&&(f=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));const h={nodes:i,inputs:c,outputs:u,weights:a,placeholders:r,signature:t,functions:f};return s.length>0&&(h.initNodes=s),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){const t=Object(s["b"])(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.substr(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((t,n)=>{const r=n.type;let a=void 0;switch(n.type){case"string":a=T(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=T(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=M(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=M(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=C(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=C(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=D(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=D(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=S(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=S(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=P(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=P(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=F(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=F(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=L(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=L(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=A(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=A(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=R(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=R(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=$(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=$(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t},{})),n}mapFunction(e){const t=e.nodeDef,n=[],r=[];let a={};null!=t&&(a=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&r.push(e[t.name]),e),{}));const s=[],i=[];e.signature.inputArg.forEach(e=>{const[t]=Object(o["b"])(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:E(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),a[t]=n});const c=Object.keys(a);c.forEach(e=>{const t=a[e];t.inputNames.forEach(e=>{const[n]=Object(o["b"])(e);t.inputs.push(a[n]),a[n].children.push(t)})});const u=e.ret;e.signature.outputArg.forEach(e=>{const[t,n]=Object(o["b"])(u[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,i.push(r))});const l=this.mapArgsToSignature(e);return{nodes:a,inputs:s,outputs:i,weights:r,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function N(t){const n=Object(r["env"])().global;if("undefined"!==typeof n.atob)return n.atob(t);if("undefined"!==typeof e)return new e(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function j(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):N(e);return t?n:n.toLowerCase()}function T(e,t,n,r=!1){const a=e[t];return null!=a?j(a.s,r):n}function S(e,t,n){const r=e[t];return r?r.b:n}function C(e,t,n){const r=e[t]||{},a=null!=r["i"]?r["i"]:null!=r["f"]?r["f"]:n;return"number"===typeof a?a:parseInt(a,10)}function E(e){switch("string"===typeof e&&(e=a["a"][e]),e){case a["a"].DT_FLOAT:return"float32";case a["a"].DT_INT32:case a["a"].DT_INT64:case a["a"].DT_INT8:case a["a"].DT_UINT8:return"int32";case a["a"].DT_BOOL:return"bool";case a["a"].DT_DOUBLE:return"float32";case a["a"].DT_STRING:return"string";default:return null}}function $(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function A(e,t,n){const r=e[t];return r&&r.type?E(r.type):n}function R(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map(e=>E(e)):n}function _(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"===typeof e.size?e.size:parseInt(e.size,10)):[]}function F(e,t,n){const r=e[t];return r&&r.shape?_(r.shape):n}function D(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(e=>"number"===typeof e?e:parseInt(e,10)):n}function M(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map(e=>j(e,r)):n}function L(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(e=>_(e)):n}function P(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}}).call(this,n("b639").Buffer)},fa0a:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return l}));var r=n("fa11"),a=n("7d43"),s=n("d1e0"),o=n("9277"),i=n("1dd2"),c=n("0cf8");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e){const{inputs:t,backend:n,attrs:l}=e,{x:d}=t,{dtype:p}=l;if("complex64"===p){if("complex64"===d.dtype)return Object(i["a"])({inputs:{x:d},backend:n});const e=Object(s["a"])(n,d.shape,d.dtype),t=u({inputs:{x:d},backend:n,attrs:{dtype:"float32"}}),r=Object(o["a"])({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===d.dtype){const e=Object(c["a"])({inputs:{input:d},backend:n}),t=u({inputs:{x:e},backend:n,attrs:{dtype:p}});return n.disposeIntermediateTensorInfo(e),t}if(!r["util"].hasEncodingLoss(d.dtype,p)){const e=Object(i["a"])({inputs:{x:d},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:p}}if("int32"===p){const e=n.data.get(d.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(d.shape,"int32",t)}if("bool"===p){const e=n.data.get(d.dataId).values,t=r["util"].toTypedArray([0],d.dtype),[s,o]=Object(a["a"])((e,t)=>e!==t?1:0)(d.shape,[],e,t,"bool");return n.makeTensorInfo(o,"bool",s)}throw new Error(`Error in Cast: failed to cast ${d.dtype} to ${p}`)}const l={kernelName:r["Cast"],backendName:"cpu",kernelFunc:u}},fa11:function(e,t,n){"use strict";n.r(t),n.d(t,"AdadeltaOptimizer",(function(){return Rt})),n.d(t,"AdagradOptimizer",(function(){return Ft})),n.d(t,"AdamOptimizer",(function(){return Lt})),n.d(t,"AdamaxOptimizer",(function(){return zt})),n.d(t,"MomentumOptimizer",(function(){return Wt})),n.d(t,"Optimizer",(function(){return At})),n.d(t,"RMSPropOptimizer",(function(){return Ut})),n.d(t,"SGDOptimizer",(function(){return Vt})),n.d(t,"Tensor",(function(){return se["a"]})),n.d(t,"TensorBuffer",(function(){return se["b"]})),n.d(t,"Variable",(function(){return se["c"]})),n.d(t,"Rank",(function(){return Gt["a"]})),n.d(t,"sumOutType",(function(){return Gt["b"]})),n.d(t,"upcastType",(function(){return Gt["c"]})),n.d(t,"abs",(function(){return Ht["b"]})),n.d(t,"acos",(function(){return Ht["c"]})),n.d(t,"acosh",(function(){return Ht["d"]})),n.d(t,"add",(function(){return Ht["e"]})),n.d(t,"addN",(function(){return Ht["f"]})),n.d(t,"all",(function(){return Ht["g"]})),n.d(t,"any",(function(){return Ht["h"]})),n.d(t,"argMax",(function(){return Ht["i"]})),n.d(t,"argMin",(function(){return Ht["j"]})),n.d(t,"asin",(function(){return Ht["k"]})),n.d(t,"asinh",(function(){return Ht["l"]})),n.d(t,"atan",(function(){return Ht["m"]})),n.d(t,"atan2",(function(){return Ht["n"]})),n.d(t,"atanh",(function(){return Ht["o"]})),n.d(t,"avgPool",(function(){return Ht["p"]})),n.d(t,"avgPool3d",(function(){return Ht["q"]})),n.d(t,"basicLSTMCell",(function(){return Ht["r"]})),n.d(t,"batchToSpaceND",(function(){return Ht["w"]})),n.d(t,"batchNorm",(function(){return Ht["s"]})),n.d(t,"batchNorm2d",(function(){return Ht["t"]})),n.d(t,"batchNorm3d",(function(){return Ht["u"]})),n.d(t,"batchNorm4d",(function(){return Ht["v"]})),n.d(t,"bincount",(function(){return Ht["x"]})),n.d(t,"broadcastTo",(function(){return Ht["z"]})),n.d(t,"buffer",(function(){return Ht["A"]})),n.d(t,"cast",(function(){return Ht["B"]})),n.d(t,"ceil",(function(){return Ht["C"]})),n.d(t,"clipByValue",(function(){return Ht["D"]})),n.d(t,"clone",(function(){return Ht["E"]})),n.d(t,"complex",(function(){return Ht["F"]})),n.d(t,"concat",(function(){return Ht["G"]})),n.d(t,"concat1d",(function(){return Ht["H"]})),n.d(t,"concat2d",(function(){return Ht["I"]})),n.d(t,"concat3d",(function(){return Ht["J"]})),n.d(t,"concat4d",(function(){return Ht["K"]})),n.d(t,"conv1d",(function(){return Ht["L"]})),n.d(t,"conv2d",(function(){return Ht["M"]})),n.d(t,"conv2dTranspose",(function(){return Ht["N"]})),n.d(t,"conv3d",(function(){return Ht["O"]})),n.d(t,"conv3dTranspose",(function(){return Ht["P"]})),n.d(t,"cos",(function(){return Ht["Q"]})),n.d(t,"cosh",(function(){return Ht["R"]})),n.d(t,"cumsum",(function(){return Ht["T"]})),n.d(t,"denseBincount",(function(){return Ht["U"]})),n.d(t,"depthToSpace",(function(){return Ht["V"]})),n.d(t,"depthwiseConv2d",(function(){return Ht["W"]})),n.d(t,"diag",(function(){return Ht["X"]})),n.d(t,"dilation2d",(function(){return Ht["Y"]})),n.d(t,"div",(function(){return Ht["Z"]})),n.d(t,"divNoNan",(function(){return Ht["ab"]})),n.d(t,"dot",(function(){return Ht["bb"]})),n.d(t,"einsum",(function(){return Ht["db"]})),n.d(t,"elu",(function(){return Ht["eb"]})),n.d(t,"equal",(function(){return Ht["gb"]})),n.d(t,"erf",(function(){return Ht["hb"]})),n.d(t,"exp",(function(){return Ht["ib"]})),n.d(t,"expandDims",(function(){return Ht["jb"]})),n.d(t,"expm1",(function(){return Ht["kb"]})),n.d(t,"eye",(function(){return Ht["lb"]})),n.d(t,"fill",(function(){return Ht["nb"]})),n.d(t,"floor",(function(){return Ht["ob"]})),n.d(t,"floorDiv",(function(){return Ht["pb"]})),n.d(t,"gather",(function(){return Ht["rb"]})),n.d(t,"greater",(function(){return Ht["tb"]})),n.d(t,"greaterEqual",(function(){return Ht["ub"]})),n.d(t,"imag",(function(){return Ht["wb"]})),n.d(t,"isFinite",(function(){return Ht["Ab"]})),n.d(t,"isInf",(function(){return Ht["Bb"]})),n.d(t,"isNaN",(function(){return Ht["Cb"]})),n.d(t,"leakyRelu",(function(){return Ht["Db"]})),n.d(t,"less",(function(){return Ht["Eb"]})),n.d(t,"lessEqual",(function(){return Ht["Fb"]})),n.d(t,"linspace",(function(){return Ht["Hb"]})),n.d(t,"localResponseNormalization",(function(){return Ht["Ib"]})),n.d(t,"log",(function(){return Ht["Jb"]})),n.d(t,"log1p",(function(){return Ht["Kb"]})),n.d(t,"logSigmoid",(function(){return Ht["Lb"]})),n.d(t,"logSoftmax",(function(){return Ht["Mb"]})),n.d(t,"logSumExp",(function(){return Ht["Nb"]})),n.d(t,"logicalAnd",(function(){return Ht["Ob"]})),n.d(t,"logicalNot",(function(){return Ht["Pb"]})),n.d(t,"logicalOr",(function(){return Ht["Qb"]})),n.d(t,"logicalXor",(function(){return Ht["Rb"]})),n.d(t,"matMul",(function(){return Ht["Tb"]})),n.d(t,"max",(function(){return Ht["Ub"]})),n.d(t,"maxPool",(function(){return Ht["Vb"]})),n.d(t,"maxPool3d",(function(){return Ht["Wb"]})),n.d(t,"maxPoolWithArgmax",(function(){return Ht["Xb"]})),n.d(t,"maximum",(function(){return Ht["Yb"]})),n.d(t,"mean",(function(){return Ht["Zb"]})),n.d(t,"meshgrid",(function(){return Ht["ac"]})),n.d(t,"min",(function(){return Ht["bc"]})),n.d(t,"minimum",(function(){return Ht["cc"]})),n.d(t,"mirrorPad",(function(){return Ht["dc"]})),n.d(t,"mod",(function(){return Ht["ec"]})),n.d(t,"moments",(function(){return Ht["fc"]})),n.d(t,"mul",(function(){return Ht["hc"]})),n.d(t,"multiRNNCell",(function(){return Ht["ic"]})),n.d(t,"multinomial",(function(){return Ht["jc"]})),n.d(t,"neg",(function(){return Ht["kc"]})),n.d(t,"notEqual",(function(){return Ht["mc"]})),n.d(t,"oneHot",(function(){return Ht["nc"]})),n.d(t,"ones",(function(){return Ht["oc"]})),n.d(t,"onesLike",(function(){return Ht["pc"]})),n.d(t,"outerProduct",(function(){return Ht["rc"]})),n.d(t,"pad",(function(){return Ht["sc"]})),n.d(t,"pad1d",(function(){return Ht["tc"]})),n.d(t,"pad2d",(function(){return Ht["uc"]})),n.d(t,"pad3d",(function(){return Ht["vc"]})),n.d(t,"pad4d",(function(){return Ht["wc"]})),n.d(t,"pool",(function(){return Ht["xc"]})),n.d(t,"pow",(function(){return Ht["yc"]})),n.d(t,"prelu",(function(){return Ht["zc"]})),n.d(t,"print",(function(){return Ht["Ac"]})),n.d(t,"prod",(function(){return Ht["Bc"]})),n.d(t,"rand",(function(){return Ht["Cc"]})),n.d(t,"randomGamma",(function(){return Ht["Dc"]})),n.d(t,"randomNormal",(function(){return Ht["Ec"]})),n.d(t,"randomUniform",(function(){return Ht["Fc"]})),n.d(t,"range",(function(){return Ht["Gc"]})),n.d(t,"real",(function(){return Ht["Hc"]})),n.d(t,"reciprocal",(function(){return Ht["Ic"]})),n.d(t,"relu",(function(){return Ht["Jc"]})),n.d(t,"relu6",(function(){return Ht["Kc"]})),n.d(t,"reshape",(function(){return Ht["Lc"]})),n.d(t,"reverse",(function(){return Ht["Mc"]})),n.d(t,"reverse1d",(function(){return Ht["Nc"]})),n.d(t,"reverse2d",(function(){return Ht["Oc"]})),n.d(t,"reverse3d",(function(){return Ht["Pc"]})),n.d(t,"reverse4d",(function(){return Ht["Qc"]})),n.d(t,"round",(function(){return Ht["Sc"]})),n.d(t,"rsqrt",(function(){return Ht["Tc"]})),n.d(t,"scalar",(function(){return Ht["Uc"]})),n.d(t,"selu",(function(){return Ht["Wc"]})),n.d(t,"separableConv2d",(function(){return Ht["Xc"]})),n.d(t,"setdiff1dAsync",(function(){return Ht["Yc"]})),n.d(t,"sigmoid",(function(){return Ht["Zc"]})),n.d(t,"sign",(function(){return Ht["ad"]})),n.d(t,"sin",(function(){return Ht["cd"]})),n.d(t,"sinh",(function(){return Ht["dd"]})),n.d(t,"slice",(function(){return Ht["ed"]})),n.d(t,"slice1d",(function(){return Ht["fd"]})),n.d(t,"slice2d",(function(){return Ht["gd"]})),n.d(t,"slice3d",(function(){return Ht["hd"]})),n.d(t,"slice4d",(function(){return Ht["id"]})),n.d(t,"softmax",(function(){return Ht["jd"]})),n.d(t,"softplus",(function(){return Ht["kd"]})),n.d(t,"spaceToBatchND",(function(){return Ht["ld"]})),n.d(t,"fft",(function(){return Ht["mb"]})),n.d(t,"ifft",(function(){return Ht["vb"]})),n.d(t,"irfft",(function(){return Ht["zb"]})),n.d(t,"rfft",(function(){return Ht["Rc"]})),n.d(t,"split",(function(){return Ht["pd"]})),n.d(t,"sqrt",(function(){return Ht["qd"]})),n.d(t,"square",(function(){return Ht["rd"]})),n.d(t,"squaredDifference",(function(){return Ht["sd"]})),n.d(t,"squeeze",(function(){return Ht["td"]})),n.d(t,"stack",(function(){return Ht["ud"]})),n.d(t,"step",(function(){return Ht["vd"]})),n.d(t,"stridedSlice",(function(){return Ht["wd"]})),n.d(t,"sub",(function(){return Ht["xd"]})),n.d(t,"sum",(function(){return Ht["yd"]})),n.d(t,"tan",(function(){return Ht["zd"]})),n.d(t,"tanh",(function(){return Ht["Ad"]})),n.d(t,"tensor",(function(){return Ht["Bd"]})),n.d(t,"tensor1d",(function(){return Ht["Cd"]})),n.d(t,"tensor2d",(function(){return Ht["Dd"]})),n.d(t,"tensor3d",(function(){return Ht["Ed"]})),n.d(t,"tensor4d",(function(){return Ht["Fd"]})),n.d(t,"tensor5d",(function(){return Ht["Gd"]})),n.d(t,"tensor6d",(function(){return Ht["Hd"]})),n.d(t,"tile",(function(){return Ht["Id"]})),n.d(t,"topk",(function(){return Ht["Jd"]})),n.d(t,"truncatedNormal",(function(){return Ht["Ld"]})),n.d(t,"unique",(function(){return Ht["Md"]})),n.d(t,"unsortedSegmentSum",(function(){return Ht["Nd"]})),n.d(t,"unstack",(function(){return Ht["Od"]})),n.d(t,"variable",(function(){return Ht["Pd"]})),n.d(t,"where",(function(){return Ht["Qd"]})),n.d(t,"whereAsync",(function(){return Ht["Rd"]})),n.d(t,"zeros",(function(){return Ht["Sd"]})),n.d(t,"zerosLike",(function(){return Ht["Td"]})),n.d(t,"booleanMaskAsync",(function(){return Ht["y"]})),n.d(t,"transpose",(function(){return Ht["Kd"]})),n.d(t,"norm",(function(){return Ht["lc"]})),n.d(t,"movingAverage",(function(){return Ht["gc"]})),n.d(t,"scatterND",(function(){return Ht["Vc"]})),n.d(t,"sparseToDense",(function(){return Ht["nd"]})),n.d(t,"gatherND",(function(){return Ht["sb"]})),n.d(t,"dropout",(function(){return Ht["cb"]})),n.d(t,"enclosingPowerOfTwo",(function(){return Ht["fb"]})),n.d(t,"cosineWindow",(function(){return Ht["S"]})),n.d(t,"inTopKAsync",(function(){return Ht["yb"]})),n.d(t,"op",(function(){return Ht["qc"]})),n.d(t,"OP_SCOPE_SUFFIX",(function(){return Ht["a"]})),n.d(t,"image",(function(){return Ht["xb"]})),n.d(t,"linalg",(function(){return Ht["Gb"]})),n.d(t,"losses",(function(){return Ht["Sb"]})),n.d(t,"spectral",(function(){return Ht["od"]})),n.d(t,"fused",(function(){return Ht["qb"]})),n.d(t,"signal",(function(){return Ht["bd"]})),n.d(t,"sparse",(function(){return Ht["md"]})),n.d(t,"Reduction",(function(){return qt["a"]})),n.d(t,"train",(function(){return Xt})),n.d(t,"enableProdMode",(function(){return wt["g"]})),n.d(t,"enableDebugMode",(function(){return wt["f"]})),n.d(t,"disableDeprecationWarnings",(function(){return wt["c"]})),n.d(t,"deprecationWarn",(function(){return wt["b"]})),n.d(t,"disposeVariables",(function(){return wt["e"]})),n.d(t,"engine",(function(){return wt["h"]})),n.d(t,"memory",(function(){return wt["m"]})),n.d(t,"profile",(function(){return wt["n"]})),n.d(t,"tidy",(function(){return wt["t"]})),n.d(t,"dispose",(function(){return wt["d"]})),n.d(t,"keep",(function(){return wt["l"]})),n.d(t,"time",(function(){return wt["u"]})),n.d(t,"setBackend",(function(){return wt["r"]})),n.d(t,"ready",(function(){return wt["o"]})),n.d(t,"getBackend",(function(){return wt["k"]})),n.d(t,"removeBackend",(function(){return wt["q"]})),n.d(t,"findBackend",(function(){return wt["i"]})),n.d(t,"findBackendFactory",(function(){return wt["j"]})),n.d(t,"registerBackend",(function(){return wt["p"]})),n.d(t,"backend",(function(){return wt["a"]})),n.d(t,"setPlatform",(function(){return wt["s"]})),n.d(t,"getKernel",(function(){return ze["c"]})),n.d(t,"getGradient",(function(){return ze["b"]})),n.d(t,"getKernelsForBackend",(function(){return ze["d"]})),n.d(t,"registerKernel",(function(){return ze["f"]})),n.d(t,"registerGradient",(function(){return ze["e"]})),n.d(t,"unregisterKernel",(function(){return ze["h"]})),n.d(t,"unregisterGradient",(function(){return ze["g"]})),n.d(t,"copyRegisteredKernels",(function(){return ze["a"]})),n.d(t,"customGrad",(function(){return Et["a"]})),n.d(t,"grad",(function(){return Et["b"]})),n.d(t,"grads",(function(){return Et["c"]})),n.d(t,"valueAndGrad",(function(){return Et["d"]})),n.d(t,"valueAndGrads",(function(){return Et["e"]})),n.d(t,"variableGrads",(function(){return Et["f"]})),n.d(t,"Environment",(function(){return f["b"]})),n.d(t,"env",(function(){return f["c"]})),n.d(t,"ENV",(function(){return f["a"]})),n.d(t,"version_core",(function(){return kt})),n.d(t,"nextFrame",(function(){return Qt})),n.d(t,"browser",(function(){return s})),n.d(t,"io",(function(){return r})),n.d(t,"math",(function(){return a})),n.d(t,"serialization",(function(){return c})),n.d(t,"test_util",(function(){return Ot})),n.d(t,"util",(function(){return vt})),n.d(t,"backend_util",(function(){return l})),n.d(t,"tensor_util",(function(){return xt})),n.d(t,"slice_util",(function(){return i})),n.d(t,"gather_util",(function(){return o})),n.d(t,"scatter_util",(function(){return Je})),n.d(t,"device_util",(function(){return qn})),n.d(t,"kernel_impls",(function(){return d})),n.d(t,"KernelBackend",(function(){return Yn["b"]})),n.d(t,"DataStorage",(function(){return Yn["a"]})),n.d(t,"Abs",(function(){return Be["a"]})),n.d(t,"Acos",(function(){return Be["b"]})),n.d(t,"Acosh",(function(){return Be["c"]})),n.d(t,"Add",(function(){return Be["d"]})),n.d(t,"AddN",(function(){return Be["e"]})),n.d(t,"All",(function(){return Be["f"]})),n.d(t,"Any",(function(){return Be["g"]})),n.d(t,"ArgMax",(function(){return Be["h"]})),n.d(t,"ArgMin",(function(){return Be["i"]})),n.d(t,"Asin",(function(){return Be["j"]})),n.d(t,"Asinh",(function(){return Be["k"]})),n.d(t,"Atan",(function(){return Be["l"]})),n.d(t,"Atanh",(function(){return Be["n"]})),n.d(t,"Atan2",(function(){return Be["m"]})),n.d(t,"AvgPool",(function(){return Be["o"]})),n.d(t,"AvgPoolGrad",(function(){return Be["r"]})),n.d(t,"AvgPool3D",(function(){return Be["p"]})),n.d(t,"AvgPool3DGrad",(function(){return Be["q"]})),n.d(t,"BatchMatMul",(function(){return Be["s"]})),n.d(t,"BatchToSpaceND",(function(){return Be["t"]})),n.d(t,"Bincount",(function(){return Be["u"]})),n.d(t,"BroadcastTo",(function(){return Be["v"]})),n.d(t,"Cast",(function(){return Be["w"]})),n.d(t,"Ceil",(function(){return Be["x"]})),n.d(t,"ClipByValue",(function(){return Be["y"]})),n.d(t,"Complex",(function(){return Be["z"]})),n.d(t,"ComplexAbs",(function(){return Be["A"]})),n.d(t,"Concat",(function(){return Be["B"]})),n.d(t,"Conv2D",(function(){return Be["C"]})),n.d(t,"Conv2DBackpropFilter",(function(){return Be["D"]})),n.d(t,"Conv2DBackpropInput",(function(){return Be["E"]})),n.d(t,"Conv3D",(function(){return Be["F"]})),n.d(t,"Conv3DBackpropFilterV2",(function(){return Be["G"]})),n.d(t,"Conv3DBackpropInputV2",(function(){return Be["H"]})),n.d(t,"Cos",(function(){return Be["I"]})),n.d(t,"Cosh",(function(){return Be["J"]})),n.d(t,"Cumsum",(function(){return Be["L"]})),n.d(t,"CropAndResize",(function(){return Be["K"]})),n.d(t,"DenseBincount",(function(){return Be["M"]})),n.d(t,"DepthToSpace",(function(){return Be["N"]})),n.d(t,"DepthwiseConv2dNative",(function(){return Be["O"]})),n.d(t,"DepthwiseConv2dNativeBackpropFilter",(function(){return Be["P"]})),n.d(t,"DepthwiseConv2dNativeBackpropInput",(function(){return Be["Q"]})),n.d(t,"Diag",(function(){return Be["R"]})),n.d(t,"Dilation2D",(function(){return Be["S"]})),n.d(t,"Dilation2DBackpropInput",(function(){return Be["U"]})),n.d(t,"Dilation2DBackpropFilter",(function(){return Be["T"]})),n.d(t,"RealDiv",(function(){return Be["lc"]})),n.d(t,"Einsum",(function(){return Be["V"]})),n.d(t,"Elu",(function(){return Be["W"]})),n.d(t,"EluGrad",(function(){return Be["X"]})),n.d(t,"Erf",(function(){return Be["Z"]})),n.d(t,"Equal",(function(){return Be["Y"]})),n.d(t,"Exp",(function(){return Be["ab"]})),n.d(t,"ExpandDims",(function(){return Be["bb"]})),n.d(t,"Expm1",(function(){return Be["cb"]})),n.d(t,"FFT",(function(){return Be["db"]})),n.d(t,"Fill",(function(){return Be["eb"]})),n.d(t,"FlipLeftRight",(function(){return Be["fb"]})),n.d(t,"Floor",(function(){return Be["gb"]})),n.d(t,"FloorDiv",(function(){return Be["hb"]})),n.d(t,"FusedBatchNorm",(function(){return Be["jb"]})),n.d(t,"GatherV2",(function(){return Be["nb"]})),n.d(t,"GatherNd",(function(){return Be["mb"]})),n.d(t,"Greater",(function(){return Be["ob"]})),n.d(t,"GreaterEqual",(function(){return Be["pb"]})),n.d(t,"Identity",(function(){return Be["rb"]})),n.d(t,"IFFT",(function(){return Be["qb"]})),n.d(t,"Imag",(function(){return Be["sb"]})),n.d(t,"IsFinite",(function(){return Be["tb"]})),n.d(t,"IsInf",(function(){return Be["ub"]})),n.d(t,"IsNan",(function(){return Be["vb"]})),n.d(t,"LeakyRelu",(function(){return Be["yb"]})),n.d(t,"Less",(function(){return Be["zb"]})),n.d(t,"LessEqual",(function(){return Be["Ab"]})),n.d(t,"LinSpace",(function(){return Be["Bb"]})),n.d(t,"Log",(function(){return Be["Cb"]})),n.d(t,"Log1p",(function(){return Be["Db"]})),n.d(t,"LogicalAnd",(function(){return Be["Fb"]})),n.d(t,"LogicalNot",(function(){return Be["Gb"]})),n.d(t,"LogicalOr",(function(){return Be["Hb"]})),n.d(t,"LogSoftmax",(function(){return Be["Eb"]})),n.d(t,"LRN",(function(){return Be["wb"]})),n.d(t,"LRNGrad",(function(){return Be["xb"]})),n.d(t,"Max",(function(){return Be["Ib"]})),n.d(t,"Maximum",(function(){return Be["Ob"]})),n.d(t,"MaxPool",(function(){return Be["Jb"]})),n.d(t,"MaxPoolGrad",(function(){return Be["Mb"]})),n.d(t,"MaxPool3D",(function(){return Be["Kb"]})),n.d(t,"MaxPool3DGrad",(function(){return Be["Lb"]})),n.d(t,"MaxPoolWithArgmax",(function(){return Be["Nb"]})),n.d(t,"Mean",(function(){return Be["Pb"]})),n.d(t,"Min",(function(){return Be["Qb"]})),n.d(t,"Minimum",(function(){return Be["Rb"]})),n.d(t,"MirrorPad",(function(){return Be["Sb"]})),n.d(t,"Mod",(function(){return Be["Tb"]})),n.d(t,"Multinomial",(function(){return Be["Ub"]})),n.d(t,"Multiply",(function(){return Be["Vb"]})),n.d(t,"Neg",(function(){return Be["Wb"]})),n.d(t,"NotEqual",(function(){return Be["ac"]})),n.d(t,"NonMaxSuppressionV3",(function(){return Be["Xb"]})),n.d(t,"NonMaxSuppressionV4",(function(){return Be["Yb"]})),n.d(t,"NonMaxSuppressionV5",(function(){return Be["Zb"]})),n.d(t,"OnesLike",(function(){return Be["cc"]})),n.d(t,"OneHot",(function(){return Be["bc"]})),n.d(t,"Pack",(function(){return Be["dc"]})),n.d(t,"PadV2",(function(){return Be["ec"]})),n.d(t,"Pool",(function(){return Be["fc"]})),n.d(t,"Pow",(function(){return Be["gc"]})),n.d(t,"Prelu",(function(){return Be["hc"]})),n.d(t,"Prod",(function(){return Be["ic"]})),n.d(t,"Range",(function(){return Be["jc"]})),n.d(t,"Real",(function(){return Be["kc"]})),n.d(t,"Reciprocal",(function(){return Be["mc"]})),n.d(t,"Relu",(function(){return Be["nc"]})),n.d(t,"Reshape",(function(){return Be["pc"]})),n.d(t,"ResizeNearestNeighbor",(function(){return Be["sc"]})),n.d(t,"ResizeNearestNeighborGrad",(function(){return Be["tc"]})),n.d(t,"ResizeBilinear",(function(){return Be["qc"]})),n.d(t,"ResizeBilinearGrad",(function(){return Be["rc"]})),n.d(t,"Relu6",(function(){return Be["oc"]})),n.d(t,"Reverse",(function(){return Be["uc"]})),n.d(t,"Round",(function(){return Be["wc"]})),n.d(t,"Rsqrt",(function(){return Be["xc"]})),n.d(t,"ScatterNd",(function(){return Be["yc"]})),n.d(t,"Select",(function(){return Be["zc"]})),n.d(t,"Selu",(function(){return Be["Ac"]})),n.d(t,"Slice",(function(){return Be["Fc"]})),n.d(t,"Sin",(function(){return Be["Dc"]})),n.d(t,"Sinh",(function(){return Be["Ec"]})),n.d(t,"Sign",(function(){return Be["Cc"]})),n.d(t,"Sigmoid",(function(){return Be["Bc"]})),n.d(t,"Softplus",(function(){return Be["Hc"]})),n.d(t,"Sqrt",(function(){return Be["Nc"]})),n.d(t,"Sum",(function(){return Be["Tc"]})),n.d(t,"SpaceToBatchND",(function(){return Be["Ic"]})),n.d(t,"SplitV",(function(){return Be["Mc"]})),n.d(t,"Softmax",(function(){return Be["Gc"]})),n.d(t,"SparseFillEmptyRows",(function(){return Be["Jc"]})),n.d(t,"SparseReshape",(function(){return Be["Kc"]})),n.d(t,"SparseToDense",(function(){return Be["Lc"]})),n.d(t,"SquaredDifference",(function(){return Be["Pc"]})),n.d(t,"Square",(function(){return Be["Oc"]})),n.d(t,"StridedSlice",(function(){return Be["Rc"]})),n.d(t,"Sub",(function(){return Be["Sc"]})),n.d(t,"Tan",(function(){return Be["Uc"]})),n.d(t,"Tanh",(function(){return Be["Vc"]})),n.d(t,"Tile",(function(){return Be["Wc"]})),n.d(t,"TopK",(function(){return Be["Xc"]})),n.d(t,"Transform",(function(){return Be["Yc"]})),n.d(t,"Transpose",(function(){return Be["Zc"]})),n.d(t,"Unique",(function(){return Be["ad"]})),n.d(t,"Unpack",(function(){return Be["bd"]})),n.d(t,"UnsortedSegmentSum",(function(){return Be["cd"]})),n.d(t,"ZerosLike",(function(){return Be["dd"]})),n.d(t,"Step",(function(){return Be["Qc"]})),n.d(t,"FromPixels",(function(){return Be["ib"]})),n.d(t,"RotateWithOffset",(function(){return Be["vc"]})),n.d(t,"_FusedMatMul",(function(){return Be["ed"]})),n.d(t,"FusedConv2D",(function(){return Be["kb"]})),n.d(t,"FusedDepthwiseConv2D",(function(){return Be["lb"]}));var r={};n.r(r),n.d(r,"copyModel",(function(){return Z})),n.d(r,"listModels",(function(){return Y})),n.d(r,"moveModel",(function(){return J})),n.d(r,"removeModel",(function(){return Q})),n.d(r,"browserFiles",(function(){return me})),n.d(r,"browserHTTPRequest",(function(){return Se})),n.d(r,"concatenateArrayBuffers",(function(){return h["d"]})),n.d(r,"decodeWeights",(function(){return h["e"]})),n.d(r,"encodeWeights",(function(){return h["f"]})),n.d(r,"fromMemory",(function(){return $e})),n.d(r,"getLoadHandlers",(function(){return x})),n.d(r,"getModelArtifactsInfoForJSON",(function(){return h["g"]})),n.d(r,"getSaveHandlers",(function(){return y})),n.d(r,"http",(function(){return Te})),n.d(r,"isHTTPScheme",(function(){return Ne})),n.d(r,"loadWeights",(function(){return xe})),n.d(r,"registerLoadRouter",(function(){return g})),n.d(r,"registerSaveRouter",(function(){return b})),n.d(r,"weightsLoaderFactory",(function(){return Oe})),n.d(r,"withSaveHandler",(function(){return Ae}));var a={};n.r(a),n.d(a,"confusionMatrix",(function(){return Pe}));var s={};n.r(s),n.d(s,"fromPixelsAsync",(function(){return Xe})),n.d(s,"toPixels",(function(){return Ye})),n.d(s,"fromPixels",(function(){return Qe}));var o={};n.r(o),n.d(o,"prepareAndValidate",(function(){return Ze}));var i={};n.r(i),n.d(i,"assertParamsValid",(function(){return et})),n.d(i,"maskToAxes",(function(){return tt})),n.d(i,"computeOutShape",(function(){return nt})),n.d(i,"stridesWithElidedDims",(function(){return rt})),n.d(i,"getNormalizedAxes",(function(){return ot})),n.d(i,"startIndicesWithElidedDims",(function(){return it})),n.d(i,"stopIndicesWithElidedDims",(function(){return ct})),n.d(i,"stridesForAxis",(function(){return ut})),n.d(i,"startForAxis",(function(){return lt})),n.d(i,"stopForAxis",(function(){return dt})),n.d(i,"isSliceContinous",(function(){return pt})),n.d(i,"computeFlatOffset",(function(){return ft})),n.d(i,"parseSliceParams",(function(){return ht})),n.d(i,"sliceInfo",(function(){return mt}));var c={};n.r(c),n.d(c,"Serializable",(function(){return bt})),n.d(c,"SerializationMap",(function(){return gt})),n.d(c,"registerClass",(function(){return yt}));var u={};n.r(u),n.d(u,"segOpComputeOptimalWindowSize",(function(){return Vn})),n.d(u,"computeOutShape",(function(){return Wn})),n.d(u,"collectGatherOpShapeInfo",(function(){return Un}));var l={};n.r(l),n.d(l,"axesAreInnerMostDims",(function(){return Zt["b"]})),n.d(l,"combineLocations",(function(){return Zt["c"]})),n.d(l,"computeOutAndReduceShapes",(function(){return Zt["d"]})),n.d(l,"expandShapeToKeepDim",(function(){return Zt["e"]})),n.d(l,"assertAxesAreInnerMostDims",(function(){return Zt["a"]})),n.d(l,"getAxesPermutation",(function(){return Zt["f"]})),n.d(l,"getUndoAxesPermutation",(function(){return Zt["h"]})),n.d(l,"getInnerMostAxes",(function(){return Zt["g"]})),n.d(l,"getBroadcastDims",(function(){return Jt["b"]})),n.d(l,"getReductionAxes",(function(){return Jt["c"]})),n.d(l,"assertAndGetBroadcastShape",(function(){return Jt["a"]})),n.d(l,"assertParamsConsistent",(function(){return en})),n.d(l,"computeOutShape",(function(){return tn})),n.d(l,"computeDilation2DInfo",(function(){return nn["d"]})),n.d(l,"computePool2DInfo",(function(){return nn["e"]})),n.d(l,"computePool3DInfo",(function(){return nn["f"]})),n.d(l,"computeConv2DInfo",(function(){return nn["a"]})),n.d(l,"computeConv3DInfo",(function(){return nn["b"]})),n.d(l,"computeDefaultPad",(function(){return nn["c"]})),n.d(l,"tupleValuesAreOne",(function(){return nn["i"]})),n.d(l,"eitherStridesOrDilationsAreOne",(function(){return nn["h"]})),n.d(l,"convertConv2DDataFormat",(function(){return nn["g"]})),n.d(l,"getFusedDyActivation",(function(){return rn["c"]})),n.d(l,"getFusedBiasGradient",(function(){return rn["b"]})),n.d(l,"applyActivation",(function(){return rn["a"]})),n.d(l,"shouldFuse",(function(){return rn["d"]})),n.d(l,"PARALLELIZE_THRESHOLD",(function(){return an})),n.d(l,"computeOptimalWindowSize",(function(){return sn})),n.d(l,"slice_util",(function(){return i})),n.d(l,"upcastType",(function(){return Gt["c"]})),n.d(l,"getImageCenter",(function(){return on})),n.d(l,"getReshaped",(function(){return cn})),n.d(l,"getPermuted",(function(){return un})),n.d(l,"getReshapedPermuted",(function(){return ln})),n.d(l,"getSliceBeginCoords",(function(){return dn})),n.d(l,"getSliceSize",(function(){return pn})),n.d(l,"prepareAndValidate",(function(){return Ze})),n.d(l,"validateUpdateShape",(function(){return Je["validateUpdateShape"]})),n.d(l,"validateInput",(function(){return Je["validateInput"]})),n.d(l,"calculateShapes",(function(){return Je["calculateShapes"]})),n.d(l,"SELU_SCALEALPHA",(function(){return fn})),n.d(l,"SELU_SCALE",(function(){return hn})),n.d(l,"ERF_P",(function(){return mn})),n.d(l,"ERF_A1",(function(){return bn})),n.d(l,"ERF_A2",(function(){return gn})),n.d(l,"ERF_A3",(function(){return yn})),n.d(l,"ERF_A4",(function(){return xn})),n.d(l,"ERF_A5",(function(){return On})),n.d(l,"warn",(function(){return vn})),n.d(l,"log",(function(){return kn})),n.d(l,"mergeRealAndImagArrays",(function(){return wn})),n.d(l,"splitRealAndImagArrays",(function(){return In})),n.d(l,"complexWithEvenIndex",(function(){return Nn})),n.d(l,"complexWithOddIndex",(function(){return jn})),n.d(l,"getComplexWithIndex",(function(){return Tn})),n.d(l,"assignToTypedArray",(function(){return Sn})),n.d(l,"exponents",(function(){return Cn})),n.d(l,"exponent",(function(){return En})),n.d(l,"decodeEinsumEquation",(function(){return Fn})),n.d(l,"getEinsumPermutation",(function(){return Dn})),n.d(l,"checkEinsumDimSizes",(function(){return Mn})),n.d(l,"getEinsumComputePath",(function(){return Ln})),n.d(l,"isIdentityPermutation",(function(){return Pn})),n.d(l,"prepareSplitSize",(function(){return zn})),n.d(l,"segment_util",(function(){return u})),n.d(l,"fromUint8ToStringArray",(function(){return Gn})),n.d(l,"fromStringArrayToUint8",(function(){return Hn}));var d={};n.r(d),n.d(d,"nonMaxSuppressionV3Impl",(function(){return Kn["a"]})),n.d(d,"nonMaxSuppressionV4Impl",(function(){return Kn["b"]})),n.d(d,"nonMaxSuppressionV5Impl",(function(){return Kn["c"]})),n.d(d,"whereImpl",(function(){return Xn["a"]}));var p=n("6ae2"),f=(n("29a8"),n("b333")),h=n("350f");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class m{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==m.instance&&(m.instance=new m),m.instance}static registerSaveRouter(e){m.getInstance().saveRouters.push(e)}static registerLoadRouter(e){m.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return m.getHandlers(e,"save")}static getLoadHandlers(e,t){return m.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[],a="load"===t?m.getInstance().loadRouters:m.getInstance().saveRouters;return a.forEach(t=>{const a=t(e,n);null!==a&&r.push(a)}),r}}const b=e=>m.registerSaveRouter(e),g=e=>m.registerLoadRouter(e),y=e=>m.getSaveHandlers(e),x=(e,t)=>m.getLoadHandlers(e,t)
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */,O="tensorflowjs",v=1,k="models_store",w="model_info_store";function I(){if(!Object(f["c"])().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function N(e){const t=e.result;t.createObjectStore(k,{keyPath:"modelPath"}),t.createObjectStore(w,{keyPath:"modelPath"})}class j{constructor(e){if(this.indexedDB=I(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open(O,v);r.onupgradeneeded=()=>N(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(k,"readonly"),r=t.objectStore(k),s=r.get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(s.result.modelArtifacts)},s.onerror=e=>(a.close(),n(s.error)),t.oncomplete=()=>a.close()}else{const r=Object(h["g"])(t),s=a.transaction(w,"readwrite");let o=s.objectStore(w);const i=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let c;i.onsuccess=()=>{c=a.transaction(k,"readwrite");const i=c.objectStore(k),u=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});u.onsuccess=()=>e({modelArtifactsInfo:r}),u.onerror=e=>{o=s.objectStore(w);const t=o.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(u.error)),t.onerror=e=>(a.close(),n(u.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==c?a.close():c.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)})}}j.URL_SCHEME="indexeddb://";const T=e=>Object(f["c"])().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(j.URL_SCHEME)?S(e.slice(j.URL_SCHEME.length)):null;function S(e){return new j(e)}function C(e){return e.startsWith(j.URL_SCHEME)?e.slice(j.URL_SCHEME.length):e}m.registerSaveRouter(T),m.registerLoadRouter(T);class E{constructor(){this.indexedDB=I()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open(O,v);n.onupgradeneeded=()=>N(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(w,"readonly"),s=a.objectStore(w),o=s.getAll();o.onsuccess=()=>{const t={};for(const e of o.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},o.onerror=e=>(r.close(),t(o.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){return e=C(e),new Promise((t,n)=>{const r=this.indexedDB.open(O,v);r.onupgradeneeded=()=>N(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(w,"readwrite"),o=s.objectStore(w),i=o.get(e);let c;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),s=()=>{c=a.transaction(k,"readwrite");const r=c.objectStore(k),s=r.delete(e);s.onsuccess=()=>t(i.result.modelArtifactsInfo),s.onerror=e=>n(i.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==c?a.close():c.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)})}}var $=n("6ad5");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A="/",R="tensorflowjs_models",_="info",F="model_topology",D="weight_specs",M="weight_data",L="model_metadata";function P(e){return{info:[R,e,_].join(A),topology:[R,e,F].join(A),weightSpecs:[R,e,D].join(A),weightData:[R,e,M].join(A),modelMetadata:[R,e,L].join(A)}}function B(e){const t=e.split(A);if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join(A)}function z(e){return e.startsWith(V.URL_SCHEME)?e.slice(V.URL_SCHEME.length):e}class V{constructor(e){if(!Object(f["c"])().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=P(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),a=Object(h["g"])(e);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,Object(h["a"])(e.weightData));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:a}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e["format"],t.generatedBy=e["generatedBy"],t.convertedBy=e["convertedBy"],null!=e["signature"]&&(t.signature=e["signature"]),null!=e["userDefinedMetadata"]&&(t.userDefinedMetadata=e["userDefinedMetadata"]),null!=e["modelInitializer"]&&(t.modelInitializer=e["modelInitializer"])}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=Object(h["b"])(s),t}}V.URL_SCHEME="localstorage://";const W=e=>Object(f["c"])().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(V.URL_SCHEME)?U(e.slice(V.URL_SCHEME.length)):null;function U(e){return new V(e)}m.registerSaveRouter(W),m.registerLoadRouter(W);class G{constructor(){Object($["b"])(Object(f["c"])().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Object($["b"])("undefined"===typeof window||"undefined"!==typeof window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=R+A,n=A+_;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){const t=B(a);e[t]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){e=z(e);const t=P(e);if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);const n=JSON.parse(this.LS.getItem(t.info));return this.LS.removeItem(t.info),this.LS.removeItem(t.topology),this.LS.removeItem(t.weightSpecs),this.LS.removeItem(t.weightData),n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H="://";class q{constructor(){this.managers={}}static getInstance(){return null==q.instance&&(q.instance=new q),q.instance}static registerManager(e,t){Object($["b"])(null!=e,()=>"scheme must not be undefined or null."),e.endsWith(H)&&(e=e.slice(0,e.indexOf(H))),Object($["b"])(e.length>0,()=>"scheme must not be an empty string.");const n=q.getInstance();Object($["b"])(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function K(e){if(-1===e.indexOf(H))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+q.getSchemes().join(","));return{scheme:e.split(H)[0],path:e.split(H)[1]}}async function X(e,t,n=!1){Object($["b"])(e!==t,()=>`Old path and new path are the same: '${e}'`);const r=m.getLoadHandlers(e);Object($["b"])(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),Object($["b"])(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);const a=r[0],s=m.getSaveHandlers(t);Object($["b"])(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),Object($["b"])(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);const o=s[0],i=K(e).scheme,c=K(e).path,u=i===K(e).scheme,l=await a.load();n&&u&&await q.getManager(i).removeModel(c);const d=await o.save(l);return n&&!u&&await q.getManager(i).removeModel(c),d.modelArtifactsInfo}async function Y(){const e=q.getSchemes(),t={};for(const n of e){const e=await q.getManager(n).listModels();for(const r in e){const a=n+H+r;t[a]=e[r]}}return t}async function Q(e){const t=K(e),n=q.getManager(t.scheme);return n.removeModel(t.path)}async function Z(e,t){const n=!1;return X(e,t,n)}async function J(e,t){const n=!0;return X(e,t,n)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ee{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Object(f["c"])().get("IS_BROWSER")){Object(f["c"])().setPlatform("browser",new ee);try{q.registerManager(V.URL_SCHEME,new G)}catch(Qn){}try{q.registerManager(j.URL_SCHEME,new E)}catch(Qn){}}n("4b05");var te=n("043e"),ne=n("deb3"),re=n("f0a9"),ae=n("7568"),se=n("34d7");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(p["b"])();const oe={buffer:te["a"],cast:ne["a"],clone:re["a"],print:ae["a"]};Object(se["e"])(oe);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ie="model",ce=".json",ue=".weights.bin";function le(e){return new Promise(e=>setTimeout(e)).then(e)}class de{constructor(e){if(!Object(f["c"])().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(de.URL_SCHEME)&&(e=e.slice(de.URL_SCHEME.length)),null!=e&&0!==e.length||(e=ie),this.modelTopologyFileName=e+ce,this.weightDataFileName=e+ue}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);const a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=a,await le(()=>s.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await le(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Object(h["g"])(e)}}}}de.URL_SCHEME="downloads://";class pe{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+e);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise((n,r)=>{const a=new FileReader;a.onload=a=>{const s=JSON.parse(a.target.result),o=s.modelTopology;if(null==o)return void r(new Error("modelTopology field is missing from file "+e.name));0===t.length&&n({modelTopology:o});const i=s.weightsManifest;if(null==i)return void r(new Error("weightManifest field is missing from file "+e.name));let c;try{c=this.checkManifestAndWeightFiles(i,t)}catch(Qn){return void r(Qn)}const u=[],l=[],d=[];i.forEach(e=>{e.paths.forEach(e=>{l.push(e),d.push(null)}),u.push(...e.weights)}),i.forEach(e=>{e.paths.forEach(e=>{const t=new FileReader;t.onload=t=>{const r=t.target.result,a=l.indexOf(e);if(d[a]=r,-1===d.indexOf(null)){const e={modelTopology:o,weightSpecs:u,weightData:Object(h["d"])(d),format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};null!=s.signature&&(e.signature=s.signature),null!=s.userDefinedMetadata&&(e.userDefinedMetadata=s.userDefinedMetadata),null!=s.modelInitializer&&(e.modelInitializer=s.modelInitializer),n(e)}},t.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(c[e])})})},a.onerror=t=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),a.readAsText(e)})}checkManifestAndWeightFiles(e,t){const n=[],r=t.map(e=>Object(h["c"])(e.name)),a={};for(const s of e)s.paths.forEach(e=>{const s=Object(h["c"])(e);if(-1!==n.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(n.push(s),-1===r.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);a[e]=t[r.indexOf(s)]});if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return a}}const fe=e=>Object(f["c"])().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(de.URL_SCHEME)?he(e.slice(de.URL_SCHEME.length)):null;function he(e="model"){return new de(e)}function me(e){return new pe(e)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function be(e,t,n,r){o(e),n=null==n?0:n,r=null==r?1:r,i(n,r);let a=0;const s=s=>(s.then(s=>{const o=n+ ++a/e.length*(r-n);return t(o),s}),s);function o(e){Object($["b"])(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}function i(e,t){Object($["b"])(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+e),Object($["b"])(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+t),Object($["b"])(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction `+t)}return Promise.all(e.map(s))}m.registerSaveRouter(fe);var ge=n("9847");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function ye(e,t){null==t&&(t={});const n=null==t.fetchFunc?Object(f["c"])().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),a=0,s=.5,o=null==t.onProgress?await Promise.all(r):await be(r,t.onProgress,a,s),i=o.map(e=>e.arrayBuffer()),c=.5,u=1,l=null==t.onProgress?await Promise.all(i):await be(i,t.onProgress,c,u);return l}async function xe(e,t="",n,r){const a=e=>ye(e,{requestInit:r}),s=Oe(a);return s(e,t,n)}function Oe(e){return async(t,n="",r)=>{const a=t.map(()=>!1),s={},o=null!=r?r.map(()=>!1):[],i=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{const c="quantization"in e?e.quantization.dtype:e.dtype,u=ge["a"][c]*$["O"](e.shape),l=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach((t,n)=>{t===e.name&&(l(),o[n]=!0)}):l(),i.push(e.name),n+=u})}),!o.every(e=>e)){const e=r.filter((e,t)=>!o[t]);throw new Error("Could not find weights in manifest with names: "+e.join(", ")+". \nManifest JSON has weights with names: "+i.join(", ")+".")}const c=a.reduce((e,t,n)=>(t&&e.push(n),e),[]),u=[];c.forEach(e=>{t[e].paths.forEach(e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)})});const l=await e(u),d={};let p=0;return c.forEach(e=>{const n=t[e].paths.length;let r=0;for(let t=0;t<n;t++)r+=l[p+t].byteLength;const a=new ArrayBuffer(r),o=new Uint8Array(a);let i=0;for(let t=0;t<n;t++){const e=new Uint8Array(l[p+t]);o.set(e,i),i+=e.byteLength}const c=s[e];c.forEach(e=>{const t=a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=Object(h["e"])(t,[e.manifestEntry]);for(const r in n)d[r]=n[r]}),p+=n}),d}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ve="application/octet-stream",ke="application/json";class we{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Object($["b"])("function"===typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Object(f["c"])().platform.fetch,Object($["b"])(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&Object($["b"])(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:ke}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:ve}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Object(h["g"])(e),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+a.status+".")}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code `+e.status+". Please verify this URL points to the model JSON of the model to load.");let t;try{t=await e.json()}catch(f){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest,a=t.generatedBy,s=t.convertedBy,o=t.format,i=t.signature,c=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,l;if(null!=r){const e=await this.loadWeights(r);[u,l]=e}const d={modelTopology:n,weightSpecs:u,weightData:l,generatedBy:a,convertedBy:s,format:o};null!=i&&(d.signature=i),null!=c&&(d.userDefinedMetadata=c);const p=t.modelInitializer;return p&&(d.modelInitializer=p),d}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=Ie(t),a=this.weightPathPrefix||n,s=[];for(const u of e)s.push(...u.weights);const o=[],i=[];for(const u of e)for(const e of u.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):o.push(a+e+r);this.weightUrlConverter&&o.push(...await Promise.all(i));const c=await ye(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,Object(h["d"])(c)]}}function Ie(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}function Ne(e){return null!=e.match(we.URL_SCHEME_REGEX)}we.URL_SCHEME_REGEX=/^https?:\/\//;const je=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>Ne(e)):Ne(e),n)return Te(e,t)}return null};function Te(e,t){return new we(e,t)}function Se(e,t){return Te(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */m.registerSaveRouter(je),m.registerLoadRouter(je);class Ce{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Ee{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function $e(e,t,n,r){if(1===arguments.length){const t=null!=e.modelTopology||null!=e.weightSpecs;return t?new Ce(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ce({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ce({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function Ae(e){return new Ee(e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Re=n("a3f7"),_e=n("487b"),Fe=n("e22c"),De=n("54ef"),Me=n("c912");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Le(e,t,n){const r=Object(Re["a"])(e,"labels","confusionMatrix"),a=Object(Re["a"])(t,"predictions","confusionMatrix");$["b"](null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, but got "+n),$["b"](1===r.rank,()=>"Expected the rank of labels to be 1, but got "+r.rank),$["b"](1===a.rank,()=>"Expected the rank of predictions to be 1, but got "+a.rank),$["b"](r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),$["b"](n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+n);const s=Object(Fe["a"])(Object(ne["a"])(r,"int32"),n),o=Object(Fe["a"])(Object(ne["a"])(a,"int32"),n),i=Object(Me["a"])(s),c=Object(_e["a"])(i,o);return Object(ne["a"])(c,"int32")}const Pe=Object(De["b"])({confusionMatrix_:Le});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Be=n("c05b"),ze=n("73b8"),Ve=n("05bb");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let We;function Ue(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);i=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}const c=Object(ze["c"])(Be["ib"],p["a"].backendName);if(null!=c){const n={pixels:e},r={numChannels:t};return p["a"].runKernel(Be["ib"],n,r)}const[u,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let d,f;if(o?d=e.getContext("2d").getImageData(0,0,u,l).data:r||n?d=e.data:(s||a||i)&&(null==We&&(We=document.createElement("canvas").getContext("2d")),We.canvas.width=u,We.canvas.height=l,We.drawImage(e,0,0,u,l),d=We.getImageData(0,0,u,l).data),4===t)f=new Int32Array(d);else{const e=u*l;f=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)f[n*t+e]=d[4*n+e]}const h=[l,u,t];return Object(Ve["a"])(f,h,"int32")}function Ge(e){return null!=e&&e.data instanceof Uint8Array}function He(){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")}function qe(e){return null!=e&&0!==e.width&&0!==e.height}function Ke(e){return He()&&!(e instanceof ImageBitmap)&&qe(e)&&!Ge(e)}async function Xe(e,t=3){let n=null;if(Object(f["c"])().getBool("WRAP_TO_IMAGEBITMAP")&&Ke(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Ue(n,t)}async function Ye(e,t){let n=Object(Re["a"])(e,"img","toPixels");if(!(e instanceof se["a"])){const e=n;n=Object(ne["a"])(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+s);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const o=await n.data(),i="float32"===n.dtype?255:1,c=new Uint8ClampedArray(a*r*4);for(let u=0;u<r*a;++u){const e=[0,0,0,255];for(let r=0;r<s;r++){const t=o[u*s+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===s?(e[0]=t*i,e[1]=t*i,e[2]=t*i):e[r]=t*i}const t=4*u;c[t+0]=Math.round(e[0]),c[t+1]=Math.round(e[1]),c[t+2]=Math.round(e[2]),c[t+3]=Math.round(e[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(c,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),c}const Qe=Object(De["b"])({fromPixels_:Ue});function Ze(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Object($["O"])(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let o=1;for(let d=0;d<a.length-1;++d)o*=a[d];const i=e.shape,c=a.slice();c.pop();let u=1;for(let d=s;d<n;++d)u*=i[d],c.push(i[d]);const l=[...Object($["j"])(e.shape).map(e=>e/u),1].slice(0,s);return[c,o,u,l]}var Je=n("a34f");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function et(e,t,n){const r=e.shape.length;$["b"](r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),$["b"](r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let a=0;a<r;++a)$["b"](t[a]+n[a]<=e.shape[a],()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`)}function tt(e){const t=[];let n=0;while(e>0)1&e&&t.push(n),e/=2,n++;return t}function nt(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function rt(e,t,n,r){const a=[...e];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)0===s?a[t]=1:(a.splice(t,0,1),a.pop());return a}function at(e,t,n){return n<=e?n:n-(t-1)}function st(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function ot(e,t,n,r,a,s,o,i,c){const u=e.length;let l=new Array(u),d=new Array(u),p=new Array(u);if(t.length&&n>0){const c=t[0],u=n+1;l=it(o,c,u,r,e),d=ct(i,c,u,a,e),p=rt(s,c,u,e)}else for(let f=0;f<u;f++)l[f]=lt(o,r,s,e,f,c),d[f]=dt(i,a,s,e,f,c),p[f]=ut(s,f,c);return{begin:l,end:d,strides:p}}function it(e,t,n,r,a){const s=[...a],o=st(n,t);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=0;else{const a=at(t,n,i);let o=r[a];e&1<<a&&(o=0),s[i]=o}return s}function ct(e,t,n,r,a){const s=[...a],o=st(n,t);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{const a=at(t,n,i);let o=r[a];e&1<<a&&(o=Number.MAX_SAFE_INTEGER),s[i]=o}for(let i=0;i<s.length;i++){const e=a[i];s[i]<0&&(s[i]+=e),s[i]=$["i"](0,s[i],a[i])}return s}function ut(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function lt(e,t,n,r,a,s){let o=t[a];const i=n[a]||1;(e&1<<a||s&1<<a||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=r[a];return o<0&&(o+=c),o=$["i"](0,o,c-1),o}function dt(e,t,n,r,a,s){let o=t[a];const i=n[a]||1;(e&1<<a||s&1<<a||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=r[a];return o<0&&(o+=c),o=i>0?$["i"](0,o,c):$["i"](-1,o,c-1),o}function pt(e,t,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function ft(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function ht(e,t,n){let r;const a=e.shape.length;let s;return r="number"===typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach(e=>{$["b"](-1!==e,()=>"slice() does not support negative begin indexing.")}),s=null==n?new Array(a).fill(-1):"number"===typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map((t,n)=>t>=0?t:($["b"](-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,s]}function mt(e,t,n,r,a,s,o,i,c){let u=t.slice(),l=n.slice(),d=r;null==r&&(d=new Array(u.length));const p=tt(o);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==o&&0!==i)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==o&&0!==c)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const f=e.length-u.length,h=tt(i),m=e.slice();h.forEach(e=>{u[e]=0,l[e]=1,m.splice(e,0,1)});const{begin:b,end:g,strides:y}=ot(m,p,f,u,l,d,a,s,o);u=b,l=g,d=y;const x=tt(c);x.forEach(e=>{l[e]=u[e]+1,d[e]=1});const O=nt(u,l,d),v=O.filter((e,t)=>-1===x.indexOf(t)),k=d.every(e=>1===e);return{nonStrided:k,$begin:u,$end:l,$strides:d,size:O,newShape:m,outShape:v}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bt{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class gt{constructor(){this.classNameMap={}}static getMap(){return null==gt.instance&&(gt.instance=new gt),gt.instance}static register(e){gt.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function yt(e){Object($["b"])(null!=e.className,()=>"Class being registered does not have the static className property defined."),Object($["b"])("string"===typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),Object($["b"])(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),gt.register(e)}var xt=n("76c2"),Ot=n("d565"),vt=n("eb7e");
/** @license See the LICENSE file. */
const kt="3.6.0";var wt=n("c04e4"),It=n("9117"),Nt=n("c77c"),jt=n("a5aa"),Tt=n("163a"),St=n("93b2"),Ct=n("a09b"),Et=n("538e"),$t=n("015f");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class At extends bt{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:a[e.name]}));this.applyGradients(e)}else this.applyGradients(a);return Object(wt["d"])(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Object(Et["f"])(e,t)}dispose(){null!=this.iterations_&&Object(wt["d"])(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Object($t["a"])(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(At,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Rt extends At{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=p["a"].backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);t.forEach((t,n)=>{const r=p["a"].registeredVariables[t],a=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:t+"/accum_grad",variable:Object(wt["t"])(()=>Object(Ct["a"])(r).variable(a))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:t+"/accum_var",variable:Object(wt["t"])(()=>Object(Ct["a"])(r).variable(a))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Object(wt["t"])(()=>{const e=Object(It["a"])(Object(jt["a"])(o,this.rho),Object(jt["a"])(Object(St["a"])(s),1-this.rho)),t=Object(jt["a"])(Object(Nt["a"])(Object(Tt["a"])(Object(It["a"])(i,this.epsilon)),Object(Tt["a"])(Object(It["a"])(o,this.epsilon))),s),n=Object(It["a"])(Object(jt["a"])(i,this.rho),Object(jt["a"])(Object(St["a"])(t),1-this.rho));o.assign(e),i.assign(n);const a=Object(It["a"])(Object(jt["a"])(t,-this.learningRate),r);r.assign(a)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Object(wt["d"])(this.accumulatedGrads.map(e=>e.variable)),Object(wt["d"])(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t["learningRate"],t["rho"],t["epsilon"])}}Rt.className="Adadelta",yt(Rt);var _t=n("46b8");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ft extends At{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);t.forEach((t,n)=>{const r=p["a"].registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:t+"/accumulator",variable:Object(wt["t"])(()=>Object(_t["a"])(r.shape,this.initialAccumulatorValue).variable(e))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;Object(wt["t"])(()=>{const e=Object(It["a"])(s,Object(St["a"])(a));s.assign(e);const t=Object(It["a"])(Object(jt["a"])(Object(Nt["a"])(a,Object(Tt["a"])(Object(It["a"])(e,p["a"].backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Object(wt["d"])(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t["learningRate"],t["initialAccumulatorValue"])}}Ft.className="Adagrad",yt(Ft);var Dt=n("c9f1"),Mt=n("a009");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Lt extends At{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Object(wt["t"])(()=>{this.accBeta1=Object($t["a"])(t).variable(),this.accBeta2=Object($t["a"])(n).variable()}),null==r&&(this.epsilon=p["a"].backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Object(wt["t"])(()=>{const n=Object(Mt["a"])(1,this.accBeta1),r=Object(Mt["a"])(1,this.accBeta2);t.forEach((t,a)=>{const s=p["a"].registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:t+"/m",variable:Object(wt["t"])(()=>Object(Ct["a"])(s).variable(o))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:t+"/v",variable:Object(wt["t"])(()=>Object(Ct["a"])(s).variable(o))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const c=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=Object(It["a"])(Object(jt["a"])(c,this.beta1),Object(jt["a"])(i,1-this.beta1)),d=Object(It["a"])(Object(jt["a"])(u,this.beta2),Object(jt["a"])(Object(St["a"])(i),1-this.beta2)),f=Object(Nt["a"])(l,n),h=Object(Nt["a"])(d,r);c.assign(l),u.assign(d);const m=Object(It["a"])(Object(jt["a"])(Object(Nt["a"])(f,Object(It["a"])(Object(Tt["a"])(h),this.epsilon)),-this.learningRate),s);s.assign(m)}),this.accBeta1.assign(Object(jt["a"])(this.accBeta1,this.beta1)),this.accBeta2.assign(Object(jt["a"])(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Object(wt["d"])(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&Object(wt["d"])(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),Object(wt["t"])(()=>{this.accBeta1.assign(Object(Dt["a"])(this.beta1,this.iterations_+1)),this.accBeta2.assign(Object(Dt["a"])(this.beta2,this.iterations_+1))});const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t["learningRate"],t["beta1"],t["beta2"],t["epsilon"])}}Lt.className="Adam",yt(Lt);var Pt=n("8ae0"),Bt=n("09f4");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class zt extends At{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Object(wt["t"])(()=>{this.iteration=Object($t["a"])(0).variable(),this.accBeta1=Object($t["a"])(t).variable()}),null==r&&(this.epsilon=p["a"].backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Object(wt["t"])(()=>{const n=Object(Mt["a"])(1,this.accBeta1),r=Object(Nt["a"])(-this.learningRate,Object(It["a"])(Object(jt["a"])(this.iteration,this.decay),1));t.forEach((t,a)=>{const s=p["a"].registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:t+"/m",variable:Object(Ct["a"])(s).variable(o)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:t+"/v",variable:Object(Ct["a"])(s).variable(o)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const c=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=Object(It["a"])(Object(jt["a"])(c,this.beta1),Object(jt["a"])(i,1-this.beta1)),d=Object(jt["a"])(u,this.beta2),f=Object(Pt["a"])(i),h=Object(Bt["a"])(d,f);c.assign(l),u.assign(h);const m=Object(It["a"])(Object(jt["a"])(Object(Nt["a"])(r,n),Object(Nt["a"])(l,Object(It["a"])(h,this.epsilon))),s);s.assign(m)}),this.iteration.assign(Object(It["a"])(this.iteration,1)),this.accBeta1.assign(Object(jt["a"])(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Object(wt["d"])(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&Object(wt["d"])(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t["learningRate"],t["beta1"],t["beta2"],t["epsilon"],t["decay"])}}zt.className="Adamax",yt(zt);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Vt extends At{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);t.forEach((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=p["a"].registeredVariables[t];Object(wt["t"])(()=>{const e=Object(It["a"])(Object(jt["a"])(this.c,r),a);a.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Object(wt["l"])(Object($t["a"])(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),0!==e.length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t["learningRate"])}}Vt.className="SGD",yt(Vt);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Wt extends Vt{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Object($t["a"])(this.momentum)}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);t.forEach((t,n)=>{const r=p["a"].registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:t+"/momentum",variable:Object(wt["t"])(()=>Object(Ct["a"])(r).variable(e))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Object(wt["t"])(()=>{let e;const t=Object(It["a"])(Object(jt["a"])(this.m,a),s);e=this.useNesterov?Object(It["a"])(Object(jt["a"])(this.c,Object(It["a"])(s,Object(jt["a"])(t,this.m))),r):Object(It["a"])(Object(jt["a"])(this.c,t),r),a.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Object(wt["d"])(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t["learningRate"],t["momentum"],t["useNesterov"])}}Wt.className="Momentum",yt(Wt);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ut extends At{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=p["a"].backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);t.forEach((t,n)=>{const r=p["a"].registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:t+"/rms",variable:Object(wt["t"])(()=>Object(Ct["a"])(r).variable(a))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:t+"/momentum",variable:Object(wt["t"])(()=>Object(Ct["a"])(r).variable(a))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:t+"/mg",variable:Object(wt["t"])(()=>Object(Ct["a"])(r).variable(a))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;Object(wt["t"])(()=>{const e=Object(It["a"])(Object(jt["a"])(o,this.decay),Object(jt["a"])(Object(St["a"])(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=Object(It["a"])(Object(jt["a"])(t,this.decay),Object(jt["a"])(s,1-this.decay)),c=Object(Nt["a"])(Object(jt["a"])(s,this.learningRate),Object(Tt["a"])(Object(Mt["a"])(e,Object(It["a"])(Object(St["a"])(a),this.epsilon)))),u=Object(It["a"])(Object(jt["a"])(i,this.momentum),c);o.assign(e),t.assign(a),i.assign(u);const l=Object(Mt["a"])(r,u);r.assign(l)}else{const e=Object(It["a"])(Object(jt["a"])(o,this.decay),Object(jt["a"])(Object(St["a"])(s),1-this.decay)),t=Object(It["a"])(Object(jt["a"])(i,this.momentum),Object(Nt["a"])(Object(jt["a"])(s,this.learningRate),Object(Tt["a"])(Object(It["a"])(e,this.epsilon))));o.assign(e),i.assign(t);const n=Object(Mt["a"])(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Object(wt["d"])(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Object(wt["d"])(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&Object(wt["d"])(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t["learningRate"],t["decay"],t["momentum"],t["epsilon"],t["centered"])}}Ut.className="RMSProp",yt(Ut);var Gt=n("23bf"),Ht=n("132b"),qt=n("57e0");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Kt{static sgd(e){return new Vt(e)}static momentum(e,t,n=!1){return new Wt(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Ut(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Lt(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Rt(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new zt(e,t,n,r,a)}static adagrad(e,t=.1){return new Ft(e,t)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xt={sgd:Kt.sgd,momentum:Kt.momentum,adadelta:Kt.adadelta,adagrad:Kt.adagrad,rmsprop:Kt.rmsprop,adamax:Kt.adamax,adam:Kt.adam},Yt=(()=>"undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e())();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qt(){return new Promise(e=>Yt(()=>e()))}var Zt=n("36e5"),Jt=n("526f");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function en(e,t){const n=e[0].length;e.forEach((e,t)=>{$["b"](e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),$["b"](t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,a)=>{for(let s=0;s<n;s++)$["b"](s===t||e[s]===r[s],()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function tn(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var nn=n("b818"),rn=n("4749");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const an=30;function sn(e){return e<=an?e:Object($["G"])(e,Math.floor(Math.sqrt(e)))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function on(e,t,n){const r=n*("number"===typeof e?e:e[0]),a=t*("number"===typeof e?e:e[1]);return[r,a]}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cn(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function un(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2===1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function ln(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?r?a.push(t[s-1]*e[s]):a.push(e[s]/t[s-1]):a.push(e[s]);return a}function dn(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function pn(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fn=1.7580993408473768,hn=1.0507009873554805,mn=.3275911,bn=.254829592,gn=-.284496736,yn=1.421413741,xn=-1.453152027,On=1.061405429;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vn(...e){Object(f["c"])().getBool("IS_TEST")||console.warn(...e)}function kn(...e){Object(f["c"])().getBool("IS_TEST")||console.log(...e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wn(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function In(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Nn(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function jn(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function Tn(e,t){const n=e[2*t],r=e[2*t+1];return{real:n,imag:r}}function Sn(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Cn(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function En(e,t,n){const r=(n?2:-2)*Math.PI*(e/t),a=Math.cos(r),s=Math.sin(r);return{real:a,imag:s}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $n="->",An=/->/g,Rn=",",_n="...";function Fn(e,t){e=e.replace(/\s/g,"");const n=(e.length-e.replace(An,"").length)/$n.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${$n}").`);const[r,a]=e.split($n);Object($["b"])(-1===r.indexOf(_n),()=>`The ellipsis notation ("${_n}") is not supported yet.`);const s=r.split(Rn),o=s.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let p=0;p<a.length;++p){const e=a[p];if(!s.some(t=>-1!==t.indexOf(e)))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===i.indexOf(e)&&i.push(e)}for(let p=0;p<r.length;++p){const e=r[p];-1===i.indexOf(e)&&e!==Rn&&i.push(e)}const c=new Array(s.length);for(let p=0;p<o;++p){if(new Set(s[p].split("")).size!==s[p].length)throw new Error(`Found duplicate axes in input component ${s[p]}. Support for duplicate axes in input is not implemented yet.`);c[p]=[];for(let e=0;e<s[p].length;++e)c[p].push(i.indexOf(s[p][e]))}const u=i.length,l=a.length,d=[];for(let p=l;p<u;++p)d.push(p);return{allDims:i,summedDims:d,idDims:c}}function Dn(e,t){let n=new Array(e);n.fill(-1);for(let a=0;a<t.length;++a)n[t[a]]=a;const r=[];for(let a=0;a<e;++a)-1===n[a]&&r.push(a);return n=n.filter(e=>-1!==e),{permutationIndices:n,expandDims:r}}function Mn(e,t,n){const r=new Array(e);for(let a=0;a<n.length;++a){const e=n[a].shape;for(let n=0;n<t[a].length;++n)void 0===r[t[a][n]]?r[t[a][n]]=e[n]:Object($["b"])(r[t[a][n]]===e[n],()=>`Expected dimension ${r[t[a][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension `+e[n])}}function Ln(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let o=0;o<a;++o)r.push([]);const s=[];for(let o=0;o<n.length;++o){const e=n[o],a=Bn(t,e);for(const t of a)-1===s.indexOf(t)&&(r[o].push(t),s.push(t))}return{path:n,steps:r}}function Pn(e){return e.every((e,t)=>e===t)}function Bn(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function zn(e,t,n=0){let r=[];if("number"===typeof t)Object($["b"])(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce((e,t)=>(-1===t&&(e+=1),e),0);Object($["b"])(a<=1,()=>"There should be only one negative value in split array.");const s=t.indexOf(-1);if(-1!==s){const r=t.reduce((e,t)=>t>0?e+t:e);t[s]=e.shape[n]-r}Object($["b"])(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vn(e,t){let n,r=!1;e<=an?(n=e,r=!0):n=Object($["G"])(e,Math.floor(Math.sqrt(e)));while(!r)n>t||n===e?r=!0:n=Object($["G"])(e,n+1);return n}function Wn(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function Un(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let d=0;d<r;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);const o=e.shape[n],i=[];let c=1,u=1,l=1;for(let d=0;d<r;++d)i.push(e.shape[d]),c*=e.shape[d];for(let d=r;d<n;d++)i.push(e.shape[d]),u*=e.shape[d];for(let d=r;d<a;d++)i.push(t.shape[d]);for(let d=n+1;d<s;d++)i.push(e.shape[d]),l*=e.shape[d];return{batchSize:c,sliceSize:l,outerSize:u,dimSize:o,outputShape:i}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gn(e){try{return e.map(e=>Object(vt["decodeString"])(e))}catch(Qn){throw new Error("Failed to decode encoded string bytes into utf-8, error: "+Qn)}}function Hn(e){return e.map(e=>Object(vt["encodeString"])(e))}var qn=n("7ed6"),Kn=n("8389"),Xn=n("0280"),Yn=n("8b87")},fb0c:function(e,t,n){"use strict";n.d(t,"c",(function(){return o})),n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return c}));var r=n("fa11"),a=n("cd4a"),s=n("892a");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a["a"])(e=>Math.exp(e)),i=Object(s["b"])(r["Exp"],o),c={kernelName:r["Exp"],backendName:"cpu",kernelFunc:i}},ffb3:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(s["a"])(e,"x","sigmoid"),n={x:t};return r["a"].runKernel(a["Bc"],n)}const c=Object(o["b"])({sigmoid_:i})}}]);
//# sourceMappingURL=Tensorflow.3e0e6255.js.map